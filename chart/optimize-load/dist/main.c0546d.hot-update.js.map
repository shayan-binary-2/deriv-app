{"version":3,"sources":["webpack://smartcharts/./app/test.jsx"],"names":["setSmartChartsPublicPath","isMobile","window","navigator","userAgent","toLowerCase","includes","process","trackJSDomains","isProductionWebsite","reduce","acc","val","location","host","endsWith","_trackJs","token","application","s","document","createElement","src","body","appendChild","configure","enforceActions","getLanguageStorage","default_language","setting_string","localStorage","getItem","setting","JSON","parse","language","e","getServerUrl","local","parseQueryString","query","vars","split","query_string","i","length","pair","key","decodeURIComponent","value","arr","push","generateURL","new_params","origin","pathname","search","cleanSearch","replace","trim","params","href","Object","keys","map","join","chartId","appId","serverUrl","URLSearchParams","get","today","moment","format","connectionManager","ConnectionManager","endpoint","IntervalEnum","second","minute","hour","day","year","activeLanguagesList","streamManager","StreamManager","requestAPI","send","bind","requestSubscribe","subscribe","requestForget","forget","App","props","startingLanguage","removeAllComparisons","layoutString","layout","symbols","splice","setItem","stringify","console","log","handleNetworkStatus","status","setState","networkStatus","symbolChange","symbol","logEvent","LogCategories","ChartTitle","LogActions","MarketSelector","notifier","removeByCategory","saveSettings","settings","prevSetting","state","historical","chartType","isChartTypeCandle","granularity","endEpoch","Date","valueOf","handleDateChange","url","set","activeLanguages","toString","undefined","renderTopWidgets","openMarket","category","renderControls","crosshair","crosshairState","timePeriod","isCandle","renderToolbarWidget","onMessage","notify","onPriceLineDisableChange","evt","hidePriceLines","target","checked","onShadeColorChange","shadeColor","onColorChange","color","onFGColorChange","foregroundColor","onHighLowChange","highLow","assign","id","onRelativeChange","relative","onDraggableChange","draggable","handleBarrierChange","onBarrierTypeChange","barrierType","nextState","onAddMArker","markers","ts","utc","subtract","unix","className","xPositioner","yPositioner","onWidget","prevState","enabledNavigationWidget","onFooter","enabledFooter","toggleStartEpoch","scrollToEpoch","onLeftOffset","leftOffset","onActiveLanguage","activeLanguage","onLanguage","baseUrl","protocol","onCrosshair","parseInt","onActiveSymbol","onOpenMarket","marketArray","subcategory","market","setTimeout","handleScroll","enableScroll","handleZoom","enableZoom","handleRefreshActiveSymbols","refreshActiveSymbols","onChartSize","zoom","onMaxTick","maxTick","onInitalDataTradingTime","initialdata_tradingTimes","currentTarget","onInitalDataActiveSymbols","initialdata_activeSymbols","onInitalDataMasterData","initialdata_masterData","onFeedCallTradingTime","feedcall_tradingTimes","onFeedCallActiveSymbols","feedcall_activeSymbols","ChartNotifier","createObjectFromLocalStorage","feedCall","initialData","timeUnit","interval","aggregationType","indexOf","on","EVENT_CONNECTION_CLOSE","isConnectionOpened","EVENT_CONNECTION_REOPEN","networkMonitor","NetworkMonitor","getInstance","init","urlParams","marketsOrder","getMarketsOrder","tradingTimes","activeSymbols","masterData","MockTradingTime","MockActiveSymbol","startEpoch","high","low","barriers","shade","theme","onChange","lineStyle","diplay","x","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"main.c0546d.hot-update.js","sourcesContent":["import { // eslint-disable-line import/no-extraneous-dependencies,import/no-unresolved\n    SmartChart,\n    ChartMode,\n    StudyLegend,\n    Comparison,\n    Views,\n    CrosshairToggle,\n    ChartSize,\n    DrawTools,\n    ChartSetting,\n    createObjectFromLocalStorage,\n    setSmartChartsPublicPath,\n    Share,\n    ChartTitle,\n    logEvent,\n    LogCategories,\n    LogActions,\n    Marker,\n    ToolbarWidget,\n} from '@binary-com/smartcharts'; // eslint-disable-line import/no-unresolved\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport moment from 'moment';\nimport 'url-search-params-polyfill';\nimport { configure } from 'mobx';\nimport './app.scss';\nimport './test.scss';\nimport whyDidYouRender from '@welldone-software/why-did-you-render';\nimport { ConnectionManager, StreamManager } from './connection';\nimport Notification from './Notification.jsx';\nimport ChartNotifier from './ChartNotifier.js';\nimport ChartHistory from './ChartHistory.jsx';\nimport NetworkMonitor from './connection/NetworkMonitor';\nimport { MockActiveSymbol, MockTradingTime, masterData } from './initialData';\n\nsetSmartChartsPublicPath('./dist/');\n\nconst isMobile = window.navigator.userAgent.toLowerCase().includes('mobi');\n\nif (process.env.NODE_ENV === 'production') {\n    whyDidYouRender(React, {\n        collapseGroups: true,\n        include: [/.*/],\n        exclude: [/^RenderInsideChart$/, /^inject-/],\n    });\n}\n\nconst trackJSDomains = ['binary.com', 'binary.me'];\nwindow.isProductionWebsite = trackJSDomains.reduce((acc, val) => (acc || window.location.host.endsWith(val)), false);\n\nif (window.isProductionWebsite) {\n    window._trackJs = { token: '346262e7ffef497d85874322fff3bbf8', application: 'smartcharts' };\n    const s = document.createElement('script');\n    s.src = 'https://cdn.trackjs.com/releases/current/tracker.js';\n    document.body.appendChild(s);\n}\n\n/* // PWA support is temporarily removed until its issues can be sorted out\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.register(`${window.location.origin + window.location.pathname}sw.js`)\n        .then(() => {\n            console.log('Service Worker Registered');\n        }).catch((registrationError) => {\n            console.log('SW registration failed: ', registrationError);\n        });\n}\n*/\n\nconfigure({ enforceActions: 'observed' });\n\nfunction getLanguageStorage() {\n    const default_language = 'en';\n    try {\n        const setting_string = localStorage.getItem('smartchart-setting'),\n            setting = JSON.parse(setting_string !== '' ? setting_string : '{}');\n\n        return setting.language || default_language;\n    } catch (e) {\n        return default_language;\n    }\n}\n\nfunction getServerUrl() {\n    const local = localStorage.getItem('config.server_url');\n    return `wss://${local || 'ws.binaryws.com'}/websockets/v3`;\n}\n\nconst parseQueryString = (query) => {\n    const vars = query.split('&');\n    const query_string = {};\n    for (let i = 0; i < vars.length; i++) {\n        const pair = vars[i].split('=');\n        const key = decodeURIComponent(pair[0]);\n        const value = decodeURIComponent(pair[1]);\n        // If first entry with this name\n        if (typeof query_string[key] === 'undefined') {\n            query_string[key] = decodeURIComponent(value);\n            // If second entry with this name\n        } else if (typeof query_string[key] === 'string') {\n            const arr = [query_string[key], decodeURIComponent(value)];\n            query_string[key] = arr;\n            // If third or later entry with this name\n        } else {\n            query_string[key].push(decodeURIComponent(value));\n        }\n    }\n    return query_string;\n};\nconst generateURL = (new_params) => {\n    const { origin, pathname, search } = window.location;\n    const cleanSearch = search.replace('?', '').trim();\n    const params = {\n        ...(cleanSearch !== '' ? parseQueryString(cleanSearch) : {}),\n        ...new_params,\n    };\n\n    window.location.href = `${origin}${pathname}?${Object.keys(params).map(key => `${key}=${params[key]}`).join('&')}`;\n};\n\nconst chartId = '1';\nconst appId = localStorage.getItem('config.app_id') || 12812;\nconst serverUrl = getServerUrl();\nconst language = new URLSearchParams(window.location.search).get('l') || getLanguageStorage();\nconst today = moment().format('YYYY/MM/DD 00:00');\nconst connectionManager = new ConnectionManager({\n    appId,\n    language,\n    endpoint: serverUrl,\n});\nconst IntervalEnum = {\n    second: 1,\n    minute: 60,\n    hour: 3600,\n    day: 24 * 3600,\n    year: 365 * 24 * 3600,\n};\nconst activeLanguagesList = ['ID', 'FR', 'IT', 'PT', 'DE'];\n\nconst streamManager = new StreamManager(connectionManager);\nconst requestAPI = connectionManager.send.bind(connectionManager);\nconst requestSubscribe = streamManager.subscribe.bind(streamManager);\nconst requestForget = streamManager.forget.bind(streamManager);\n\nclass App extends Component {\n    startingLanguage = 'en';\n\n    constructor(props) {\n        super(props);\n        this.notifier = new ChartNotifier();\n        const layoutString = localStorage.getItem(`layout-${chartId}`),\n            layout = JSON.parse(layoutString !== '' ? layoutString : '{}');\n        let chartType;\n        let isChartTypeCandle;\n        let granularity = 60;\n        let endEpoch;\n        let settings = createObjectFromLocalStorage('smartchart-setting');\n        const activeLanguage = new URLSearchParams(window.location.search).get('activeLanguage') === 'true';\n        const feedCall = {};\n        const initialData = {};\n\n        if (settings) {\n            settings.language = language;\n            this.startingLanguage = settings.language;\n        } else {\n            settings = { language };\n        }\n        settings.activeLanguages = activeLanguage ? activeLanguagesList : null;\n        if (settings.historical) {\n            this.removeAllComparisons();\n            endEpoch = (new Date(`${today}:00Z`).valueOf() / 1000);\n            chartType = 'line';\n            isChartTypeCandle = false;\n            if (layout) {\n                granularity = layout.timeUnit === 'second' ? 0 : parseInt(layout.interval * IntervalEnum[layout.timeUnit], 10);\n\n                if (layout.chartType === 'candle' && layout.aggregationType !== 'ohlc') {\n                    chartType = layout.aggregationType;\n                } else {\n                    chartType = layout.chartType;\n                }\n\n                if (['mountain', 'line', 'colored_line', 'spline', 'baseline'].indexOf(chartType) === -1) {\n                    isChartTypeCandle = true;\n                }\n            }\n        }\n\n        connectionManager.on(\n            ConnectionManager.EVENT_CONNECTION_CLOSE,\n            () => this.setState({ isConnectionOpened: false }),\n        );\n        connectionManager.on(\n            ConnectionManager.EVENT_CONNECTION_REOPEN,\n            () => this.setState({ isConnectionOpened: true }),\n        );\n\n        const networkMonitor = NetworkMonitor.getInstance();\n        networkMonitor.init(requestAPI, this.handleNetworkStatus);\n\n        const urlParams = parseQueryString(window.location.search.replace('?', ''));\n        const marketsOrder = urlParams.marketsOrder || 'null';\n        const getMarketsOrder = marketsOrder !== '' && marketsOrder !== 'null' ? () => marketsOrder.split(',') : undefined;\n\n        if (urlParams.feedcall_tradingTimes === 'false') feedCall.tradingTimes = false;\n        if (urlParams.feedcall_activeSymbols === 'false') feedCall.activeSymbols = false;\n        if (urlParams.initialdata_masterData === 'true') initialData.masterData = masterData();\n        if (urlParams.initialdata_tradingTimes === 'true') initialData.tradingTimes = MockTradingTime;\n        if (urlParams.initialdata_activeSymbols === 'true') initialData.activeSymbols = MockActiveSymbol;\n\n        this.state = {\n            settings,\n            endEpoch,\n            chartType,\n            isChartTypeCandle,\n            granularity,\n            activeLanguage,\n            isConnectionOpened: true,\n            enabledFooter: true,\n            enableScroll: null,\n            enableZoom: null,\n            highLow: {},\n            barrierType: '',\n            draggable: true,\n            markers: [],\n            crosshairState: 1,\n            openMarket: {},\n            getMarketsOrder,\n            refreshActiveSymbols: false,\n            initialData,\n            feedCall,\n        };\n    }\n\n    /*\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.state.symbol !== nextState.symbol\n            || JSON.stringify(this.state.settings) !== JSON.stringify(nextState.settings);\n    }\n    */\n    removeAllComparisons = () => {\n        try {\n            const layoutString = localStorage.getItem(`layout-${chartId}`),\n                layout = JSON.parse(layoutString !== '' ? layoutString : '{}');\n\n            layout.symbols.splice(1, layout.symbols.length - 1);\n            localStorage.setItem(`layout-${chartId}`, JSON.stringify(layout));\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    handleNetworkStatus = status => this.setState({ networkStatus: status });\n\n    symbolChange = (symbol) => {\n        logEvent(LogCategories.ChartTitle, LogActions.MarketSelector, symbol);\n        this.notifier.removeByCategory('activesymbol');\n        this.setState({ symbol });\n    };\n\n    saveSettings = (settings) => {\n        const prevSetting = this.state.settings;\n        console.log('settings updated:', settings);\n        localStorage.setItem('smartchart-setting', JSON.stringify(settings));\n\n\n        if (!prevSetting.historical && settings.historical) {\n            this.setState({\n                chartType: 'mountain',\n                isChartTypeCandle: false,\n                granularity: 0,\n                endEpoch: (new Date(`${today}:00Z`).valueOf() / 1000),\n            });\n            this.removeAllComparisons();\n        } else if (!settings.historical) {\n            this.handleDateChange('');\n        }\n\n        this.setState({ settings });\n        if (this.startingLanguage !== settings.language) {\n            // Place language in URL:\n            const { origin, search, pathname } = window.location;\n            const url = new URLSearchParams(search);\n            url.delete('l');\n            url.set('l', settings.language);\n            url.set('activeLanguage', prevSetting.activeLanguages ? 'true' : 'false');\n            window.location.href = `${origin}${pathname}?${url.toString()}`;\n        }\n    };\n\n    handleDateChange = (value) => {\n        this.setState({ endEpoch: (value !== '') ? (new Date(`${value}:00Z`).valueOf() / 1000) : undefined });\n    };\n\n    renderTopWidgets = () => (\n        <React.Fragment>\n            <ChartTitle\n                onChange={this.symbolChange}\n                open_market={this.state.openMarket}\n                open={!!this.state.openMarket.category}\n            />\n            {!!this.state.settings.historical && <ChartHistory onChange={this.handleDateChange} />}\n            <Notification\n                notifier={this.notifier}\n            />\n        </React.Fragment>\n    );\n\n    renderControls = () => (\n        <React.Fragment>\n            {isMobile ? '' : (\n                <CrosshairToggle\n                    isVisible={false}\n                    onChange={crosshair => this.setState({ crosshairState: crosshair })}\n                />\n            )}\n            <ChartMode\n                portalNodeId=\"portal-node\"\n                onChartType={(chartType, isChartTypeCandle) => {\n                    this.setState({\n                        chartType,\n                        isChartTypeCandle,\n                    });\n                }}\n                onGranularity={(timePeriod) => {\n                    this.setState({\n                        granularity: timePeriod,\n                    });\n                    const isCandle = this.state.isChartTypeCandle;\n                    if (isCandle && timePeriod === 0) {\n                        this.setState({\n                            chartType: 'mountain',\n                            isChartTypeCandle: false,\n                        });\n                    } else if (!isCandle && timePeriod !== 0) {\n                        this.setState({\n                            chartType: 'candle',\n                            isChartTypeCandle: true,\n                        });\n                    }\n                }}\n            />\n            <StudyLegend portalNodeId=\"portal-node\" />\n            {this.state.settings.historical ? '' : <Comparison />}\n            <DrawTools portalNodeId=\"portal-node\" />\n            <Views />\n            <Share portalNodeId=\"portal-node\" />\n            {isMobile ? '' : <ChartSize />}\n            <ChartSetting />\n        </React.Fragment>\n    );\n\n    renderToolbarWidget = () => (\n        <ToolbarWidget>\n            <ChartMode\n                portalNodeId=\"portal-node\"\n                onChartType={(chartType, isChartTypeCandle) => {\n                    this.setState({\n                        chartType,\n                        isChartTypeCandle,\n                    });\n                }}\n                onGranularity={(timePeriod) => {\n                    this.setState({\n                        granularity: timePeriod,\n                    });\n                    const isCandle = this.state.isChartTypeCandle;\n                    if (isCandle && timePeriod === 0) {\n                        this.setState({\n                            chartType: 'mountain',\n                            isChartTypeCandle: false,\n                        });\n                    } else if (!isCandle && timePeriod !== 0) {\n                        this.setState({\n                            chartType: 'candle',\n                            isChartTypeCandle: true,\n                        });\n                    }\n                }}\n            />\n            <StudyLegend portalNodeId=\"portal-node\" />\n            <Views portalNodeId=\"portal-node\" />\n            <DrawTools portalNodeId=\"portal-node\" />\n            <Share portalNodeId=\"portal-node\" />\n        </ToolbarWidget>\n    );\n\n    onMessage = e => this.notifier.notify(e);\n\n    onPriceLineDisableChange = evt => this.setState({ hidePriceLines: evt.target.checked });\n\n    onShadeColorChange = evt => this.setState({ shadeColor: evt.target.value });\n\n    onColorChange = evt => this.setState({ color: evt.target.value });\n\n    onFGColorChange = evt => this.setState({ foregroundColor: evt.target.value });\n\n    onHighLowChange = (evt) => {\n        const { highLow } = this.state;\n\n        this.setState({\n            highLow: Object.assign(highLow, { [evt.target.id]: +evt.target.value }),\n        });\n    };\n\n    onRelativeChange = evt => this.setState({ relative: evt.target.checked });\n\n    onDraggableChange = evt => this.setState({ draggable: evt.target.checked });\n\n    handleBarrierChange = evt => this.setState({ highLow: evt });\n\n    onBarrierTypeChange = (evt) => {\n        const { value: barrierType } = evt.target;\n        const nextState = (barrierType === '') ? { highLow: {} } : {};\n        this.setState({ ...nextState, barrierType });\n    };\n\n    onAddMArker = (evt) => {\n        let { markers } = this.state;\n        markers = [];\n\n        switch (evt.target.value) {\n        case 'LINE':\n            for (let i = 0; i < 5; i++) {\n                markers.push({\n                    ts: moment().utc().second(0).subtract(i + 3, 'minutes')\n                        .unix(),\n                    className: 'chart-marker-line',\n                    xPositioner: 'epoch',\n                    yPositioner: 'top',\n                });\n            }\n            break;\n        case 'CIRCLE':\n            for (let i = 0; i < 15; i++) {\n                markers.push({\n                    ts: moment().utc().second(0).subtract(i + 3, 'minutes')\n                        .unix(),\n                    className: 'chart-marker-circle',\n                    xPositioner: 'epoch',\n                    yPositioner: 'value',\n                });\n            }\n            break;\n        default:\n            markers = [];\n        }\n        this.setState({ markers });\n    }\n\n    onWidget = () => this.setState(prevState => ({ enabledNavigationWidget: !prevState.enabledNavigationWidget }));\n\n    onFooter = () => this.setState(prevState => ({ enabledFooter: !prevState.enabledFooter }));\n\n    toggleStartEpoch = () => {\n        if (this.state.scrollToEpoch) {\n            this.setState({\n                scrollToEpoch: undefined,\n            });\n        } else {\n            this.setState({\n                scrollToEpoch: moment.utc().unix(),\n            });\n        }\n    };\n\n    onLeftOffset = (evt) => {\n        this.setState({\n            leftOffset: +evt.target.value,\n        });\n    };\n\n    onActiveLanguage = () => {\n        this.setState(prevState => ({\n            activeLanguage: !prevState.activeLanguage,\n            settings: {\n                ...prevState.settings,\n                activeLanguages: !prevState.activeLanguage ? activeLanguagesList : null,\n            },\n        }));\n    }\n\n    onLanguage = (evt) => {\n        const { settings } = this.state;\n        const baseUrl = `${window.location.protocol}//${window.location.host}${window.location.pathname}`;\n        window.location.href = `${baseUrl}?l=${evt.target.value}&activeLanguage=${settings.activeLanguages ? 'true' : 'false'}`;\n    }\n\n    onCrosshair = (evt) => {\n        const value = evt.target.value;\n        this.setState({\n            crosshairState: value === 'null' ? null : parseInt(value, 10),\n        });\n    }\n\n    onActiveSymbol = (evt) => {\n        const baseUrl = `${window.location.protocol}//${window.location.host}${window.location.pathname}`;\n        window.location.href = `${baseUrl}?marketsOrder=${evt.target.value}`;\n    };\n\n    onOpenMarket = (evt) => {\n        const marketArray = evt.target.value.split(',');\n        if (marketArray.length === 0) return;\n\n        this.setState({\n            openMarket: {\n                category: marketArray[0],\n                subcategory: marketArray[1] || null,\n                market: marketArray[2] || null,\n            },\n        });\n\n        setTimeout(() => {\n            this.setState({\n                openMarket: {},\n            });\n        }, 500);\n    };\n\n    handleScroll = () => this.setState(prevState => ({\n        enableScroll: !prevState.enableScroll,\n    }));\n\n    handleZoom = () => this.setState(prevState => ({\n        enableZoom: !prevState.enableZoom,\n    }));\n\n    handleRefreshActiveSymbols = () => {\n        this.setState({\n            refreshActiveSymbols: true,\n        }, () => {\n            this.setState({\n                refreshActiveSymbols: false,\n            });\n        });\n    }\n\n    onChartSize = (state) => {\n        this.setState({\n            zoom: state,\n        });\n\n        setTimeout(() => {\n            this.setState({\n                zoom: 0,\n            });\n        }, 300);\n    }\n\n    onMaxTick = (evt) => {\n        const value = evt.target.value;\n        this.setState({\n            maxTick: value === 'null' ? null : parseInt(value, 10),\n        });\n    }\n\n    /**\n     * Initial Data\n     */\n    onInitalDataTradingTime = evt => generateURL({ initialdata_tradingTimes: evt.currentTarget.checked });\n    onInitalDataActiveSymbols = evt => generateURL({ initialdata_activeSymbols: evt.currentTarget.checked });\n    onInitalDataMasterData = evt => generateURL({ initialdata_masterData: evt.currentTarget.checked });\n    onFeedCallTradingTime = evt => generateURL({ feedcall_tradingTimes: evt.currentTarget.checked });\n    onFeedCallActiveSymbols = evt => generateURL({ feedcall_activeSymbols: evt.currentTarget.checked })\n\n    render() {\n        const { settings, isConnectionOpened, symbol, endEpoch, startEpoch,\n            barrierType, highLow: { high, low }, hidePriceLines,\n            draggable, relative, shadeColor, scrollToEpoch,\n            leftOffset, color, foregroundColor, markers, feedCall,\n            enabledNavigationWidget, activeLanguage,\n            crosshairState, zoom, maxTick, initialData } = this.state;\n        const barriers = barrierType ? [{\n            shade: barrierType,\n            shadeColor,\n            foregroundColor: foregroundColor || null,\n            color: color || (settings.theme === 'light' ? '#39b19d' : '#555975'),\n            onChange: this.handleBarrierChange,\n            relative,\n            draggable,\n            lineStyle: 'solid',\n            hidePriceLines,\n            high,\n            low,\n        }] : [];\n\n        return (\n            <div className=\"test-container\" style={{ diplay: 'block' }}>\n                <div id=\"portal-node\" className=\"portal-node\" />\n                <div className=\"chart-section\">\n                    <SmartChart\n                        id={chartId}\n                        symbol={symbol}\n                        isMobile={isMobile}\n                        onMessage={this.onMessage}\n                        enableRouting\n                        enableScroll={this.state.enableScroll}\n                        enableZoom={this.state.enableZoom}\n                        chartControlsWidgets={null}\n                        enabledNavigationWidget={enabledNavigationWidget}\n                        enabledChartFooter={this.state.enabledFooter}\n                        removeAllComparisons={settings.historical}\n                        topWidgets={this.renderTopWidgets}\n                        settings={settings}\n                        initialData={initialData}\n                        feedCall={feedCall}\n                        requestAPI={requestAPI}\n                        requestSubscribe={requestSubscribe}\n                        requestForget={requestForget}\n                        toolbarWidget={this.renderToolbarWidget}\n                        endEpoch={endEpoch}\n                        startEpoch={startEpoch}\n                        chartType={this.state.chartType}\n                        granularity={this.state.granularity}\n                        onSettingsChange={this.saveSettings}\n                        isConnectionOpened={isConnectionOpened}\n                        barriers={barriers}\n                        scrollToEpoch={scrollToEpoch}\n                        scrollToEpochOffset={leftOffset}\n                        crosshairState={crosshairState}\n                        getMarketsOrder={this.state.getMarketsOrder}\n                        zoom={zoom}\n                        maxTick={maxTick}\n                        networkStatus={this.state.networkStatus}\n                        refreshActiveSymbols={this.state.refreshActiveSymbols}\n                    >\n                        {endEpoch ? (\n                            <Marker\n                                className=\"chart-marker-historical\"\n                                x={endEpoch}\n                                xPositioner=\"epoch\"\n                                yPositioner=\"top\"\n                            ><span>{moment(endEpoch * 1000).utc().format('DD MMMM YYYY - HH:mm')}</span>\n                            </Marker>\n                        ) : ''}\n                        {markers.map(x => (\n                            <Marker\n                                key={x.ts}\n                                className={x.className}\n                                x={x.ts}\n                                xPositioner={x.xPositioner}\n                                yPositioner={x.yPositioner}\n                            />\n                        ))}\n                    </SmartChart>\n                </div>\n                <div className=\"action-section\">\n                    <div className=\"form-row\">\n                        <strong>Toggle</strong>\n                    </div>\n                    <div className=\"form-row\">\n                        <button type=\"button\" onClick={this.onWidget}>Navigate Widget</button>\n                        <button type=\"button\" onClick={this.onFooter}>Footer</button>\n                        <button type=\"button\" onClick={this.onActiveLanguage}>Active Lang: {activeLanguage ? 'ON' : 'OFF'}</button>\n                        <button type=\"button\" onClick={this.handleScroll}>Enable/Disable Scroll</button>\n                        <button type=\"button\" onClick={this.handleZoom}>Enable/Disable Zoom</button>\n                        <button type=\"button\" onClick={this.handleRefreshActiveSymbols}>Refresh ActiveSymbol</button>\n                    </div>\n                    <div className=\"form-row\">\n                        <button type=\"button\" onClick={() => this.onChartSize(1)}>Zoom in</button>\n                        <button type=\"button\" onClick={() => this.onChartSize(-1)}>Zoom out</button>\n                    </div>\n                    <div className=\"form-row\">\n                        <select onChange={this.onActiveSymbol}>\n                            <option value=\"\"> -- Set Active Symbols -- </option>\n                            <option value=\"null\">Default</option>\n                            <option value=\"synthetic_index,forex,indices,stocks,commodities\">synthetic_index,forex,indices,stocks,commodities</option>\n                            <option value=\"synthetic_index,indices,stocks,commodities,forex\">synthetic_index,indices,stocks,commodities,forex</option>\n                        </select>\n                    </div>\n\n                    <div className=\"form-row\">\n                        <select onChange={this.onOpenMarket}>\n                            <option value=\"\"> -- Open Market -- </option>\n                            <option value=\"indices,europe,OTC_FCHI\">indices - europe - OTC_FCHI</option>\n                            <option value=\"synthetic_index,continuous-indices,1HZ10V\">Synthetic Index - Continuous Indices - 1HZ10V</option>\n                            <option value=\"forex,minor-pairs\">Forex - minor-pairs </option>\n                        </select>\n                    </div>\n\n                    <div className=\"form-row\">\n                        Crosshair State <br />\n                        <select onChange={this.onCrosshair}>\n                            <option value=\"null\">not set</option>\n                            <option value=\"0\">state 0</option>\n                            <option value=\"1\">state 1</option>\n                            <option value=\"2\">state 2</option>\n                        </select>\n                    </div>\n                    <div className=\"form-row\">\n                        Max Tick <br />\n                        <select onChange={this.onMaxTick}>\n                            <option value=\"null\">not set</option>\n                            <option value=\"5\">5</option>\n                            <option value=\"10\">10</option>\n                            <option value=\"20\">20</option>\n                        </select>\n                    </div>\n                    <div className=\"form-row\">\n                        Language <br />\n                        <select onChange={this.onLanguage}>\n                            <option value=\"\">None</option>\n                            <option value=\"en\">English</option>\n                            <option value=\"pt\">Português</option>\n                            <option value=\"de\">Deutsch</option>\n                            <option value=\"fr\">French</option>\n                            <option value=\"pl\">Polish</option>\n                            <option value=\"ar\">Arabic(not supported)</option>\n                        </select>\n                    </div>\n                    <div className=\"form-row\">\n                        Markers <br />\n                        <select onChange={this.onAddMArker}>\n                            <option value=\"\">None</option>\n                            <option value=\"LINE\">Line</option>\n                            <option value=\"CIRCLE\">Circle</option>\n                        </select>\n                    </div>\n                    <div className=\"form-row\">\n                        barrier type:&nbsp;\n                        <select onChange={this.onBarrierTypeChange} defaultValue={barrierType}>\n                            <option value=\"\">disable</option>\n                            <option value=\"NONE_SINGLE\">NONE_SINGLE</option>\n                            <option value=\"NONE_DOUBLE\">NONE_DOUBLE</option>\n                            <option value=\"ABOVE\">ABOVE</option>\n                            <option value=\"BELOW\">BELOW</option>\n                            <option value=\"BETWEEN\">BETWEEN</option>\n                            <option value=\"OUTSIDE\">OUTSIDE</option>\n                        </select>\n                    </div>\n                    <div className=\"form-row\">\n                        barrier shade bg color:&nbsp;\n                        <select onChange={this.onShadeColorChange}>\n                            <option value=\"GREEN\">GREEN</option>\n                            <option value=\"RED\">RED</option>\n                            <option value=\"YELLOW\">YELLOW</option>\n                            <option value=\"ORANGERED\">ORANGERED</option>\n                            <option value=\"PURPLE\">PURPLE</option>\n                            <option value=\"BLUE\">BLUE</option>\n                            <option value=\"DEEPPINK\">DEEPPINK</option>\n                        </select>\n                    </div>\n                    <div className=\"form-row\">\n                        barrier bg color:&nbsp;\n                        <select onChange={this.onColorChange}>\n                            <option value=\"GREEN\">GREEN</option>\n                            <option value=\"RED\">RED</option>\n                            <option value=\"YELLOW\">YELLOW</option>\n                            <option value=\"ORANGERED\">ORANGERED</option>\n                            <option value=\"PURPLE\">PURPLE</option>\n                            <option value=\"BLUE\">BLUE</option>\n                            <option value=\"DEEPPINK\">DEEPPINK</option>\n                        </select>\n                    </div>\n                    <div className=\"form-row\">\n                        barrier foreground color:<br />\n                        <select id=\"barrierFGColor\" onChange={this.onFGColorChange}>\n                            <option>NONE</option>\n                            <option value=\"#ffffff\">WHITE</option>\n                            <option value=\"#00ff00\">GREEN</option>\n                            <option value=\"#ff0000\">RED</option>\n                            <option value=\"#000000\">BLACK</option>\n                        </select>\n                    </div>\n                    <div className=\"form-row\">\n                        <b>low:</b> <input id=\"low\" type=\"number\" value={low === undefined ? '' : low} onChange={this.onHighLowChange} />\n                    </div>\n                    <div className=\"form-row\">\n                        <b>high:</b> <input id=\"high\" type=\"number\" value={high === undefined ? '' : high} onChange={this.onHighLowChange} />\n                    </div>\n                    <div className=\"form-row\">\n                        No PriceLine: <input type=\"checkbox\" checked={hidePriceLines === undefined ? '' : hidePriceLines} onChange={this.onPriceLineDisableChange} />\n                    </div>\n                    <div className=\"form-row\">\n                        Relative: <input type=\"checkbox\" checked={relative === undefined ? '' : relative} onChange={this.onRelativeChange} />\n                    </div>\n                    <div className=\"form-row\">\n                        Draggable: <input type=\"checkbox\" checked={draggable === undefined ? '' : draggable} onChange={this.onDraggableChange} />\n                    </div>\n                    <div className=\"form-row\">\n                        Toggle StartEpoch: <button type=\"button\" onClick={this.toggleStartEpoch}>Toggle</button> <br />\n                        LeftOffset(bars): <input type=\"number\" value={leftOffset || 0} onChange={this.onLeftOffset} />\n                    </div>\n                    <div className=\"card\">\n                        <h3>InitialData</h3>\n                        <div className=\"card-body\">\n                            <div className=\"form-row\">\n                                tradingTime: <input type=\"checkbox\" checked={!!initialData.tradingTimes} onChange={this.onInitalDataTradingTime} />\n                            </div>\n                            <div className=\"form-row\">\n                                activeSymbols: <input type=\"checkbox\" checked={!!initialData.activeSymbols} onChange={this.onInitalDataActiveSymbols} />\n                            </div>\n                            <div className=\"form-row\">\n                                masterData: <input type=\"checkbox\" checked={!!initialData.masterData} onChange={this.onInitalDataMasterData} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card\">\n                        <h3>FeedCall</h3>\n                        <div className=\"card-body\">\n                            <div className=\"form-row\">\n                                tradingTime: <input type=\"checkbox\" checked={feedCall.tradingTimes !== false} onChange={this.onFeedCallTradingTime} />\n                            </div>\n                            <div className=\"form-row\">\n                                activeSymbols: <input type=\"checkbox\" checked={feedCall.activeSymbols !== false} onChange={this.onFeedCallActiveSymbols} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}