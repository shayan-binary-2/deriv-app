(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~account-info~~76995eb5"],{

/***/ "../../components/lib/money.css":
/*!************************************************************!*\
  !*** /var/www/deriv-app/packages/components/lib/money.css ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vY29tcG9uZW50cy9saWIvbW9uZXkuY3NzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy92YXIvd3d3L2Rlcml2LWFwcC9wYWNrYWdlcy9jb21wb25lbnRzL2xpYi9tb25leS5jc3M/YmI4YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../components/lib/money.css\n");

/***/ }),

/***/ "../../components/lib/money.js":
/*!***********************************************************!*\
  !*** /var/www/deriv-app/packages/components/lib/money.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(e,n){ true?module.exports=n(__webpack_require__(/*! prop-types */ \"../../components/node_modules/prop-types/index.js\"),__webpack_require__(/*! react */ \"../node_modules/react/index.js\"),__webpack_require__(/*! classnames */ \"../../components/node_modules/classnames/index.js\"),__webpack_require__(/*! @deriv/shared/utils/currency */ \"../../shared/utils/currency.js\")):undefined}(window,(function(__WEBPACK_EXTERNAL_MODULE__0__,__WEBPACK_EXTERNAL_MODULE__1__,__WEBPACK_EXTERNAL_MODULE__2__,__WEBPACK_EXTERNAL_MODULE__24__){return function(e){var n={};function c(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,c),r.l=!0,r.exports}return c.m=e,c.c=n,c.d=function(e,n,t){c.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},c.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},c.t=function(e,n){if(1&n&&(e=c(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(c.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var r in e)c.d(t,r,function(n){return e[n]}.bind(null,r));return t},c.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return c.d(n,\"a\",n),n},c.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},c.p=\"\",c(c.s=140)}({0:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__0__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJwcm9wLXR5cGVzXCI/MzgzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzBfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///0\\n\")},1:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__1__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18xX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///1\\n\")},140:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('// ESM COMPAT FLAG\\n__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: external \"classnames\"\\nvar external_classnames_ = __webpack_require__(2);\\nvar external_classnames_default = /*#__PURE__*/__webpack_require__.n(external_classnames_);\\n\\n// EXTERNAL MODULE: external \"prop-types\"\\nvar external_prop_types_ = __webpack_require__(0);\\nvar external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(1);\\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\\n\\n// EXTERNAL MODULE: external \"@deriv/shared/utils/currency\"\\nvar currency_ = __webpack_require__(24);\\nvar currency_default = /*#__PURE__*/__webpack_require__.n(currency_);\\n\\n// CONCATENATED MODULE: ./src/components/money/money.jsx\\n\\n\\n\\n\\n\\nvar money_Money = function Money(_ref) {\\n  var amount = _ref.amount,\\n      className = _ref.className,\\n      _ref$currency = _ref.currency,\\n      currency = _ref$currency === void 0 ? \\'USD\\' : _ref$currency,\\n      has_sign = _ref.has_sign,\\n      _ref$should_format = _ref.should_format,\\n      should_format = _ref$should_format === void 0 ? true : _ref$should_format;\\n  var sign = \\'\\';\\n\\n  if (+amount && (amount < 0 || has_sign)) {\\n    sign = amount > 0 ? \\'+\\' : \\'-\\';\\n  } // if it\\'s formatted already then don\\'t make any changes unless we should remove extra -/+ signs\\n\\n\\n  var value = has_sign || should_format ? Math.abs(amount) : amount;\\n  var final_amount = should_format ? currency_default.a.formatMoney(currency, value, true) : value;\\n  return /*#__PURE__*/external_react_default.a.createElement(external_react_default.a.Fragment, null, has_sign && sign, /*#__PURE__*/external_react_default.a.createElement(\"span\", {\\n    className: external_classnames_default()(className, \\'symbols\\', \"symbols--\".concat(currency.toLowerCase()))\\n  }), final_amount);\\n};\\n\\nmoney_Money.propTypes = {\\n  amount: external_prop_types_default.a.oneOfType([external_prop_types_default.a.number, external_prop_types_default.a.string]),\\n  className: external_prop_types_default.a.string,\\n  currency: external_prop_types_default.a.string,\\n  has_sign: external_prop_types_default.a.bool,\\n  should_format: external_prop_types_default.a.bool\\n};\\n/* harmony default export */ var money = (external_react_default.a.memo(money_Money));\\n// EXTERNAL MODULE: ./src/components/money/money.scss\\nvar money_money = __webpack_require__(78);\\n\\n// CONCATENATED MODULE: ./src/components/money/index.js\\n\\n\\n/* harmony default export */ var components_money = __webpack_exports__[\"default\"] = (money);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2NvbXBvbmVudC8uL3NyYy9jb21wb25lbnRzL21vbmV5L21vbmV5LmpzeD9kMmJmIiwid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvLi9zcmMvY29tcG9uZW50cy9tb25leS9pbmRleC5qcz9lMjA5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ3VycmVuY3lVdGlscyBmcm9tICdAZGVyaXYvc2hhcmVkL3V0aWxzL2N1cnJlbmN5JztcblxuY29uc3QgTW9uZXkgPSAoeyBhbW91bnQsIGNsYXNzTmFtZSwgY3VycmVuY3kgPSAnVVNEJywgaGFzX3NpZ24sIHNob3VsZF9mb3JtYXQgPSB0cnVlIH0pID0+IHtcbiAgICBsZXQgc2lnbiA9ICcnO1xuICAgIGlmICgrYW1vdW50ICYmIChhbW91bnQgPCAwIHx8IGhhc19zaWduKSkge1xuICAgICAgICBzaWduID0gYW1vdW50ID4gMCA/ICcrJyA6ICctJztcbiAgICB9XG5cbiAgICAvLyBpZiBpdCdzIGZvcm1hdHRlZCBhbHJlYWR5IHRoZW4gZG9uJ3QgbWFrZSBhbnkgY2hhbmdlcyB1bmxlc3Mgd2Ugc2hvdWxkIHJlbW92ZSBleHRyYSAtLysgc2lnbnNcbiAgICBjb25zdCB2YWx1ZSA9IGhhc19zaWduIHx8IHNob3VsZF9mb3JtYXQgPyBNYXRoLmFicyhhbW91bnQpIDogYW1vdW50O1xuICAgIGNvbnN0IGZpbmFsX2Ftb3VudCA9IHNob3VsZF9mb3JtYXQgPyBDdXJyZW5jeVV0aWxzLmZvcm1hdE1vbmV5KGN1cnJlbmN5LCB2YWx1ZSwgdHJ1ZSkgOiB2YWx1ZTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgIHtoYXNfc2lnbiAmJiBzaWdufVxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtjbGFzc05hbWVzKGNsYXNzTmFtZSwgJ3N5bWJvbHMnLCBgc3ltYm9scy0tJHtjdXJyZW5jeS50b0xvd2VyQ2FzZSgpfWApfSAvPlxuICAgICAgICAgICAge2ZpbmFsX2Ftb3VudH1cbiAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICApO1xufTtcblxuTW9uZXkucHJvcFR5cGVzID0ge1xuICAgIGFtb3VudDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZ10pLFxuICAgIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjdXJyZW5jeTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBoYXNfc2lnbjogUHJvcFR5cGVzLmJvb2wsXG4gICAgc2hvdWxkX2Zvcm1hdDogUHJvcFR5cGVzLmJvb2wsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBSZWFjdC5tZW1vKE1vbmV5KTtcbiIsImltcG9ydCBNb25leSBmcm9tICcuL21vbmV5LmpzeCc7XG5pbXBvcnQgJy4vbW9uZXkuc2Nzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IE1vbmV5O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFHQTtBQUFBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUxBO0FBUUE7Ozs7O0FDaENBO0FBQ0E7QUFFQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///140\\n')},2:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__2__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCI/YWFhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzJfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///2\\n\")},24:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__24__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50L2V4dGVybmFsIFwiQGRlcml2L3NoYXJlZC91dGlscy9jdXJyZW5jeVwiP2ViZmIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18yNF9fOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///24\\n\")},78:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvbW9uZXkvbW9uZXkuc2Nzcz9lODMyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE1ODk1MjMyNTQ3NDVcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtaG90LWxvYWRlci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImZpbGVNYXBcIjpcIntmaWxlTmFtZX1cIn0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7O1xuICAgIH1cbiAgIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGdDQUtBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///78\\n\")}}).default}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../components/lib/money.js\n");

/***/ }),

/***/ "../../components/lib/tabs.css":
/*!***********************************************************!*\
  !*** /var/www/deriv-app/packages/components/lib/tabs.css ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vY29tcG9uZW50cy9saWIvdGFicy5jc3MuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL3Zhci93d3cvZGVyaXYtYXBwL3BhY2thZ2VzL2NvbXBvbmVudHMvbGliL3RhYnMuY3NzPzI4OTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../components/lib/tabs.css\n");

/***/ }),

/***/ "../../components/lib/tabs.js":
/*!**********************************************************!*\
  !*** /var/www/deriv-app/packages/components/lib/tabs.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(e,t){ true?module.exports=t(__webpack_require__(/*! prop-types */ \"../../components/node_modules/prop-types/index.js\"),__webpack_require__(/*! react */ \"../node_modules/react/index.js\"),__webpack_require__(/*! classnames */ \"../../components/node_modules/classnames/index.js\")):undefined}(window,(function(__WEBPACK_EXTERNAL_MODULE__0__,__WEBPACK_EXTERNAL_MODULE__1__,__WEBPACK_EXTERNAL_MODULE__2__){return function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=112)}({0:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__0__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJwcm9wLXR5cGVzXCI/MzgzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzBfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///0\\n\")},1:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__1__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18xX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///1\\n\")},112:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('// ESM COMPAT FLAG\\n__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: external \"classnames\"\\nvar external_classnames_ = __webpack_require__(2);\\nvar external_classnames_default = /*#__PURE__*/__webpack_require__.n(external_classnames_);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(1);\\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\\n\\n// EXTERNAL MODULE: external \"prop-types\"\\nvar external_prop_types_ = __webpack_require__(0);\\nvar external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);\\n\\n// EXTERNAL MODULE: ./src/components/counter/index.js + 1 modules\\nvar counter = __webpack_require__(29);\\n\\n// CONCATENATED MODULE: ./src/components/tabs/tab.jsx\\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return self; }\\n\\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\n\\n\\n\\n\\n\\nvar tab_Tab = /*#__PURE__*/function (_Component) {\\n  _inherits(Tab, _Component);\\n\\n  var _super = _createSuper(Tab);\\n\\n  function Tab() {\\n    var _this;\\n\\n    _classCallCheck(this, Tab);\\n\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    _this = _super.call.apply(_super, [this].concat(args));\\n\\n    _this.onClick = function () {\\n      var onClick = _this.props.onClick;\\n      onClick();\\n    };\\n\\n    return _this;\\n  }\\n\\n  _createClass(Tab, [{\\n    key: \"render\",\\n    value: function render() {\\n      var _this$props = this.props,\\n          active_tab_ref = _this$props.active_tab_ref,\\n          count = _this$props.count,\\n          id = _this$props.id,\\n          header_content = _this$props.header_content,\\n          is_active = _this$props.is_active,\\n          is_label_hidden = _this$props.is_label_hidden,\\n          label = _this$props.label,\\n          top = _this$props.top,\\n          bottom = _this$props.bottom,\\n          header_fit_content = _this$props.header_fit_content;\\n      var classes = external_classnames_default()(\\'dc-tabs__item\\', {\\n        \\'dc-tabs__active\\': is_active,\\n        \\'dc-tabs__item--top\\': top,\\n        \\'dc-tabs__item--bottom\\': bottom,\\n        \\'dc-tabs__item--header-fit-content\\': header_fit_content,\\n        \\'dc-tabs__item--is-hidden\\': is_label_hidden\\n      });\\n      return /*#__PURE__*/external_react_default.a.createElement(\"li\", {\\n        id: id,\\n        className: classes,\\n        onClick: this.onClick,\\n        ref: active_tab_ref\\n      }, header_content || label, !!count && /*#__PURE__*/external_react_default.a.createElement(counter[\"default\"], {\\n        className: \"dc-tabs__item__counter\",\\n        count: count\\n      }));\\n    }\\n  }]);\\n\\n  return Tab;\\n}(external_react_[\"Component\"]);\\n\\ntab_Tab.propTypes = {\\n  className: external_prop_types_default.a.string,\\n  count: external_prop_types_default.a.number,\\n  is_active: external_prop_types_default.a.bool,\\n  is_label_hidden: external_prop_types_default.a.bool,\\n  label: external_prop_types_default.a.string,\\n  onClick: external_prop_types_default.a.func\\n};\\n/* harmony default export */ var tab = (tab_Tab);\\n// CONCATENATED MODULE: ./src/components/tabs/tabs.jsx\\nfunction tabs_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { tabs_typeof = function _typeof(obj) { return typeof obj; }; } else { tabs_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return tabs_typeof(obj); }\\n\\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\\n\\nfunction tabs_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction tabs_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction tabs_createClass(Constructor, protoProps, staticProps) { if (protoProps) tabs_defineProperties(Constructor.prototype, protoProps); if (staticProps) tabs_defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction tabs_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) tabs_setPrototypeOf(subClass, superClass); }\\n\\nfunction tabs_setPrototypeOf(o, p) { tabs_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return tabs_setPrototypeOf(o, p); }\\n\\nfunction tabs_createSuper(Derived) { var hasNativeReflectConstruct = tabs_isNativeReflectConstruct(); return function () { var Super = tabs_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = tabs_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return tabs_possibleConstructorReturn(this, result); }; }\\n\\nfunction tabs_possibleConstructorReturn(self, call) { if (call && (tabs_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return tabs_assertThisInitialized(self); }\\n\\nfunction tabs_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return self; }\\n\\nfunction tabs_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\\n\\nfunction tabs_getPrototypeOf(o) { tabs_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return tabs_getPrototypeOf(o); }\\n\\n\\n\\n\\n\\n\\nvar tabs_Tabs = /*#__PURE__*/function (_Component) {\\n  tabs_inherits(Tabs, _Component);\\n\\n  var _super = tabs_createSuper(Tabs);\\n\\n  function Tabs(props) {\\n    var _this;\\n\\n    tabs_classCallCheck(this, Tabs);\\n\\n    _this = _super.call(this, props);\\n\\n    _this.onTabItemClick = function (index) {\\n      _this.setState({\\n        active_index: index\\n      });\\n    };\\n\\n    _this.setActiveLineStyle = function () {\\n      if (_this.props.header_fit_content && _this.active_tab_ref && _this.tabs_wrapper_ref) {\\n        var tabs_wrapper_bounds = _this.tabs_wrapper_ref.getBoundingClientRect();\\n\\n        var active_tab_bounds = _this.active_tab_ref.getBoundingClientRect();\\n\\n        _this.setState({\\n          active_line_style: {\\n            left: active_tab_bounds.left - tabs_wrapper_bounds.left,\\n            width: active_tab_bounds.width\\n          }\\n        });\\n      }\\n    };\\n\\n    _this.setActiveTabRef = function (ref) {\\n      _this.active_tab_ref = ref;\\n\\n      _this.setActiveLineStyle();\\n    };\\n\\n    _this.setTabsWrapperRef = function (ref) {\\n      _this.tabs_wrapper_ref = ref;\\n\\n      _this.setActiveLineStyle();\\n    };\\n\\n    _this.state = {\\n      active_index: props.active_index || 0\\n    };\\n    return _this;\\n  }\\n\\n  tabs_createClass(Tabs, [{\\n    key: \"componentDidUpdate\",\\n    value: function componentDidUpdate(prev_props, prev_state) {\\n      if (this.props.active_index !== -1 && prev_state.active_index !== this.state.active_index) {\\n        this.setState({\\n          active_index: this.state.active_index || 0\\n        });\\n\\n        if (typeof this.props.onTabItemClick === \\'function\\') {\\n          this.props.onTabItemClick(this.state.active_index);\\n        }\\n      }\\n\\n      if (this.props.active_index !== prev_props.active_index) {\\n        this.setState({\\n          active_index: this.props.active_index\\n        });\\n      }\\n    }\\n  }, {\\n    key: \"render\",\\n    value: function render() {\\n      var _this2 = this;\\n\\n      var _this$props = this.props,\\n          children = _this$props.children,\\n          className = _this$props.className,\\n          top = _this$props.top,\\n          bottom = _this$props.bottom,\\n          fit_content = _this$props.fit_content,\\n          header_fit_content = _this$props.header_fit_content,\\n          single_tab_has_no_label = _this$props.single_tab_has_no_label;\\n      var active_index = this.state.active_index;\\n      var tab_width = fit_content ? \\'150px\\' : \"\".concat((100 / children.length).toFixed(2), \"%\");\\n      return /*#__PURE__*/external_react_default.a.createElement(\"div\", {\\n        className: external_classnames_default()(\\'dc-tabs\\', _defineProperty({}, \"dc-tabs dc-tabs--\".concat(className), className)),\\n        style: {\\n          \\'--tab-width\\': \"\".concat(tab_width)\\n        }\\n      }, /*#__PURE__*/external_react_default.a.createElement(\"ul\", {\\n        className: external_classnames_default()(\\'dc-tabs__list\\', {\\n          \\'dc-tabs__list--top\\': top,\\n          \\'dc-tabs__list--bottom\\': bottom,\\n          \\'dc-tabs__list--header-fit-content\\': header_fit_content\\n        }),\\n        ref: this.setTabsWrapperRef\\n      }, external_react_default.a.Children.map(children, function (child, index) {\\n        var _child$props = child.props,\\n            count = _child$props.count,\\n            header_content = _child$props.header_content,\\n            label = _child$props.label;\\n        return /*#__PURE__*/external_react_default.a.createElement(tab, {\\n          count: count,\\n          is_active: index === active_index,\\n          key: label,\\n          is_label_hidden: children.length === 1 && single_tab_has_no_label,\\n          label: label,\\n          top: top,\\n          bottom: bottom,\\n          header_fit_content: header_fit_content,\\n          active_tab_ref: index === active_index ? _this2.setActiveTabRef : null,\\n          header_content: header_content,\\n          onClick: function onClick() {\\n            return _this2.onTabItemClick(index);\\n          }\\n        });\\n      }), /*#__PURE__*/external_react_default.a.createElement(\"span\", {\\n        className: external_classnames_default()(\\'dc-tabs__active-line\\', {\\n          \\'dc-tabs__active-line--top\\': top,\\n          \\'dc-tabs__active-line--bottom\\': bottom,\\n          \\'dc-tabs__active-line--fit-content\\': fit_content,\\n          \\'dc-tabs__active-line--header-fit-content\\': header_fit_content,\\n          \\'dc-tabs__active-line--is-hidden\\': children.length === 1 && single_tab_has_no_label\\n        }),\\n        style: this.state.active_line_style\\n      })), /*#__PURE__*/external_react_default.a.createElement(\"div\", {\\n        className: \"dc-tabs__content\"\\n      }, external_react_default.a.Children.map(children, function (child, index) {\\n        if (index !== active_index) {\\n          return undefined;\\n        }\\n\\n        return child.props.children;\\n      })));\\n    }\\n  }]);\\n\\n  return Tabs;\\n}(external_react_[\"Component\"]);\\n\\ntabs_Tabs.propTypes = {\\n  children: external_prop_types_default.a.oneOfType([external_prop_types_default.a.arrayOf(external_prop_types_default.a.node), external_prop_types_default.a.node])\\n};\\n/* harmony default export */ var tabs = (tabs_Tabs);\\n// EXTERNAL MODULE: ./src/components/tabs/tabs.scss\\nvar tabs_tabs = __webpack_require__(91);\\n\\n// CONCATENATED MODULE: ./src/components/tabs/index.js\\n\\n\\n/* harmony default export */ var components_tabs = __webpack_exports__[\"default\"] = (tabs);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///112\\n')},2:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__2__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCI/YWFhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzJfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///2\\n\")},29:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('// ESM COMPAT FLAG\\n__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: external \"classnames\"\\nvar external_classnames_ = __webpack_require__(2);\\nvar external_classnames_default = /*#__PURE__*/__webpack_require__.n(external_classnames_);\\n\\n// EXTERNAL MODULE: external \"prop-types\"\\nvar external_prop_types_ = __webpack_require__(0);\\nvar external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(1);\\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\\n\\n// CONCATENATED MODULE: ./src/components/counter/counter.jsx\\n\\n\\n\\n\\nvar counter_Counter = function Counter(_ref) {\\n  var className = _ref.className,\\n      count = _ref.count;\\n  return /*#__PURE__*/external_react_default.a.createElement(\"div\", {\\n    className: external_classnames_default()(\\'dc-counter\\', className)\\n  }, count);\\n};\\n\\ncounter_Counter.propTypes = {\\n  className: external_prop_types_default.a.string,\\n  count: external_prop_types_default.a.number\\n};\\n/* harmony default export */ var counter = (counter_Counter);\\n// EXTERNAL MODULE: ./src/components/counter/counter.scss\\nvar counter_counter = __webpack_require__(34);\\n\\n// CONCATENATED MODULE: ./src/components/counter/index.js\\n\\n\\n/* harmony default export */ var components_counter = __webpack_exports__[\"default\"] = (counter);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvY291bnRlci9jb3VudGVyLmpzeD9iOTJmIiwid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvLi9zcmMvY29tcG9uZW50cy9jb3VudGVyL2luZGV4LmpzP2U3NDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuY29uc3QgQ291bnRlciA9ICh7IGNsYXNzTmFtZSwgY291bnQgfSkgPT4ge1xuICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lcygnZGMtY291bnRlcicsIGNsYXNzTmFtZSl9Pntjb3VudH08L2Rpdj47XG59O1xuXG5Db3VudGVyLnByb3BUeXBlcyA9IHtcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY291bnQ6IFByb3BUeXBlcy5udW1iZXIsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb3VudGVyO1xuIiwiaW1wb3J0IENvdW50ZXIgZnJvbSAnLi9jb3VudGVyLmpzeCc7XG5pbXBvcnQgJy4vY291bnRlci5zY3NzJztcblxuZXhwb3J0IGRlZmF1bHQgQ291bnRlcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBS0E7Ozs7O0FDYkE7QUFDQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///29\\n')},34:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvY291bnRlci9jb3VudGVyLnNjc3M/YWY1OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNTg5NTIzMjUzMTkwXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWhvdC1sb2FkZXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJmaWxlTWFwXCI6XCJ7ZmlsZU5hbWV9XCJ9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpOztcbiAgICB9XG4gICJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxnQ0FLQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///34\\n\")},91:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvdGFicy90YWJzLnNjc3M/ZDJmMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNTg5NTIzMjU1Mzc4XG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWhvdC1sb2FkZXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJmaWxlTWFwXCI6XCJ7ZmlsZU5hbWV9XCJ9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpOztcbiAgICB9XG4gICJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxnQ0FLQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///91\\n\")}}).default}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../components/lib/tabs.js\n");

/***/ })

}]);