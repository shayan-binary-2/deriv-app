(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~bot~trader"],{

/***/ "../node_modules/smartcharts-beta/dist/smartcharts.js":
/*!************************************************************!*\
  !*** ../node_modules/smartcharts-beta/dist/smartcharts.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! mobx */ \"../node_modules/mobx/lib/mobx.module.js\"), __webpack_require__(/*! mobx-react */ \"../node_modules/mobx-react/index.module.js\"), __webpack_require__(/*! moment */ \"../node_modules/moment/moment.js\"), __webpack_require__(/*! react */ \"../node_modules/react/index.js\"), __webpack_require__(/*! react-dom */ \"../node_modules/react-dom/index.js\"), __webpack_require__(/*! react-transition-group */ \"../node_modules/react-transition-group/index.js\"));\n\telse {}\n})(window, function(__WEBPACK_EXTERNAL_MODULE_mobx__, __WEBPACK_EXTERNAL_MODULE_mobx_react__, __WEBPACK_EXTERNAL_MODULE_moment__, __WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE_react_dom__, __WEBPACK_EXTERNAL_MODULE_react_transition_group__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tfunction webpackJsonpCallback(data) {\n/******/ \t\tvar chunkIds = data[0];\n/******/ \t\tvar moreModules = data[1];\n/******/\n/******/\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, resolves = [];\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n/******/ \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n/******/ \t\t\t}\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n/******/ \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n/******/\n/******/ \t\twhile(resolves.length) {\n/******/ \t\t\tresolves.shift()();\n/******/ \t\t}\n/******/\n/******/ \t};\n/******/\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded and loading chunks\n/******/ \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n/******/ \t// Promise = chunk loading, 0 = chunk loaded\n/******/ \tvar installedChunks = {\n/******/ \t\t\"main\": 0\n/******/ \t};\n/******/\n/******/\n/******/\n/******/ \t// script path function\n/******/ \tfunction jsonpScriptSrc(chunkId) {\n/******/ \t\treturn __webpack_require__.p + \"\" + ({\"chartiq\":\"chartiq\",\"de-po\":\"de-po\",\"es-po\":\"es-po\",\"fr-po\":\"fr-po\",\"html2canvas\":\"html2canvas\",\"id-po\":\"id-po\",\"it-po\":\"it-po\",\"nl-po\":\"nl-po\",\"pl-po\":\"pl-po\",\"pt-po\":\"pt-po\",\"ru-po\":\"ru-po\",\"th-po\":\"th-po\",\"vendors~resize-observer-polyfill\":\"vendors~resize-observer-polyfill\",\"vi-po\":\"vi-po\",\"zh_cn-po\":\"zh_cn-po\",\"zh_tw-po\":\"zh_tw-po\"}[chunkId]||chunkId) + \"-\" + {\"chartiq\":\"d81f94\",\"de-po\":\"0c1385\",\"es-po\":\"9f965b\",\"fr-po\":\"32dce3\",\"html2canvas\":\"44d922\",\"id-po\":\"684adf\",\"it-po\":\"6fb521\",\"nl-po\":\"dbc059\",\"pl-po\":\"ddb25d\",\"pt-po\":\"94d77b\",\"ru-po\":\"afea21\",\"th-po\":\"f9221a\",\"vendors~resize-observer-polyfill\":\"358f59\",\"vi-po\":\"47a1c7\",\"zh_cn-po\":\"e6a513\",\"zh_tw-po\":\"48b237\"}[chunkId] + \".smartcharts.js\"\n/******/ \t}\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId) {\n/******/ \t\tvar promises = [];\n/******/\n/******/\n/******/ \t\t// JSONP chunk loading for javascript\n/******/\n/******/ \t\tvar installedChunkData = installedChunks[chunkId];\n/******/ \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n/******/\n/******/ \t\t\t// a Promise means \"currently loading\".\n/******/ \t\t\tif(installedChunkData) {\n/******/ \t\t\t\tpromises.push(installedChunkData[2]);\n/******/ \t\t\t} else {\n/******/ \t\t\t\t// setup Promise in chunk cache\n/******/ \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n/******/ \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n/******/ \t\t\t\t});\n/******/ \t\t\t\tpromises.push(installedChunkData[2] = promise);\n/******/\n/******/ \t\t\t\t// start chunk loading\n/******/ \t\t\t\tvar script = document.createElement('script');\n/******/ \t\t\t\tvar onScriptComplete;\n/******/\n/******/ \t\t\t\tscript.charset = 'utf-8';\n/******/ \t\t\t\tscript.timeout = 120;\n/******/ \t\t\t\tif (__webpack_require__.nc) {\n/******/ \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n/******/ \t\t\t\t}\n/******/ \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n/******/\n/******/ \t\t\t\t// create error before stack unwound to get useful stacktrace later\n/******/ \t\t\t\tvar error = new Error();\n/******/ \t\t\t\tonScriptComplete = function (event) {\n/******/ \t\t\t\t\t// avoid mem leaks in IE.\n/******/ \t\t\t\t\tscript.onerror = script.onload = null;\n/******/ \t\t\t\t\tclearTimeout(timeout);\n/******/ \t\t\t\t\tvar chunk = installedChunks[chunkId];\n/******/ \t\t\t\t\tif(chunk !== 0) {\n/******/ \t\t\t\t\t\tif(chunk) {\n/******/ \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n/******/ \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n/******/ \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n/******/ \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n/******/ \t\t\t\t\t\t\terror.type = errorType;\n/******/ \t\t\t\t\t\t\terror.request = realSrc;\n/******/ \t\t\t\t\t\t\tchunk[1](error);\n/******/ \t\t\t\t\t\t}\n/******/ \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t};\n/******/ \t\t\t\tvar timeout = setTimeout(function(){\n/******/ \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n/******/ \t\t\t\t}, 120000);\n/******/ \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n/******/ \t\t\t\tdocument.head.appendChild(script);\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\treturn Promise.all(promises);\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// on error function for async loading\n/******/ \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n/******/\n/******/ \tvar jsonpArray = window[\"webpackJsonpsmartcharts\"] = window[\"webpackJsonpsmartcharts\"] || [];\n/******/ \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n/******/ \tjsonpArray.push = webpackJsonpCallback;\n/******/ \tjsonpArray = jsonpArray.slice();\n/******/ \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n/******/ \tvar parentJsonpFunction = oldJsonpFunction;\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./node_modules/add-px-to-style/index.js\":\n/*!***********************************************!*\\\n  !*** ./node_modules/add-px-to-style/index.js ***!\n  \\***********************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/* The following list is defined in React's core */\nvar IS_UNITLESS = {\n  animationIterationCount: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridColumn: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  stopOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nmodule.exports = function (name, value) {\n  if (typeof value === 'number' && !IS_UNITLESS[name]) {\n    return value + 'px';\n  } else {\n    return value;\n  }\n};\n\n/***/ }),\n\n/***/ \"./node_modules/classnames/index.js\":\n/*!******************************************!*\\\n  !*** ./node_modules/classnames/index.js ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (  true && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (true) {\n    // register as 'classnames', consistent with npm package name\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return classNames;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})();\n\n/***/ }),\n\n/***/ \"./node_modules/dom-css/index.js\":\n/*!***************************************!*\\\n  !*** ./node_modules/dom-css/index.js ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar prefix = __webpack_require__(/*! prefix-style */ \"./node_modules/prefix-style/index.js\");\n\nvar toCamelCase = __webpack_require__(/*! to-camel-case */ \"./node_modules/to-camel-case/index.js\");\n\nvar cache = {\n  'float': 'cssFloat'\n};\n\nvar addPxToStyle = __webpack_require__(/*! add-px-to-style */ \"./node_modules/add-px-to-style/index.js\");\n\nfunction style(element, property, value) {\n  var camel = cache[property];\n\n  if (typeof camel === 'undefined') {\n    camel = detect(property);\n  } // may be false if CSS prop is unsupported\n\n\n  if (camel) {\n    if (value === undefined) {\n      return element.style[camel];\n    }\n\n    element.style[camel] = addPxToStyle(camel, value);\n  }\n}\n\nfunction each(element, properties) {\n  for (var k in properties) {\n    if (properties.hasOwnProperty(k)) {\n      style(element, k, properties[k]);\n    }\n  }\n}\n\nfunction detect(cssProp) {\n  var camel = toCamelCase(cssProp);\n  var result = prefix(camel);\n  cache[camel] = cache[cssProp] = cache[result] = result;\n  return result;\n}\n\nfunction set() {\n  if (arguments.length === 2) {\n    if (typeof arguments[1] === 'string') {\n      arguments[0].style.cssText = arguments[1];\n    } else {\n      each(arguments[0], arguments[1]);\n    }\n  } else {\n    style(arguments[0], arguments[1], arguments[2]);\n  }\n}\n\nmodule.exports = set;\nmodule.exports.set = set;\n\nmodule.exports.get = function (element, properties) {\n  if (Array.isArray(properties)) {\n    return properties.reduce(function (obj, prop) {\n      obj[prop] = style(element, prop || '');\n      return obj;\n    }, {});\n  } else {\n    return style(element, properties || '');\n  }\n};\n\n/***/ }),\n\n/***/ \"./node_modules/event-emitter-es6/index.js\":\n/*!*************************************************!*\\\n  !*** ./node_modules/event-emitter-es6/index.js ***!\n  \\*************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar DEFAULT_VALUES = {\n  emitDelay: 10,\n  strictMode: false\n};\n/**\n * @typedef {object} EventEmitterListenerFunc\n * @property {boolean} once\n * @property {function} fn\n */\n\n/**\n * @class EventEmitter\n *\n * @private\n * @property {Object.<string, EventEmitterListenerFunc[]>} _listeners\n * @property {string[]} events\n */\n\nvar EventEmitter = function () {\n  /**\n   * @constructor\n   * @param {{}}      [opts]\n   * @param {number}  [opts.emitDelay = 10] - Number in ms. Specifies whether emit will be sync or async. By default - 10ms. If 0 - fires sync\n   * @param {boolean} [opts.strictMode = false] - is true, Emitter throws error on emit error with no listeners\n   */\n  function EventEmitter() {\n    var opts = arguments.length <= 0 || arguments[0] === undefined ? DEFAULT_VALUES : arguments[0];\n\n    _classCallCheck(this, EventEmitter);\n\n    var emitDelay = void 0,\n        strictMode = void 0;\n\n    if (opts.hasOwnProperty('emitDelay')) {\n      emitDelay = opts.emitDelay;\n    } else {\n      emitDelay = DEFAULT_VALUES.emitDelay;\n    }\n\n    this._emitDelay = emitDelay;\n\n    if (opts.hasOwnProperty('strictMode')) {\n      strictMode = opts.strictMode;\n    } else {\n      strictMode = DEFAULT_VALUES.strictMode;\n    }\n\n    this._strictMode = strictMode;\n    this._listeners = {};\n    this.events = [];\n  }\n  /**\n   * @protected\n   * @param {string} type\n   * @param {function} listener\n   * @param {boolean} [once = false]\n   */\n\n\n  _createClass(EventEmitter, [{\n    key: '_addListenner',\n    value: function _addListenner(type, listener, once) {\n      if (typeof listener !== 'function') {\n        throw TypeError('listener must be a function');\n      }\n\n      if (this.events.indexOf(type) === -1) {\n        this._listeners[type] = [{\n          once: once,\n          fn: listener\n        }];\n        this.events.push(type);\n      } else {\n        this._listeners[type].push({\n          once: once,\n          fn: listener\n        });\n      }\n    }\n    /**\n     * Subscribes on event type specified function\n     * @param {string} type\n     * @param {function} listener\n     */\n\n  }, {\n    key: 'on',\n    value: function on(type, listener) {\n      this._addListenner(type, listener, false);\n    }\n    /**\n     * Subscribes on event type specified function to fire only once\n     * @param {string} type\n     * @param {function} listener\n     */\n\n  }, {\n    key: 'once',\n    value: function once(type, listener) {\n      this._addListenner(type, listener, true);\n    }\n    /**\n     * Removes event with specified type. If specified listenerFunc - deletes only one listener of specified type\n     * @param {string} eventType\n     * @param {function} [listenerFunc]\n     */\n\n  }, {\n    key: 'off',\n    value: function off(eventType, listenerFunc) {\n      var _this = this;\n\n      var typeIndex = this.events.indexOf(eventType);\n      var hasType = eventType && typeIndex !== -1;\n\n      if (hasType) {\n        if (!listenerFunc) {\n          delete this._listeners[eventType];\n          this.events.splice(typeIndex, 1);\n        } else {\n          (function () {\n            var removedEvents = [];\n            var typeListeners = _this._listeners[eventType];\n            typeListeners.forEach(\n            /**\n             * @param {EventEmitterListenerFunc} fn\n             * @param {number} idx\n             */\n            function (fn, idx) {\n              if (fn.fn === listenerFunc) {\n                removedEvents.unshift(idx);\n              }\n            });\n            removedEvents.forEach(function (idx) {\n              typeListeners.splice(idx, 1);\n            });\n\n            if (!typeListeners.length) {\n              _this.events.splice(typeIndex, 1);\n\n              delete _this._listeners[eventType];\n            }\n          })();\n        }\n      }\n    }\n    /**\n     * Applies arguments to specified event type\n     * @param {string} eventType\n     * @param {*[]} eventArguments\n     * @protected\n     */\n\n  }, {\n    key: '_applyEvents',\n    value: function _applyEvents(eventType, eventArguments) {\n      var typeListeners = this._listeners[eventType];\n\n      if (!typeListeners || !typeListeners.length) {\n        if (this._strictMode) {\n          throw 'No listeners specified for event: ' + eventType;\n        } else {\n          return;\n        }\n      }\n\n      var removableListeners = [];\n      typeListeners.forEach(function (eeListener, idx) {\n        eeListener.fn.apply(null, eventArguments);\n\n        if (eeListener.once) {\n          removableListeners.unshift(idx);\n        }\n      });\n      removableListeners.forEach(function (idx) {\n        typeListeners.splice(idx, 1);\n      });\n    }\n    /**\n     * Emits event with specified type and params.\n     * @param {string} type\n     * @param eventArgs\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(type) {\n      var _this2 = this;\n\n      for (var _len = arguments.length, eventArgs = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        eventArgs[_key - 1] = arguments[_key];\n      }\n\n      if (this._emitDelay) {\n        setTimeout(function () {\n          _this2._applyEvents.call(_this2, type, eventArgs);\n        }, this._emitDelay);\n      } else {\n        this._applyEvents(type, eventArgs);\n      }\n    }\n    /**\n     * Emits event with specified type and params synchronously.\n     * @param {string} type\n     * @param eventArgs\n     */\n\n  }, {\n    key: 'emitSync',\n    value: function emitSync(type) {\n      for (var _len2 = arguments.length, eventArgs = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        eventArgs[_key2 - 1] = arguments[_key2];\n      }\n\n      this._applyEvents(type, eventArgs);\n    }\n    /**\n     * Destroys EventEmitter\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._listeners = {};\n      this.events = [];\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\nmodule.exports = EventEmitter;\n\n/***/ }),\n\n/***/ \"./node_modules/lodash.debounce/index.js\":\n/*!***********************************************!*\\\n  !*** ./node_modules/lodash.debounce/index.js ***!\n  \\***********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/** Used as references for various `Number` constants. */\n\nvar NAN = 0 / 0;\n/** `Object#toString` result references. */\n\nvar symbolTag = '[object Symbol]';\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/** Detect free variable `global` from Node.js. */\n\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n/** Detect free variable `self`. */\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar objectToString = objectProto.toString;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\n\nvar now = function () {\n  return root.Date.now();\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\n\n\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  wait = toNumber(wait) || 0;\n\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time; // Start the timer for the trailing edge.\n\n    timerId = setTimeout(timerExpired, wait); // Invoke the leading edge.\n\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime; // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n\n    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n  }\n\n  function timerExpired() {\n    var time = now();\n\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    } // Restart the timer.\n\n\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined; // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n\n    return result;\n  }\n\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\n\n\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\n\n\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n}\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = debounce;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n/***/ }),\n\n/***/ \"./node_modules/object-assign/index.js\":\n/*!*********************************************!*\\\n  !*** ./node_modules/object-assign/index.js ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n\n  return Object(val);\n}\n\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    } // Detect buggy property enumeration order in older V8 versions.\n    // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n    test1[5] = 'de';\n\n    if (Object.getOwnPropertyNames(test1)[0] === '5') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test2 = {};\n\n    for (var i = 0; i < 10; i++) {\n      test2['_' + String.fromCharCode(i)] = i;\n    }\n\n    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n      return test2[n];\n    });\n\n    if (order2.join('') !== '0123456789') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test3 = {};\n    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n      test3[letter] = letter;\n    });\n\n    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    // We don't expect any of the above to throw, but better to be safe.\n    return false;\n  }\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n\n  return to;\n};\n\n/***/ }),\n\n/***/ \"./node_modules/performance-now/lib/performance-now.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/performance-now/lib/performance-now.js ***!\n  \\*************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.12.2\n(function () {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if (typeof performance !== \"undefined\" && performance !== null && performance.now) {\n    module.exports = function () {\n      return performance.now();\n    };\n  } else if (typeof process !== \"undefined\" && process !== null && process.hrtime) {\n    module.exports = function () {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n\n    hrtime = process.hrtime;\n\n    getNanoSeconds = function () {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function () {\n      return Date.now() - loadTime;\n    };\n\n    loadTime = Date.now();\n  } else {\n    module.exports = function () {\n      return new Date().getTime() - loadTime;\n    };\n\n    loadTime = new Date().getTime();\n  }\n}).call(this);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n/***/ }),\n\n/***/ \"./node_modules/prefix-style/index.js\":\n/*!********************************************!*\\\n  !*** ./node_modules/prefix-style/index.js ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nvar div = null;\nvar prefixes = ['Webkit', 'Moz', 'O', 'ms'];\n\nmodule.exports = function prefixStyle(prop) {\n  // re-use a dummy div\n  if (!div) {\n    div = document.createElement('div');\n  }\n\n  var style = div.style; // prop exists without prefix\n\n  if (prop in style) {\n    return prop;\n  } // borderRadius -> BorderRadius\n\n\n  var titleCase = prop.charAt(0).toUpperCase() + prop.slice(1); // find the vendor-prefixed prop\n\n  for (var i = prefixes.length; i >= 0; i--) {\n    var name = prefixes[i] + titleCase; // e.g. WebkitBorderRadius or webkitBorderRadius\n\n    if (name in style) {\n      return name;\n    }\n  }\n\n  return false;\n};\n\n/***/ }),\n\n/***/ \"./node_modules/process/browser.js\":\n/*!*****************************************!*\\\n  !*** ./node_modules/process/browser.js ***!\n  \\*****************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};\n\n/***/ }),\n\n/***/ \"./node_modules/prop-types/checkPropTypes.js\":\n/*!***************************************************!*\\\n  !*** ./node_modules/prop-types/checkPropTypes.js ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar printWarning = function () {};\n\nif (true) {\n  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function (text) {\n    var message = 'Warning: ' + text;\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\n\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (true) {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n\n        if (error && !(error instanceof Error)) {\n          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');\n        }\n\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n          var stack = getStack ? getStack() : '';\n          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));\n        }\n      }\n    }\n  }\n}\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\n\n\ncheckPropTypes.resetWarningCache = function () {\n  if (true) {\n    loggedTypeFailures = {};\n  }\n};\n\nmodule.exports = checkPropTypes;\n\n/***/ }),\n\n/***/ \"./node_modules/prop-types/factoryWithTypeCheckers.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!\n  \\************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar ReactIs = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\n\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\n\nvar ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n\nvar checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ \"./node_modules/prop-types/checkPropTypes.js\");\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\n\nvar printWarning = function () {};\n\nif (true) {\n  printWarning = function (text) {\n    var message = 'Warning: ' + text;\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function (isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n\n  var ANONYMOUS = '<<anonymous>>'; // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker\n  };\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n\n  /*eslint-disable no-self-compare*/\n\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n\n\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  } // Make `instanceof Error` still work for returned errors.\n\n\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (true) {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (  true && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n\n          if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors\n          manualPropTypeWarningCount < 3) {\n            printWarning('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n\n      var propValue = props[propName];\n\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (true) {\n        if (arguments.length > 1) {\n          printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n\n        if (type === 'symbol') {\n          return String(value);\n        }\n\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : undefined;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n\n      if (typeof checker !== 'function') {\n        printWarning('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n\n        if (!checker) {\n          continue;\n        }\n\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n        if (error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      } // We need to check all keys in case some are required but missing from\n      // props.\n\n\n      var allKeys = assign({}, props[propName], shapeTypes);\n\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n\n        if (!checker) {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n        }\n\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n        if (error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n\n      case 'boolean':\n        return !propValue;\n\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    } // falsy value can't be a Symbol\n\n\n    if (!propValue) {\n      return false;\n    } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  } // Equivalent of `typeof` but with special handling for array and regexp.\n\n\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n\n    return propType;\n  } // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n\n\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n\n    var propType = getPropType(propValue);\n\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n\n    return propType;\n  } // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n\n\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n\n      default:\n        return type;\n    }\n  } // Returns class name of the object, if any.\n\n\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};\n\n/***/ }),\n\n/***/ \"./node_modules/prop-types/index.js\":\n/*!******************************************!*\\\n  !*** ./node_modules/prop-types/index.js ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nif (true) {\n  var ReactIs = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\"); // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n\n\n  var throwOnDirectAccess = true;\n  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ \"./node_modules/prop-types/factoryWithTypeCheckers.js\")(ReactIs.isElement, throwOnDirectAccess);\n} else {}\n\n/***/ }),\n\n/***/ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!\n  \\*************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\nmodule.exports = ReactPropTypesSecret;\n\n/***/ }),\n\n/***/ \"./node_modules/raf/index.js\":\n/*!***********************************!*\\\n  !*** ./node_modules/raf/index.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var now = __webpack_require__(/*! performance-now */ \"./node_modules/performance-now/lib/performance-now.js\"),\n    root = typeof window === 'undefined' ? global : window,\n    vendors = ['moz', 'webkit'],\n    suffix = 'AnimationFrame',\n    raf = root['request' + suffix],\n    caf = root['cancel' + suffix] || root['cancelRequest' + suffix];\n\nfor (var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix];\n  caf = root[vendors[i] + 'Cancel' + suffix] || root[vendors[i] + 'CancelRequest' + suffix];\n} // Some versions of FF have rAF but not cAF\n\n\nif (!raf || !caf) {\n  var last = 0,\n      id = 0,\n      queue = [],\n      frameDuration = 1000 / 60;\n\n  raf = function (callback) {\n    if (queue.length === 0) {\n      var _now = now(),\n          next = Math.max(0, frameDuration - (_now - last));\n\n      last = next + _now;\n      setTimeout(function () {\n        var cp = queue.slice(0); // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n\n        queue.length = 0;\n\n        for (var i = 0; i < cp.length; i++) {\n          if (!cp[i].cancelled) {\n            try {\n              cp[i].callback(last);\n            } catch (e) {\n              setTimeout(function () {\n                throw e;\n              }, 0);\n            }\n          }\n        }\n      }, Math.round(next));\n    }\n\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    });\n    return id;\n  };\n\n  caf = function (handle) {\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].handle === handle) {\n        queue[i].cancelled = true;\n      }\n    }\n  };\n}\n\nmodule.exports = function (fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn);\n};\n\nmodule.exports.cancel = function () {\n  caf.apply(root, arguments);\n};\n\nmodule.exports.polyfill = function (object) {\n  if (!object) {\n    object = root;\n  }\n\n  object.requestAnimationFrame = raf;\n  object.cancelAnimationFrame = caf;\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n/***/ }),\n\n/***/ \"./node_modules/react-is/cjs/react-is.development.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/react-is/cjs/react-is.development.js ***!\n  \\***********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.8.6\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nif (true) {\n  (function () {\n    'use strict';\n\n    Object.defineProperty(exports, '__esModule', {\n      value: true\n    }); // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n    // nor polyfill, then a plain number is used for performance.\n\n    var hasSymbol = typeof Symbol === 'function' && Symbol.for;\n    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\n    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\n    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\n    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\n    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\n    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\n    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\n    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\n    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\n    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\n    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\n    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\n    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\n\n    function isValidElementType(type) {\n      return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n      type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n    }\n    /**\n     * Forked from fbjs/warning:\n     * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n     *\n     * Only change is we use console.warn instead of console.error,\n     * and do nothing when 'console' is not supported.\n     * This really simplifies the code.\n     * ---\n     * Similar to invariant but only logs a warning if the condition is not met.\n     * This can be used to log issues in development environments in critical\n     * paths. Removing the logging code for production environments will keep the\n     * same logic and follow the same code paths.\n     */\n\n\n    var lowPriorityWarning = function () {};\n\n    {\n      var printWarning = function (format) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        var argIndex = 0;\n        var message = 'Warning: ' + format.replace(/%s/g, function () {\n          return args[argIndex++];\n        });\n\n        if (typeof console !== 'undefined') {\n          console.warn(message);\n        }\n\n        try {\n          // --- Welcome to debugging React ---\n          // This error was thrown as a convenience so that you can use this stack\n          // to find the callsite that caused this warning to fire.\n          throw new Error(message);\n        } catch (x) {}\n      };\n\n      lowPriorityWarning = function (condition, format) {\n        if (format === undefined) {\n          throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\n        }\n\n        if (!condition) {\n          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n            args[_key2 - 2] = arguments[_key2];\n          }\n\n          printWarning.apply(undefined, [format].concat(args));\n        }\n      };\n    }\n    var lowPriorityWarning$1 = lowPriorityWarning;\n\n    function typeOf(object) {\n      if (typeof object === 'object' && object !== null) {\n        var $$typeof = object.$$typeof;\n\n        switch ($$typeof) {\n          case REACT_ELEMENT_TYPE:\n            var type = object.type;\n\n            switch (type) {\n              case REACT_ASYNC_MODE_TYPE:\n              case REACT_CONCURRENT_MODE_TYPE:\n              case REACT_FRAGMENT_TYPE:\n              case REACT_PROFILER_TYPE:\n              case REACT_STRICT_MODE_TYPE:\n              case REACT_SUSPENSE_TYPE:\n                return type;\n\n              default:\n                var $$typeofType = type && type.$$typeof;\n\n                switch ($$typeofType) {\n                  case REACT_CONTEXT_TYPE:\n                  case REACT_FORWARD_REF_TYPE:\n                  case REACT_PROVIDER_TYPE:\n                    return $$typeofType;\n\n                  default:\n                    return $$typeof;\n                }\n\n            }\n\n          case REACT_LAZY_TYPE:\n          case REACT_MEMO_TYPE:\n          case REACT_PORTAL_TYPE:\n            return $$typeof;\n        }\n      }\n\n      return undefined;\n    } // AsyncMode is deprecated along with isAsyncMode\n\n\n    var AsyncMode = REACT_ASYNC_MODE_TYPE;\n    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n    var ContextConsumer = REACT_CONTEXT_TYPE;\n    var ContextProvider = REACT_PROVIDER_TYPE;\n    var Element = REACT_ELEMENT_TYPE;\n    var ForwardRef = REACT_FORWARD_REF_TYPE;\n    var Fragment = REACT_FRAGMENT_TYPE;\n    var Lazy = REACT_LAZY_TYPE;\n    var Memo = REACT_MEMO_TYPE;\n    var Portal = REACT_PORTAL_TYPE;\n    var Profiler = REACT_PROFILER_TYPE;\n    var StrictMode = REACT_STRICT_MODE_TYPE;\n    var Suspense = REACT_SUSPENSE_TYPE;\n    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\n    function isAsyncMode(object) {\n      {\n        if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n          hasWarnedAboutDeprecatedIsAsyncMode = true;\n          lowPriorityWarning$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n        }\n      }\n      return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n    }\n\n    function isConcurrentMode(object) {\n      return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n    }\n\n    function isContextConsumer(object) {\n      return typeOf(object) === REACT_CONTEXT_TYPE;\n    }\n\n    function isContextProvider(object) {\n      return typeOf(object) === REACT_PROVIDER_TYPE;\n    }\n\n    function isElement(object) {\n      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n    }\n\n    function isForwardRef(object) {\n      return typeOf(object) === REACT_FORWARD_REF_TYPE;\n    }\n\n    function isFragment(object) {\n      return typeOf(object) === REACT_FRAGMENT_TYPE;\n    }\n\n    function isLazy(object) {\n      return typeOf(object) === REACT_LAZY_TYPE;\n    }\n\n    function isMemo(object) {\n      return typeOf(object) === REACT_MEMO_TYPE;\n    }\n\n    function isPortal(object) {\n      return typeOf(object) === REACT_PORTAL_TYPE;\n    }\n\n    function isProfiler(object) {\n      return typeOf(object) === REACT_PROFILER_TYPE;\n    }\n\n    function isStrictMode(object) {\n      return typeOf(object) === REACT_STRICT_MODE_TYPE;\n    }\n\n    function isSuspense(object) {\n      return typeOf(object) === REACT_SUSPENSE_TYPE;\n    }\n\n    exports.typeOf = typeOf;\n    exports.AsyncMode = AsyncMode;\n    exports.ConcurrentMode = ConcurrentMode;\n    exports.ContextConsumer = ContextConsumer;\n    exports.ContextProvider = ContextProvider;\n    exports.Element = Element;\n    exports.ForwardRef = ForwardRef;\n    exports.Fragment = Fragment;\n    exports.Lazy = Lazy;\n    exports.Memo = Memo;\n    exports.Portal = Portal;\n    exports.Profiler = Profiler;\n    exports.StrictMode = StrictMode;\n    exports.Suspense = Suspense;\n    exports.isValidElementType = isValidElementType;\n    exports.isAsyncMode = isAsyncMode;\n    exports.isConcurrentMode = isConcurrentMode;\n    exports.isContextConsumer = isContextConsumer;\n    exports.isContextProvider = isContextProvider;\n    exports.isElement = isElement;\n    exports.isForwardRef = isForwardRef;\n    exports.isFragment = isFragment;\n    exports.isLazy = isLazy;\n    exports.isMemo = isMemo;\n    exports.isPortal = isPortal;\n    exports.isProfiler = isProfiler;\n    exports.isStrictMode = isStrictMode;\n    exports.isSuspense = isSuspense;\n  })();\n}\n\n/***/ }),\n\n/***/ \"./node_modules/react-is/index.js\":\n/*!****************************************!*\\\n  !*** ./node_modules/react-is/index.js ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"./node_modules/react-is/cjs/react-is.development.js\");\n}\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/components/Tab.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/components/Tab.js ***!\n  \\*******************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Tab; });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\n\n\n\nvar DEFAULT_CLASS = 'react-tabs__tab';\n\nvar Tab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tab, _Component);\n\n  function Tab() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.checkFocus();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.checkFocus();\n  };\n\n  _proto.checkFocus = function checkFocus() {\n    var _this$props = this.props,\n        selected = _this$props.selected,\n        focus = _this$props.focus;\n\n    if (selected && focus) {\n      this.node.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _cx,\n        _this = this;\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        className = _this$props2.className,\n        disabled = _this$props2.disabled,\n        disabledClassName = _this$props2.disabledClassName,\n        focus = _this$props2.focus,\n        id = _this$props2.id,\n        panelId = _this$props2.panelId,\n        selected = _this$props2.selected,\n        selectedClassName = _this$props2.selectedClassName,\n        tabIndex = _this$props2.tabIndex,\n        tabRef = _this$props2.tabRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"className\", \"disabled\", \"disabledClassName\", \"focus\", \"id\", \"panelId\", \"selected\", \"selectedClassName\", \"tabIndex\", \"tabRef\"]);\n\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"li\", _extends({}, attributes, {\n      className: classnames__WEBPACK_IMPORTED_MODULE_2___default()(className, (_cx = {}, _cx[selectedClassName] = selected, _cx[disabledClassName] = disabled, _cx)),\n      ref: function ref(node) {\n        _this.node = node;\n        if (tabRef) tabRef(node);\n      },\n      role: \"tab\",\n      id: id,\n      \"aria-selected\": selected ? 'true' : 'false',\n      \"aria-disabled\": disabled ? 'true' : 'false',\n      \"aria-controls\": panelId,\n      tabIndex: tabIndex || (selected ? '0' : null)\n    }), children);\n  };\n\n  return Tab;\n}(react__WEBPACK_IMPORTED_MODULE_1__[\"Component\"]);\n\nTab.defaultProps = {\n  className: DEFAULT_CLASS,\n  disabledClassName: DEFAULT_CLASS + \"--disabled\",\n  focus: false,\n  id: null,\n  panelId: null,\n  selected: false,\n  selectedClassName: DEFAULT_CLASS + \"--selected\"\n};\n\nTab.propTypes =  true ? {\n  children: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.array, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.object, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string]),\n  className: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.array, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.object]),\n  disabled: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.bool,\n  tabIndex: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,\n  disabledClassName: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,\n  focus: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.bool,\n  // private\n  id: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,\n  // private\n  panelId: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,\n  // private\n  selected: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.bool,\n  // private\n  selectedClassName: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,\n  tabRef: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.func // private\n\n} : undefined;\nTab.tabsRole = 'Tab';\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/components/TabList.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/components/TabList.js ***!\n  \\***********************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TabList; });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\n\n\n\n\nvar TabList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TabList, _Component);\n\n  function TabList() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TabList.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"className\"]);\n\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"ul\", _extends({}, attributes, {\n      className: classnames__WEBPACK_IMPORTED_MODULE_2___default()(className),\n      role: \"tablist\"\n    }), children);\n  };\n\n  return TabList;\n}(react__WEBPACK_IMPORTED_MODULE_1__[\"Component\"]);\n\nTabList.defaultProps = {\n  className: 'react-tabs__tab-list'\n};\n\nTabList.propTypes =  true ? {\n  children: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.object, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.array]),\n  className: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.array, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.object])\n} : undefined;\nTabList.tabsRole = 'TabList';\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/components/TabPanel.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/components/TabPanel.js ***!\n  \\************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TabPanel; });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\n\n\n\nvar DEFAULT_CLASS = 'react-tabs__tab-panel';\n\nvar TabPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TabPanel, _Component);\n\n  function TabPanel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TabPanel.prototype;\n\n  _proto.render = function render() {\n    var _cx;\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className,\n        forceRender = _this$props.forceRender,\n        id = _this$props.id,\n        selected = _this$props.selected,\n        selectedClassName = _this$props.selectedClassName,\n        tabId = _this$props.tabId,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"className\", \"forceRender\", \"id\", \"selected\", \"selectedClassName\", \"tabId\"]);\n\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", _extends({}, attributes, {\n      className: classnames__WEBPACK_IMPORTED_MODULE_2___default()(className, (_cx = {}, _cx[selectedClassName] = selected, _cx)),\n      role: \"tabpanel\",\n      id: id,\n      \"aria-labelledby\": tabId\n    }), forceRender || selected ? children : null);\n  };\n\n  return TabPanel;\n}(react__WEBPACK_IMPORTED_MODULE_1__[\"Component\"]);\n\nTabPanel.defaultProps = {\n  className: DEFAULT_CLASS,\n  forceRender: false,\n  selectedClassName: DEFAULT_CLASS + \"--selected\"\n};\n\nTabPanel.propTypes =  true ? {\n  children: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.node,\n  className: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.array, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.object]),\n  forceRender: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.bool,\n  id: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,\n  // private\n  selected: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.bool,\n  // private\n  selectedClassName: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,\n  tabId: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string // private\n\n} : undefined;\nTabPanel.tabsRole = 'TabPanel';\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/components/Tabs.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/components/Tabs.js ***!\n  \\********************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Tabs; });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _helpers_propTypes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/propTypes */ \"./node_modules/react-tabs/esm/helpers/propTypes.js\");\n/* harmony import */ var _UncontrolledTabs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./UncontrolledTabs */ \"./node_modules/react-tabs/esm/components/UncontrolledTabs.js\");\n/* harmony import */ var _helpers_count__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/count */ \"./node_modules/react-tabs/esm/helpers/count.js\");\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\n\n\n\n\n\nvar MODE_CONTROLLED = 0;\nvar MODE_UNCONTROLLED = 1;\n\nvar Tabs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tabs, _Component);\n\n  function Tabs(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    _this.handleSelected = function (index, last, event) {\n      var onSelect = _this.props.onSelect;\n      var mode = _this.state.mode; // Call change event handler\n\n      if (typeof onSelect === 'function') {\n        // Check if the change event handler cancels the tab change\n        if (onSelect(index, last, event) === false) return;\n      }\n\n      var state = {\n        // Set focus if the change was triggered from the keyboard\n        focus: event.type === 'keydown'\n      };\n\n      if (mode === MODE_UNCONTROLLED) {\n        // Update selected index\n        state.selectedIndex = index;\n      }\n\n      _this.setState(state);\n    };\n\n    _this.state = Tabs.copyPropsToState(_this.props, {}, props.defaultFocus);\n    return _this;\n  }\n\n  Tabs.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    return Tabs.copyPropsToState(props, state);\n  };\n\n  Tabs.getModeFromProps = function getModeFromProps(props) {\n    return props.selectedIndex === null ? MODE_UNCONTROLLED : MODE_CONTROLLED;\n  }; // preserve the existing selectedIndex from state.\n  // If the state has not selectedIndex, default to the defaultIndex or 0\n\n\n  Tabs.copyPropsToState = function copyPropsToState(props, state, focus) {\n    if (focus === void 0) {\n      focus = false;\n    }\n\n    if (  true && state.mode !== undefined && state.mode !== Tabs.getModeFromProps(props)) {\n      throw new Error(\"Switching between controlled mode (by using `selectedIndex`) and uncontrolled mode is not supported in `Tabs`.\\nFor more information about controlled and uncontrolled mode of react-tabs see the README.\");\n    }\n\n    var newState = {\n      focus: focus,\n      mode: Tabs.getModeFromProps(props)\n    };\n\n    if (newState.mode === MODE_UNCONTROLLED) {\n      var maxTabIndex = Object(_helpers_count__WEBPACK_IMPORTED_MODULE_4__[\"getTabsCount\"])(props.children) - 1;\n      var selectedIndex = null;\n\n      if (state.selectedIndex != null) {\n        selectedIndex = Math.min(state.selectedIndex, maxTabIndex);\n      } else {\n        selectedIndex = props.defaultIndex || 0;\n      }\n\n      newState.selectedIndex = selectedIndex;\n    }\n\n    return newState;\n  };\n\n  var _proto = Tabs.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        defaultIndex = _this$props.defaultIndex,\n        defaultFocus = _this$props.defaultFocus,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"defaultIndex\", \"defaultFocus\"]);\n\n    var _this$state = this.state,\n        focus = _this$state.focus,\n        selectedIndex = _this$state.selectedIndex;\n    props.focus = focus;\n    props.onSelect = this.handleSelected;\n\n    if (selectedIndex != null) {\n      props.selectedIndex = selectedIndex;\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_UncontrolledTabs__WEBPACK_IMPORTED_MODULE_3__[\"default\"], props, children);\n  };\n\n  return Tabs;\n}(react__WEBPACK_IMPORTED_MODULE_1__[\"Component\"]);\n\nTabs.defaultProps = {\n  defaultFocus: false,\n  forceRenderTabPanel: false,\n  selectedIndex: null,\n  defaultIndex: null\n};\n\nTabs.propTypes =  true ? {\n  children: _helpers_propTypes__WEBPACK_IMPORTED_MODULE_2__[\"childrenPropType\"],\n  direction: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.oneOf(['rtl', 'ltr']),\n  className: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.array, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.object]),\n  defaultFocus: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.bool,\n  defaultIndex: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.number,\n  disabledTabClassName: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,\n  domRef: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.func,\n  forceRenderTabPanel: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.bool,\n  onSelect: _helpers_propTypes__WEBPACK_IMPORTED_MODULE_2__[\"onSelectPropType\"],\n  selectedIndex: _helpers_propTypes__WEBPACK_IMPORTED_MODULE_2__[\"selectedIndexPropType\"],\n  selectedTabClassName: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,\n  selectedTabPanelClassName: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string\n} : undefined;\nTabs.tabsRole = 'Tabs';\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/components/UncontrolledTabs.js\":\n/*!********************************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/components/UncontrolledTabs.js ***!\n  \\********************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return UncontrolledTabs; });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _helpers_uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/uuid */ \"./node_modules/react-tabs/esm/helpers/uuid.js\");\n/* harmony import */ var _helpers_propTypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/propTypes */ \"./node_modules/react-tabs/esm/helpers/propTypes.js\");\n/* harmony import */ var _helpers_count__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/count */ \"./node_modules/react-tabs/esm/helpers/count.js\");\n/* harmony import */ var _helpers_childrenDeepMap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/childrenDeepMap */ \"./node_modules/react-tabs/esm/helpers/childrenDeepMap.js\");\n/* harmony import */ var _helpers_elementTypes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/elementTypes */ \"./node_modules/react-tabs/esm/helpers/elementTypes.js\");\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\n\n\n\n\n\n\n\n\n\nfunction isNode(node) {\n  return node && 'getAttribute' in node;\n} // Determine if a node from event.target is a Tab element\n\n\nfunction isTabNode(node) {\n  return isNode(node) && node.getAttribute('role') === 'tab';\n} // Determine if a tab node is disabled\n\n\nfunction isTabDisabled(node) {\n  return isNode(node) && node.getAttribute('aria-disabled') === 'true';\n}\n\nvar canUseActiveElement;\n\ntry {\n  canUseActiveElement = !!(typeof window !== 'undefined' && window.document && window.document.activeElement);\n} catch (e) {\n  // Work around for IE bug when accessing document.activeElement in an iframe\n  // Refer to the following resources:\n  // http://stackoverflow.com/a/10982960/369687\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12733599\n  canUseActiveElement = false;\n}\n\nvar UncontrolledTabs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(UncontrolledTabs, _Component);\n\n  function UncontrolledTabs() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.tabNodes = [];\n\n    _this.handleKeyDown = function (e) {\n      var direction = _this.props.direction;\n\n      if (_this.isTabFromContainer(e.target)) {\n        var index = _this.props.selectedIndex;\n        var preventDefault = false;\n        var useSelectedIndex = false;\n\n        if (e.keyCode === 32 || e.keyCode === 13) {\n          preventDefault = true;\n          useSelectedIndex = false;\n\n          _this.handleClick(e);\n        }\n\n        if (e.keyCode === 37 || e.keyCode === 38) {\n          // Select next tab to the left\n          if (direction === 'rtl') {\n            index = _this.getNextTab(index);\n          } else {\n            index = _this.getPrevTab(index);\n          }\n\n          preventDefault = true;\n          useSelectedIndex = true;\n        } else if (e.keyCode === 39 || e.keyCode === 40) {\n          // Select next tab to the right\n          if (direction === 'rtl') {\n            index = _this.getPrevTab(index);\n          } else {\n            index = _this.getNextTab(index);\n          }\n\n          preventDefault = true;\n          useSelectedIndex = true;\n        } else if (e.keyCode === 35) {\n          // Select last tab (End key)\n          index = _this.getLastTab();\n          preventDefault = true;\n          useSelectedIndex = true;\n        } else if (e.keyCode === 36) {\n          // Select first tab (Home key)\n          index = _this.getFirstTab();\n          preventDefault = true;\n          useSelectedIndex = true;\n        } // This prevents scrollbars from moving around\n\n\n        if (preventDefault) {\n          e.preventDefault();\n        } // Only use the selected index in the state if we're not using the tabbed index\n\n\n        if (useSelectedIndex) {\n          _this.setSelected(index, e);\n        }\n      }\n    };\n\n    _this.handleClick = function (e) {\n      var node = e.target;\n\n      do {\n        if (_this.isTabFromContainer(node)) {\n          if (isTabDisabled(node)) {\n            return;\n          }\n\n          var index = [].slice.call(node.parentNode.children).filter(isTabNode).indexOf(node);\n\n          _this.setSelected(index, e);\n\n          return;\n        } // eslint-disable-next-line no-cond-assign\n\n      } while ((node = node.parentNode) != null);\n    };\n\n    return _this;\n  }\n\n  var _proto = UncontrolledTabs.prototype;\n\n  _proto.setSelected = function setSelected(index, event) {\n    // Check index boundary\n    if (index < 0 || index >= this.getTabsCount()) return;\n    var _this$props = this.props,\n        onSelect = _this$props.onSelect,\n        selectedIndex = _this$props.selectedIndex; // Call change event handler\n\n    onSelect(index, selectedIndex, event);\n  };\n\n  _proto.getNextTab = function getNextTab(index) {\n    var count = this.getTabsCount(); // Look for non-disabled tab from index to the last tab on the right\n\n    for (var i = index + 1; i < count; i++) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    } // If no tab found, continue searching from first on left to index\n\n\n    for (var _i = 0; _i < index; _i++) {\n      if (!isTabDisabled(this.getTab(_i))) {\n        return _i;\n      }\n    } // No tabs are disabled, return index\n\n\n    return index;\n  };\n\n  _proto.getPrevTab = function getPrevTab(index) {\n    var i = index; // Look for non-disabled tab from index to first tab on the left\n\n    while (i--) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    } // If no tab found, continue searching from last tab on right to index\n\n\n    i = this.getTabsCount();\n\n    while (i-- > index) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    } // No tabs are disabled, return index\n\n\n    return index;\n  };\n\n  _proto.getFirstTab = function getFirstTab() {\n    var count = this.getTabsCount(); // Look for non disabled tab from the first tab\n\n    for (var i = 0; i < count; i++) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  _proto.getLastTab = function getLastTab() {\n    var i = this.getTabsCount(); // Look for non disabled tab from the last tab\n\n    while (i--) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  _proto.getTabsCount = function getTabsCount() {\n    var children = this.props.children;\n    return Object(_helpers_count__WEBPACK_IMPORTED_MODULE_5__[\"getTabsCount\"])(children);\n  };\n\n  _proto.getPanelsCount = function getPanelsCount() {\n    var children = this.props.children;\n    return Object(_helpers_count__WEBPACK_IMPORTED_MODULE_5__[\"getPanelsCount\"])(children);\n  };\n\n  _proto.getTab = function getTab(index) {\n    return this.tabNodes[\"tabs-\" + index];\n  };\n\n  _proto.getChildren = function getChildren() {\n    var _this2 = this;\n\n    var index = 0;\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        disabledTabClassName = _this$props2.disabledTabClassName,\n        focus = _this$props2.focus,\n        forceRenderTabPanel = _this$props2.forceRenderTabPanel,\n        selectedIndex = _this$props2.selectedIndex,\n        selectedTabClassName = _this$props2.selectedTabClassName,\n        selectedTabPanelClassName = _this$props2.selectedTabPanelClassName;\n    this.tabIds = this.tabIds || [];\n    this.panelIds = this.panelIds || [];\n    var diff = this.tabIds.length - this.getTabsCount(); // Add ids if new tabs have been added\n    // Don't bother removing ids, just keep them in case they are added again\n    // This is more efficient, and keeps the uuid counter under control\n\n    while (diff++ < 0) {\n      this.tabIds.push(Object(_helpers_uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])());\n      this.panelIds.push(Object(_helpers_uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])());\n    } // Map children to dynamically setup refs\n\n\n    return Object(_helpers_childrenDeepMap__WEBPACK_IMPORTED_MODULE_6__[\"deepMap\"])(children, function (child) {\n      var result = child; // Clone TabList and Tab components to have refs\n\n      if (Object(_helpers_elementTypes__WEBPACK_IMPORTED_MODULE_7__[\"isTabList\"])(child)) {\n        var listIndex = 0; // Figure out if the current focus in the DOM is set on a Tab\n        // If it is we should keep the focus on the next selected tab\n\n        var wasTabFocused = false;\n\n        if (canUseActiveElement) {\n          wasTabFocused = react__WEBPACK_IMPORTED_MODULE_1___default.a.Children.toArray(child.props.children).filter(_helpers_elementTypes__WEBPACK_IMPORTED_MODULE_7__[\"isTab\"]).some(function (tab, i) {\n            return document.activeElement === _this2.getTab(i);\n          });\n        }\n\n        result = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"cloneElement\"])(child, {\n          children: Object(_helpers_childrenDeepMap__WEBPACK_IMPORTED_MODULE_6__[\"deepMap\"])(child.props.children, function (tab) {\n            var key = \"tabs-\" + listIndex;\n            var selected = selectedIndex === listIndex;\n            var props = {\n              tabRef: function tabRef(node) {\n                _this2.tabNodes[key] = node;\n              },\n              id: _this2.tabIds[listIndex],\n              panelId: _this2.panelIds[listIndex],\n              selected: selected,\n              focus: selected && (focus || wasTabFocused)\n            };\n            if (selectedTabClassName) props.selectedClassName = selectedTabClassName;\n            if (disabledTabClassName) props.disabledClassName = disabledTabClassName;\n            listIndex++;\n            return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"cloneElement\"])(tab, props);\n          })\n        });\n      } else if (Object(_helpers_elementTypes__WEBPACK_IMPORTED_MODULE_7__[\"isTabPanel\"])(child)) {\n        var props = {\n          id: _this2.panelIds[index],\n          tabId: _this2.tabIds[index],\n          selected: selectedIndex === index\n        };\n        if (forceRenderTabPanel) props.forceRender = forceRenderTabPanel;\n        if (selectedTabPanelClassName) props.selectedClassName = selectedTabPanelClassName;\n        index++;\n        result = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"cloneElement\"])(child, props);\n      }\n\n      return result;\n    });\n  };\n  /**\n   * Determine if a node from event.target is a Tab element for the current Tabs container.\n   * If the clicked element is not a Tab, it returns false.\n   * If it finds another Tabs container between the Tab and `this`, it returns false.\n   */\n\n\n  _proto.isTabFromContainer = function isTabFromContainer(node) {\n    // return immediately if the clicked element is not a Tab.\n    if (!isTabNode(node)) {\n      return false;\n    } // Check if the first occurrence of a Tabs container is `this` one.\n\n\n    var nodeAncestor = node.parentElement;\n\n    do {\n      if (nodeAncestor === this.node) return true;\n      if (nodeAncestor.getAttribute('data-tabs')) break;\n      nodeAncestor = nodeAncestor.parentElement;\n    } while (nodeAncestor);\n\n    return false;\n  };\n\n  _proto.render = function render() {\n    var _this3 = this; // Delete all known props, so they don't get added to DOM\n\n\n    var _this$props3 = this.props,\n        children = _this$props3.children,\n        className = _this$props3.className,\n        disabledTabClassName = _this$props3.disabledTabClassName,\n        domRef = _this$props3.domRef,\n        focus = _this$props3.focus,\n        forceRenderTabPanel = _this$props3.forceRenderTabPanel,\n        onSelect = _this$props3.onSelect,\n        selectedIndex = _this$props3.selectedIndex,\n        selectedTabClassName = _this$props3.selectedTabClassName,\n        selectedTabPanelClassName = _this$props3.selectedTabPanelClassName,\n        attributes = _objectWithoutPropertiesLoose(_this$props3, [\"children\", \"className\", \"disabledTabClassName\", \"domRef\", \"focus\", \"forceRenderTabPanel\", \"onSelect\", \"selectedIndex\", \"selectedTabClassName\", \"selectedTabPanelClassName\"]);\n\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", _extends({}, attributes, {\n      className: classnames__WEBPACK_IMPORTED_MODULE_2___default()(className),\n      onClick: this.handleClick,\n      onKeyDown: this.handleKeyDown,\n      ref: function ref(node) {\n        _this3.node = node;\n        if (domRef) domRef(node);\n      },\n      \"data-tabs\": true\n    }), this.getChildren());\n  };\n\n  return UncontrolledTabs;\n}(react__WEBPACK_IMPORTED_MODULE_1__[\"Component\"]);\n\nUncontrolledTabs.defaultProps = {\n  className: 'react-tabs',\n  focus: false\n};\n\nUncontrolledTabs.propTypes =  true ? {\n  children: _helpers_propTypes__WEBPACK_IMPORTED_MODULE_4__[\"childrenPropType\"],\n  direction: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.oneOf(['rtl', 'ltr']),\n  className: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.array, prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.object]),\n  disabledTabClassName: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,\n  domRef: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.func,\n  focus: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.bool,\n  forceRenderTabPanel: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.bool,\n  onSelect: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.func.isRequired,\n  selectedIndex: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.number.isRequired,\n  selectedTabClassName: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,\n  selectedTabPanelClassName: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string\n} : undefined;\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/helpers/childrenDeepMap.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/helpers/childrenDeepMap.js ***!\n  \\****************************************************************/\n/*! exports provided: deepMap, deepForEach */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deepMap\", function() { return deepMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deepForEach\", function() { return deepForEach; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _elementTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./elementTypes */ \"./node_modules/react-tabs/esm/helpers/elementTypes.js\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n\n\n\nfunction isTabChild(child) {\n  return Object(_elementTypes__WEBPACK_IMPORTED_MODULE_1__[\"isTab\"])(child) || Object(_elementTypes__WEBPACK_IMPORTED_MODULE_1__[\"isTabList\"])(child) || Object(_elementTypes__WEBPACK_IMPORTED_MODULE_1__[\"isTabPanel\"])(child);\n}\n\nfunction deepMap(children, callback) {\n  return react__WEBPACK_IMPORTED_MODULE_0__[\"Children\"].map(children, function (child) {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return null;\n\n    if (isTabChild(child)) {\n      return callback(child);\n    }\n\n    if (child.props && child.props.children && typeof child.props.children === 'object') {\n      // Clone the child that has children and map them too\n      return Object(react__WEBPACK_IMPORTED_MODULE_0__[\"cloneElement\"])(child, _objectSpread({}, child.props, {\n        children: deepMap(child.props.children, callback)\n      }));\n    }\n\n    return child;\n  });\n}\nfunction deepForEach(children, callback) {\n  return react__WEBPACK_IMPORTED_MODULE_0__[\"Children\"].forEach(children, function (child) {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return;\n\n    if (Object(_elementTypes__WEBPACK_IMPORTED_MODULE_1__[\"isTab\"])(child) || Object(_elementTypes__WEBPACK_IMPORTED_MODULE_1__[\"isTabPanel\"])(child)) {\n      callback(child);\n    } else if (child.props && child.props.children && typeof child.props.children === 'object') {\n      if (Object(_elementTypes__WEBPACK_IMPORTED_MODULE_1__[\"isTabList\"])(child)) callback(child);\n      deepForEach(child.props.children, callback);\n    }\n  });\n}\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/helpers/count.js\":\n/*!******************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/helpers/count.js ***!\n  \\******************************************************/\n/*! exports provided: getTabsCount, getPanelsCount */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTabsCount\", function() { return getTabsCount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPanelsCount\", function() { return getPanelsCount; });\n/* harmony import */ var _childrenDeepMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./childrenDeepMap */ \"./node_modules/react-tabs/esm/helpers/childrenDeepMap.js\");\n/* harmony import */ var _elementTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./elementTypes */ \"./node_modules/react-tabs/esm/helpers/elementTypes.js\");\n\n\nfunction getTabsCount(children) {\n  var tabCount = 0;\n  Object(_childrenDeepMap__WEBPACK_IMPORTED_MODULE_0__[\"deepForEach\"])(children, function (child) {\n    if (Object(_elementTypes__WEBPACK_IMPORTED_MODULE_1__[\"isTab\"])(child)) tabCount++;\n  });\n  return tabCount;\n}\nfunction getPanelsCount(children) {\n  var panelCount = 0;\n  Object(_childrenDeepMap__WEBPACK_IMPORTED_MODULE_0__[\"deepForEach\"])(children, function (child) {\n    if (Object(_elementTypes__WEBPACK_IMPORTED_MODULE_1__[\"isTabPanel\"])(child)) panelCount++;\n  });\n  return panelCount;\n}\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/helpers/elementTypes.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/helpers/elementTypes.js ***!\n  \\*************************************************************/\n/*! exports provided: isTab, isTabList, isTabPanel */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isTab\", function() { return isTab; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isTabList\", function() { return isTabList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isTabPanel\", function() { return isTabPanel; });\nfunction makeTypeChecker(tabsRole) {\n  return function (element) {\n    return !!element.type && element.type.tabsRole === tabsRole;\n  };\n}\n\nvar isTab = makeTypeChecker('Tab');\nvar isTabList = makeTypeChecker('TabList');\nvar isTabPanel = makeTypeChecker('TabPanel');\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/helpers/propTypes.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/helpers/propTypes.js ***!\n  \\**********************************************************/\n/*! exports provided: childrenPropType, onSelectPropType, selectedIndexPropType */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"childrenPropType\", function() { return childrenPropType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onSelectPropType\", function() { return onSelectPropType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"selectedIndexPropType\", function() { return selectedIndexPropType; });\n/* harmony import */ var _childrenDeepMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./childrenDeepMap */ \"./node_modules/react-tabs/esm/helpers/childrenDeepMap.js\");\n/* harmony import */ var _elementTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./elementTypes */ \"./node_modules/react-tabs/esm/helpers/elementTypes.js\");\n\n\nfunction childrenPropType(props, propName, componentName) {\n  var error;\n  var tabsCount = 0;\n  var panelsCount = 0;\n  var tabListFound = false;\n  var listTabs = [];\n  var children = props[propName];\n  Object(_childrenDeepMap__WEBPACK_IMPORTED_MODULE_0__[\"deepForEach\"])(children, function (child) {\n    if (Object(_elementTypes__WEBPACK_IMPORTED_MODULE_1__[\"isTabList\"])(child)) {\n      if (child.props && child.props.children && typeof child.props.children === 'object') {\n        Object(_childrenDeepMap__WEBPACK_IMPORTED_MODULE_0__[\"deepForEach\"])(child.props.children, function (listChild) {\n          return listTabs.push(listChild);\n        });\n      }\n\n      if (tabListFound) {\n        error = new Error(\"Found multiple 'TabList' components inside 'Tabs'. Only one is allowed.\");\n      }\n\n      tabListFound = true;\n    }\n\n    if (Object(_elementTypes__WEBPACK_IMPORTED_MODULE_1__[\"isTab\"])(child)) {\n      if (!tabListFound || listTabs.indexOf(child) === -1) {\n        error = new Error(\"Found a 'Tab' component outside of the 'TabList' component. 'Tab' components \" + \"have to be inside the 'TabList' component.\");\n      }\n\n      tabsCount++;\n    } else if (Object(_elementTypes__WEBPACK_IMPORTED_MODULE_1__[\"isTabPanel\"])(child)) {\n      panelsCount++;\n    }\n  });\n\n  if (!error && tabsCount !== panelsCount) {\n    error = new Error(\"There should be an equal number of 'Tab' and 'TabPanel' in `\" + componentName + \"`. \" + (\"Received \" + tabsCount + \" 'Tab' and \" + panelsCount + \" 'TabPanel'.\"));\n  }\n\n  return error;\n}\nfunction onSelectPropType(props, propName, componentName, location, propFullName) {\n  var prop = props[propName];\n  var name = propFullName || propName;\n  var error = null;\n\n  if (prop && typeof prop !== 'function') {\n    error = new Error(\"Invalid \" + location + \" `\" + name + \"` of type `\" + typeof prop + \"` supplied \" + (\"to `\" + componentName + \"`, expected `function`.\"));\n  } else if (props.selectedIndex != null && prop == null) {\n    error = new Error(\"The \" + location + \" `\" + name + \"` is marked as required in `\" + componentName + \"`, but \" + \"its value is `undefined` or `null`.\\n\" + \"`onSelect` is required when `selectedIndex` is also set. Not doing so will \" + \"make the tabs not do anything, as `selectedIndex` indicates that you want to \" + \"handle the selected tab yourself.\\n\" + \"If you only want to set the inital tab replace `selectedIndex` with `defaultIndex`.\");\n  }\n\n  return error;\n}\nfunction selectedIndexPropType(props, propName, componentName, location, propFullName) {\n  var prop = props[propName];\n  var name = propFullName || propName;\n  var error = null;\n\n  if (prop != null && typeof prop !== 'number') {\n    error = new Error(\"Invalid \" + location + \" `\" + name + \"` of type `\" + typeof prop + \"` supplied to \" + (\"`\" + componentName + \"`, expected `number`.\"));\n  } else if (props.defaultIndex != null && prop != null) {\n    return new Error(\"The \" + location + \" `\" + name + \"` cannot be used together with `defaultIndex` \" + (\"in `\" + componentName + \"`.\\n\") + (\"Either remove `\" + name + \"` to let `\" + componentName + \"` handle the selected \") + \"tab internally or remove `defaultIndex` to handle it yourself.\");\n  }\n\n  return error;\n}\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/helpers/uuid.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/helpers/uuid.js ***!\n  \\*****************************************************/\n/*! exports provided: default, reset */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return uuid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reset\", function() { return reset; });\n// Get a universally unique identifier\nvar count = 0;\nfunction uuid() {\n  return \"react-tabs-\" + count++;\n}\nfunction reset() {\n  count = 0;\n}\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/index.js\":\n/*!**********************************************!*\\\n  !*** ./node_modules/react-tabs/esm/index.js ***!\n  \\**********************************************/\n/*! exports provided: Tabs, TabList, Tab, TabPanel, resetIdCounter */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_Tabs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Tabs */ \"./node_modules/react-tabs/esm/components/Tabs.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Tabs\", function() { return _components_Tabs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _components_TabList__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/TabList */ \"./node_modules/react-tabs/esm/components/TabList.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TabList\", function() { return _components_TabList__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony import */ var _components_Tab__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Tab */ \"./node_modules/react-tabs/esm/components/Tab.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Tab\", function() { return _components_Tab__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n/* harmony import */ var _components_TabPanel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/TabPanel */ \"./node_modules/react-tabs/esm/components/TabPanel.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TabPanel\", function() { return _components_TabPanel__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n/* harmony import */ var _helpers_uuid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers/uuid */ \"./node_modules/react-tabs/esm/helpers/uuid.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"resetIdCounter\", function() { return _helpers_uuid__WEBPACK_IMPORTED_MODULE_4__[\"reset\"]; });\n\n\n\n\n\n\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/style/react-tabs.css\":\n/*!******************************************************!*\\\n  !*** ./node_modules/react-tabs/style/react-tabs.css ***!\n  \\******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./node_modules/to-camel-case/index.js\":\n/*!*********************************************!*\\\n  !*** ./node_modules/to-camel-case/index.js ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar space = __webpack_require__(/*! to-space-case */ \"./node_modules/to-space-case/index.js\");\n/**\n * Export.\n */\n\n\nmodule.exports = toCamelCase;\n/**\n * Convert a `string` to camel case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toCamelCase(string) {\n  return space(string).replace(/\\s(\\w)/g, function (matches, letter) {\n    return letter.toUpperCase();\n  });\n}\n\n/***/ }),\n\n/***/ \"./node_modules/to-no-case/index.js\":\n/*!******************************************!*\\\n  !*** ./node_modules/to-no-case/index.js ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/**\n * Export.\n */\nmodule.exports = toNoCase;\n/**\n * Test whether a string is camel-case.\n */\n\nvar hasSpace = /\\s/;\nvar hasSeparator = /(_|-|\\.|:)/;\nvar hasCamel = /([a-z][A-Z]|[A-Z][a-z])/;\n/**\n * Remove any starting case from a `string`, like camel or snake, but keep\n * spaces and punctuation that may be important otherwise.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toNoCase(string) {\n  if (hasSpace.test(string)) return string.toLowerCase();\n  if (hasSeparator.test(string)) return (unseparate(string) || string).toLowerCase();\n  if (hasCamel.test(string)) return uncamelize(string).toLowerCase();\n  return string.toLowerCase();\n}\n/**\n * Separator splitter.\n */\n\n\nvar separatorSplitter = /[\\W_]+(.|$)/g;\n/**\n * Un-separate a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction unseparate(string) {\n  return string.replace(separatorSplitter, function (m, next) {\n    return next ? ' ' + next : '';\n  });\n}\n/**\n * Camelcase splitter.\n */\n\n\nvar camelSplitter = /(.)([A-Z]+)/g;\n/**\n * Un-camelcase a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction uncamelize(string) {\n  return string.replace(camelSplitter, function (m, previous, uppers) {\n    return previous + ' ' + uppers.toLowerCase().split('').join(' ');\n  });\n}\n\n/***/ }),\n\n/***/ \"./node_modules/to-space-case/index.js\":\n/*!*********************************************!*\\\n  !*** ./node_modules/to-space-case/index.js ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clean = __webpack_require__(/*! to-no-case */ \"./node_modules/to-no-case/index.js\");\n/**\n * Export.\n */\n\n\nmodule.exports = toSpaceCase;\n/**\n * Convert a `string` to space case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toSpaceCase(string) {\n  return clean(string).replace(/[\\W_]+(.|$)/g, function (matches, match) {\n    return match ? ' ' + match : '';\n  }).trim();\n}\n\n/***/ }),\n\n/***/ \"./node_modules/tt-react-custom-scrollbars/lib/Scrollbars/defaultRenderElements.js\":\n/*!*****************************************************************************************!*\\\n  !*** ./node_modules/tt-react-custom-scrollbars/lib/Scrollbars/defaultRenderElements.js ***!\n  \\*****************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.renderViewDefault = renderViewDefault;\nexports.renderTrackHorizontalDefault = renderTrackHorizontalDefault;\nexports.renderTrackVerticalDefault = renderTrackVerticalDefault;\nexports.renderThumbHorizontalDefault = renderThumbHorizontalDefault;\nexports.renderThumbVerticalDefault = renderThumbVerticalDefault;\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n/* eslint-disable react/prop-types */\n\n\nfunction renderViewDefault(props) {\n  return _react2[\"default\"].createElement('div', props);\n}\n\nfunction renderTrackHorizontalDefault(_ref) {\n  var style = _ref.style,\n      props = _objectWithoutProperties(_ref, ['style']);\n\n  var finalStyle = _extends({}, style, {\n    right: 2,\n    bottom: 2,\n    left: 2,\n    borderRadius: 3\n  });\n\n  return _react2[\"default\"].createElement('div', _extends({\n    style: finalStyle\n  }, props));\n}\n\nfunction renderTrackVerticalDefault(_ref2) {\n  var style = _ref2.style,\n      props = _objectWithoutProperties(_ref2, ['style']);\n\n  var finalStyle = _extends({}, style, {\n    right: 2,\n    bottom: 2,\n    top: 2,\n    borderRadius: 3\n  });\n\n  return _react2[\"default\"].createElement('div', _extends({\n    style: finalStyle\n  }, props));\n}\n\nfunction renderThumbHorizontalDefault(_ref3) {\n  var style = _ref3.style,\n      props = _objectWithoutProperties(_ref3, ['style']);\n\n  var finalStyle = _extends({}, style, {\n    cursor: 'pointer',\n    borderRadius: 'inherit',\n    backgroundColor: 'rgba(0,0,0,.2)'\n  });\n\n  return _react2[\"default\"].createElement('div', _extends({\n    style: finalStyle\n  }, props));\n}\n\nfunction renderThumbVerticalDefault(_ref4) {\n  var style = _ref4.style,\n      props = _objectWithoutProperties(_ref4, ['style']);\n\n  var finalStyle = _extends({}, style, {\n    cursor: 'pointer',\n    borderRadius: 'inherit',\n    backgroundColor: 'rgba(0,0,0,.2)'\n  });\n\n  return _react2[\"default\"].createElement('div', _extends({\n    style: finalStyle\n  }, props));\n}\n\n/***/ }),\n\n/***/ \"./node_modules/tt-react-custom-scrollbars/lib/Scrollbars/index.js\":\n/*!*************************************************************************!*\\\n  !*** ./node_modules/tt-react-custom-scrollbars/lib/Scrollbars/index.js ***!\n  \\*************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _raf2 = __webpack_require__(/*! raf */ \"./node_modules/raf/index.js\");\n\nvar _raf3 = _interopRequireDefault(_raf2);\n\nvar _domCss = __webpack_require__(/*! dom-css */ \"./node_modules/dom-css/index.js\");\n\nvar _domCss2 = _interopRequireDefault(_domCss);\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _isString = __webpack_require__(/*! ../utils/isString */ \"./node_modules/tt-react-custom-scrollbars/lib/utils/isString.js\");\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _getScrollbarWidth = __webpack_require__(/*! ../utils/getScrollbarWidth */ \"./node_modules/tt-react-custom-scrollbars/lib/utils/getScrollbarWidth.js\");\n\nvar _returnFalse = __webpack_require__(/*! ../utils/returnFalse */ \"./node_modules/tt-react-custom-scrollbars/lib/utils/returnFalse.js\");\n\nvar _returnFalse2 = _interopRequireDefault(_returnFalse);\n\nvar _getInnerWidth = __webpack_require__(/*! ../utils/getInnerWidth */ \"./node_modules/tt-react-custom-scrollbars/lib/utils/getInnerWidth.js\");\n\nvar _getInnerWidth2 = _interopRequireDefault(_getInnerWidth);\n\nvar _getInnerHeight = __webpack_require__(/*! ../utils/getInnerHeight */ \"./node_modules/tt-react-custom-scrollbars/lib/utils/getInnerHeight.js\");\n\nvar _getInnerHeight2 = _interopRequireDefault(_getInnerHeight);\n\nvar _styles = __webpack_require__(/*! ./styles */ \"./node_modules/tt-react-custom-scrollbars/lib/Scrollbars/styles.js\");\n\nvar _defaultRenderElements = __webpack_require__(/*! ./defaultRenderElements */ \"./node_modules/tt-react-custom-scrollbars/lib/Scrollbars/defaultRenderElements.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar POLL_SCROLLBAR_WIDTH_INTERVAL = 3000;\n\nvar Scrollbars = function (_Component) {\n  _inherits(Scrollbars, _Component);\n\n  function Scrollbars(props) {\n    var _ref;\n\n    _classCallCheck(this, Scrollbars);\n\n    for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, (_ref = Scrollbars.__proto__ || Object.getPrototypeOf(Scrollbars)).call.apply(_ref, [this, props].concat(rest)));\n\n    _this.getScrollLeft = _this.getScrollLeft.bind(_this);\n    _this.getScrollTop = _this.getScrollTop.bind(_this);\n    _this.getScrollWidth = _this.getScrollWidth.bind(_this);\n    _this.getScrollHeight = _this.getScrollHeight.bind(_this);\n    _this.getClientWidth = _this.getClientWidth.bind(_this);\n    _this.getClientHeight = _this.getClientHeight.bind(_this);\n    _this.getPaddingWidth = _this.getPaddingWidth.bind(_this);\n    _this.getPaddingHeight = _this.getPaddingHeight.bind(_this);\n    _this.getValues = _this.getValues.bind(_this);\n    _this.getThumbHorizontalWidth = _this.getThumbHorizontalWidth.bind(_this);\n    _this.getThumbVerticalHeight = _this.getThumbVerticalHeight.bind(_this);\n    _this.getScrollLeftForOffset = _this.getScrollLeftForOffset.bind(_this);\n    _this.getScrollTopForOffset = _this.getScrollTopForOffset.bind(_this);\n    _this.scrollLeft = _this.scrollLeft.bind(_this);\n    _this.scrollTop = _this.scrollTop.bind(_this);\n    _this.scrollToLeft = _this.scrollToLeft.bind(_this);\n    _this.scrollToTop = _this.scrollToTop.bind(_this);\n    _this.scrollToRight = _this.scrollToRight.bind(_this);\n    _this.scrollToBottom = _this.scrollToBottom.bind(_this);\n    _this.handleTrackMouseEnter = _this.handleTrackMouseEnter.bind(_this);\n    _this.handleTrackMouseLeave = _this.handleTrackMouseLeave.bind(_this);\n    _this.handleHorizontalTrackMouseDown = _this.handleHorizontalTrackMouseDown.bind(_this);\n    _this.handleVerticalTrackMouseDown = _this.handleVerticalTrackMouseDown.bind(_this);\n    _this.handleHorizontalThumbMouseDown = _this.handleHorizontalThumbMouseDown.bind(_this);\n    _this.handleVerticalThumbMouseDown = _this.handleVerticalThumbMouseDown.bind(_this);\n    _this.handleWindowResize = _this.handleWindowResize.bind(_this);\n    _this.handleScroll = _this.handleScroll.bind(_this);\n    _this.handleDrag = _this.handleDrag.bind(_this);\n    _this.handleDragEnd = _this.handleDragEnd.bind(_this);\n    _this.pollScrollbarWidth = _this.pollScrollbarWidth.bind(_this);\n    _this.state = {\n      didMountUniversal: false,\n      scrollbarWidth: 17\n    };\n    return _this;\n  }\n\n  _createClass(Scrollbars, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.addListeners();\n      this.update();\n      this.componentDidMountUniversal();\n    }\n  }, {\n    key: 'componentDidMountUniversal',\n    value: function componentDidMountUniversal() {\n      // eslint-disable-line react/sort-comp\n      var universal = this.props.universal;\n      if (!universal) return;\n      this.setState({\n        didMountUniversal: true\n      });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.update();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.removeListeners();\n      (0, _raf2.cancel)(this.requestFrame);\n      clearTimeout(this.hideTracksTimeout);\n      clearInterval(this.detectScrollingInterval);\n    }\n  }, {\n    key: 'getScrollLeft',\n    value: function getScrollLeft() {\n      if (!this.view) return 0;\n      return this.view.scrollLeft;\n    }\n  }, {\n    key: 'getScrollTop',\n    value: function getScrollTop() {\n      if (!this.view) return 0;\n      return this.view.scrollTop;\n    }\n  }, {\n    key: 'getScrollWidth',\n    value: function getScrollWidth() {\n      if (!this.view) return 0;\n      return this.view.scrollWidth - this.getPaddingWidth();\n    }\n  }, {\n    key: 'getScrollHeight',\n    value: function getScrollHeight() {\n      if (!this.view) return 0;\n      return this.view.scrollHeight - this.getPaddingHeight();\n    }\n  }, {\n    key: 'getClientWidth',\n    value: function getClientWidth() {\n      if (!this.view) return 0;\n      return this.view.clientWidth - this.getPaddingWidth();\n    }\n  }, {\n    key: 'getClientHeight',\n    value: function getClientHeight() {\n      if (!this.view) return 0;\n      return this.view.clientHeight - this.getPaddingHeight();\n    }\n  }, {\n    key: 'getPaddingWidth',\n    value: function getPaddingWidth() {\n      return _styles.scrollbarSize;\n    }\n  }, {\n    key: 'getPaddingHeight',\n    value: function getPaddingHeight() {\n      return _styles.scrollbarSize;\n    }\n  }, {\n    key: 'getValues',\n    value: function getValues() {\n      if (!this.view) return null;\n\n      var _ref2 = this.view || {},\n          _ref2$offsetWidth = _ref2.offsetWidth,\n          offsetWidth = _ref2$offsetWidth === undefined ? 0 : _ref2$offsetWidth,\n          _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeft = _ref2$scrollLeft === undefined ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTop = _ref2$scrollTop === undefined ? 0 : _ref2$scrollTop,\n          _ref2$scrollWidth = _ref2.scrollWidth,\n          realScrollWidth = _ref2$scrollWidth === undefined ? 0 : _ref2$scrollWidth,\n          _ref2$scrollHeight = _ref2.scrollHeight,\n          realScrollHeight = _ref2$scrollHeight === undefined ? 0 : _ref2$scrollHeight,\n          _ref2$clientWidth = _ref2.clientWidth,\n          realClientWidth = _ref2$clientWidth === undefined ? 0 : _ref2$clientWidth,\n          _ref2$clientHeight = _ref2.clientHeight,\n          realClientHeight = _ref2$clientHeight === undefined ? 0 : _ref2$clientHeight;\n\n      var scrollWidth = realScrollWidth - this.getPaddingWidth();\n      var scrollHeight = realScrollHeight - this.getPaddingHeight();\n      var clientWidth = realClientWidth - this.getPaddingWidth();\n      var clientHeight = realClientHeight - this.getPaddingHeight();\n      return {\n        left: scrollLeft / (scrollWidth - clientWidth) || 0,\n        top: scrollTop / (scrollHeight - clientHeight) || 0,\n        offsetWidth: offsetWidth,\n        realClientWidth: realClientWidth,\n        realClientHeight: realClientHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth,\n        scrollHeight: scrollHeight,\n        clientWidth: clientWidth,\n        clientHeight: clientHeight\n      };\n    }\n  }, {\n    key: 'getThumbHorizontalWidth',\n    value: function getThumbHorizontalWidth() {\n      var _props = this.props,\n          thumbSize = _props.thumbSize,\n          thumbMinSize = _props.thumbMinSize;\n      var _view = this.view,\n          realScrollWidth = _view.scrollWidth,\n          realClientWidth = _view.clientWidth;\n      var scrollWidth = realScrollWidth - this.getPaddingWidth();\n      var clientWidth = realClientWidth - this.getPaddingWidth();\n      var trackWidth = (0, _getInnerWidth2[\"default\"])(this.trackHorizontal);\n      var width = Math.ceil(clientWidth / scrollWidth * trackWidth);\n      if (scrollWidth <= clientWidth) return 0;\n      if (thumbSize) return thumbSize;\n      return Math.max(width, thumbMinSize);\n    }\n  }, {\n    key: 'getThumbVerticalHeight',\n    value: function getThumbVerticalHeight() {\n      var _props2 = this.props,\n          thumbSize = _props2.thumbSize,\n          thumbMinSize = _props2.thumbMinSize;\n      var _view2 = this.view,\n          realScrollHeight = _view2.scrollHeight,\n          realClientHeight = _view2.clientHeight;\n      var scrollHeight = realScrollHeight - this.getPaddingHeight();\n      var clientHeight = realClientHeight - this.getPaddingHeight();\n      var trackHeight = (0, _getInnerHeight2[\"default\"])(this.trackVertical);\n      var height = Math.ceil(clientHeight / scrollHeight * trackHeight);\n      if (scrollHeight <= clientHeight) return 0;\n      if (thumbSize) return thumbSize;\n      return Math.max(height, thumbMinSize);\n    }\n  }, {\n    key: 'getScrollLeftForOffset',\n    value: function getScrollLeftForOffset(offset) {\n      var _view3 = this.view,\n          realScrollWidth = _view3.scrollWidth,\n          realClientWidth = _view3.clientWidth;\n      var scrollWidth = realScrollWidth - this.getPaddingWidth();\n      var clientWidth = realClientWidth - this.getPaddingWidth();\n      var trackWidth = (0, _getInnerWidth2[\"default\"])(this.trackHorizontal);\n      var thumbWidth = this.getThumbHorizontalWidth();\n      return offset / (trackWidth - thumbWidth) * (scrollWidth - clientWidth);\n    }\n  }, {\n    key: 'getScrollTopForOffset',\n    value: function getScrollTopForOffset(offset) {\n      var _view4 = this.view,\n          realScrollHeight = _view4.scrollHeight,\n          realClientHeight = _view4.clientHeight;\n      var scrollHeight = realScrollHeight - this.getPaddingHeight();\n      var clientHeight = realClientHeight - this.getPaddingHeight();\n      var trackHeight = (0, _getInnerHeight2[\"default\"])(this.trackVertical);\n      var thumbHeight = this.getThumbVerticalHeight();\n      return offset / (trackHeight - thumbHeight) * (scrollHeight - clientHeight);\n    }\n  }, {\n    key: 'scrollLeft',\n    value: function scrollLeft() {\n      var left = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (!this.view) return;\n      this.view.scrollLeft = left;\n    }\n  }, {\n    key: 'scrollTop',\n    value: function scrollTop() {\n      var top = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (!this.view) return;\n      this.view.scrollTop = top;\n    }\n  }, {\n    key: 'scrollToLeft',\n    value: function scrollToLeft() {\n      if (!this.view) return;\n      this.view.scrollLeft = 0;\n    }\n  }, {\n    key: 'scrollToTop',\n    value: function scrollToTop() {\n      if (!this.view) return;\n      this.view.scrollTop = 0;\n    }\n  }, {\n    key: 'scrollToRight',\n    value: function scrollToRight() {\n      if (!this.view) return;\n      this.view.scrollLeft = this.view.scrollWidth - this.getPaddingWidth();\n    }\n  }, {\n    key: 'scrollToBottom',\n    value: function scrollToBottom() {\n      if (!this.view) return;\n      this.view.scrollTop = this.view.scrollHeight - this.getPaddingHeight();\n    }\n  }, {\n    key: 'addListeners',\n    value: function addListeners() {\n      /* istanbul ignore if */\n      if (typeof document === 'undefined' || !this.view) return;\n      var view = this.view,\n          trackHorizontal = this.trackHorizontal,\n          trackVertical = this.trackVertical,\n          thumbHorizontal = this.thumbHorizontal,\n          thumbVertical = this.thumbVertical;\n      view.addEventListener('scroll', this.handleScroll);\n      trackHorizontal.addEventListener('mouseenter', this.handleTrackMouseEnter);\n      trackHorizontal.addEventListener('mouseleave', this.handleTrackMouseLeave);\n      trackHorizontal.addEventListener('mousedown', this.handleHorizontalTrackMouseDown);\n      trackVertical.addEventListener('mouseenter', this.handleTrackMouseEnter);\n      trackVertical.addEventListener('mouseleave', this.handleTrackMouseLeave);\n      trackVertical.addEventListener('mousedown', this.handleVerticalTrackMouseDown);\n      thumbHorizontal.addEventListener('mousedown', this.handleHorizontalThumbMouseDown);\n      thumbVertical.addEventListener('mousedown', this.handleVerticalThumbMouseDown);\n      window.addEventListener('resize', this.handleWindowResize);\n      this.pollScrollbarWidthTimer = setTimeout(this.pollScrollbarWidth, POLL_SCROLLBAR_WIDTH_INTERVAL);\n    }\n  }, {\n    key: 'removeListeners',\n    value: function removeListeners() {\n      /* istanbul ignore if */\n      if (typeof document === 'undefined' || !this.view) return;\n      var view = this.view,\n          trackHorizontal = this.trackHorizontal,\n          trackVertical = this.trackVertical,\n          thumbHorizontal = this.thumbHorizontal,\n          thumbVertical = this.thumbVertical;\n      if (view) view.removeEventListener('scroll', this.handleScroll);\n\n      if (trackHorizontal) {\n        trackHorizontal.removeEventListener('mouseenter', this.handleTrackMouseEnter);\n        trackHorizontal.removeEventListener('mouseleave', this.handleTrackMouseLeave);\n        trackHorizontal.removeEventListener('mousedown', this.handleHorizontalTrackMouseDown);\n      }\n\n      if (trackVertical) {\n        trackVertical.removeEventListener('mouseenter', this.handleTrackMouseEnter);\n        trackVertical.removeEventListener('mouseleave', this.handleTrackMouseLeave);\n        trackVertical.removeEventListener('mousedown', this.handleVerticalTrackMouseDown);\n      }\n\n      if (thumbHorizontal) thumbHorizontal.removeEventListener('mousedown', this.handleHorizontalThumbMouseDown);\n      if (thumbVertical) thumbVertical.removeEventListener('mousedown', this.handleVerticalThumbMouseDown);\n      window.removeEventListener('resize', this.handleWindowResize);\n      if (this.pollScrollbarWidthTimer) clearTimeout(this.pollScrollbarWidthTimer); // Possibly setup by `handleDragStart`\n\n      this.teardownDragging();\n    }\n  }, {\n    key: 'pollScrollbarWidth',\n    value: function pollScrollbarWidth() {\n      var _this2 = this;\n\n      this.raf(function () {\n        if (_this2.detectScrollbarWidthChange(_this2.getValues())) {\n          _this2._update(function () {\n            _this2.pollScrollbarWidthTimer = setTimeout(_this2.pollScrollbarWidth, POLL_SCROLLBAR_WIDTH_INTERVAL);\n          });\n        } else {\n          _this2.pollScrollbarWidthTimer = setTimeout(_this2.pollScrollbarWidth, POLL_SCROLLBAR_WIDTH_INTERVAL);\n        }\n      });\n    }\n  }, {\n    key: 'detectScrollbarWidthChange',\n    value: function detectScrollbarWidthChange(values) {\n      var _this3 = this;\n\n      var scrollLeft = values.scrollLeft,\n          scrollTop = values.scrollTop;\n      (0, _getScrollbarWidth.invalidateScrollbarWidth)();\n      var scrollbarWidth = (0, _getScrollbarWidth.getScrollbarWidth)(values);\n      var isChanged = scrollbarWidth !== this.state.scrollbarWidth && scrollbarWidth !== this.state.scrollbarWidth + 1;\n\n      if (isChanged) {\n        this.setState({\n          scrollbarWidth: scrollbarWidth\n        }, function () {\n          var _getValues = _this3.getValues(),\n              clientHeight = _getValues.clientHeight,\n              scrollHeight = _getValues.scrollHeight;\n\n          var nearBottom = Math.abs(scrollHeight - clientHeight - scrollTop) <= scrollbarWidth;\n\n          _this3.scrollLeft(scrollLeft);\n\n          if (nearBottom) {\n            _this3.scrollTop(scrollHeight - clientHeight);\n          } else {\n            _this3.scrollTop(scrollTop);\n          }\n        });\n      }\n\n      return isChanged;\n    }\n  }, {\n    key: 'handleScroll',\n    value: function handleScroll(event) {\n      var _this4 = this;\n\n      var _props3 = this.props,\n          onScroll = _props3.onScroll,\n          onScrollFrame = _props3.onScrollFrame;\n      if (onScroll) onScroll(event);\n      this.update(function (values) {\n        var scrollLeft = values.scrollLeft,\n            scrollTop = values.scrollTop;\n        _this4.viewScrollLeft = scrollLeft;\n        _this4.viewScrollTop = scrollTop;\n        if (onScrollFrame) onScrollFrame(values);\n      });\n      this.detectScrolling();\n    }\n  }, {\n    key: 'handleScrollStart',\n    value: function handleScrollStart() {\n      var onScrollStart = this.props.onScrollStart;\n      if (onScrollStart) onScrollStart();\n      this.handleScrollStartAutoHide();\n    }\n  }, {\n    key: 'handleScrollStartAutoHide',\n    value: function handleScrollStartAutoHide() {\n      var autoHide = this.props.autoHide;\n      if (!autoHide) return;\n      this.showTracks();\n    }\n  }, {\n    key: 'handleScrollStop',\n    value: function handleScrollStop() {\n      var onScrollStop = this.props.onScrollStop;\n      if (onScrollStop) onScrollStop();\n      this.handleScrollStopAutoHide();\n    }\n  }, {\n    key: 'handleScrollStopAutoHide',\n    value: function handleScrollStopAutoHide() {\n      var autoHide = this.props.autoHide;\n      if (!autoHide) return;\n      this.hideTracks();\n    }\n  }, {\n    key: 'handleWindowResize',\n    value: function handleWindowResize() {\n      this.update();\n    }\n  }, {\n    key: 'handleHorizontalTrackMouseDown',\n    value: function handleHorizontalTrackMouseDown(event) {\n      event.preventDefault();\n      var target = event.target,\n          clientX = event.clientX;\n\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n          targetLeft = _target$getBoundingCl.left;\n\n      var thumbWidth = this.getThumbHorizontalWidth();\n      var offset = Math.abs(targetLeft - clientX) - thumbWidth / 2;\n      this.view.scrollLeft = this.getScrollLeftForOffset(offset);\n    }\n  }, {\n    key: 'handleVerticalTrackMouseDown',\n    value: function handleVerticalTrackMouseDown(event) {\n      event.preventDefault();\n      var target = event.target,\n          clientY = event.clientY;\n\n      var _target$getBoundingCl2 = target.getBoundingClientRect(),\n          targetTop = _target$getBoundingCl2.top;\n\n      var thumbHeight = this.getThumbVerticalHeight();\n      var offset = Math.abs(targetTop - clientY) - thumbHeight / 2;\n      this.view.scrollTop = this.getScrollTopForOffset(offset);\n    }\n  }, {\n    key: 'handleHorizontalThumbMouseDown',\n    value: function handleHorizontalThumbMouseDown(event) {\n      event.preventDefault();\n      this.handleDragStart(event);\n      var target = event.target,\n          clientX = event.clientX;\n      var offsetWidth = target.offsetWidth;\n\n      var _target$getBoundingCl3 = target.getBoundingClientRect(),\n          left = _target$getBoundingCl3.left;\n\n      this.prevPageX = offsetWidth - (clientX - left);\n    }\n  }, {\n    key: 'handleVerticalThumbMouseDown',\n    value: function handleVerticalThumbMouseDown(event) {\n      event.preventDefault();\n      this.handleDragStart(event);\n      var target = event.target,\n          clientY = event.clientY;\n      var offsetHeight = target.offsetHeight;\n\n      var _target$getBoundingCl4 = target.getBoundingClientRect(),\n          top = _target$getBoundingCl4.top;\n\n      this.prevPageY = offsetHeight - (clientY - top);\n    }\n  }, {\n    key: 'setupDragging',\n    value: function setupDragging() {\n      (0, _domCss2[\"default\"])(document.body, _styles.disableSelectStyle);\n      document.addEventListener('mousemove', this.handleDrag);\n      document.addEventListener('mouseup', this.handleDragEnd);\n      document.onselectstart = _returnFalse2[\"default\"];\n    }\n  }, {\n    key: 'teardownDragging',\n    value: function teardownDragging() {\n      (0, _domCss2[\"default\"])(document.body, _styles.disableSelectStyleReset);\n      document.removeEventListener('mousemove', this.handleDrag);\n      document.removeEventListener('mouseup', this.handleDragEnd);\n      document.onselectstart = undefined;\n    }\n  }, {\n    key: 'handleDragStart',\n    value: function handleDragStart(event) {\n      this.dragging = true;\n      event.stopImmediatePropagation();\n      this.setupDragging();\n    }\n  }, {\n    key: 'handleDrag',\n    value: function handleDrag(event) {\n      if (this.prevPageX) {\n        var clientX = event.clientX;\n\n        var _trackHorizontal$getB = this.trackHorizontal.getBoundingClientRect(),\n            trackLeft = _trackHorizontal$getB.left;\n\n        var thumbWidth = this.getThumbHorizontalWidth();\n        var clickPosition = thumbWidth - this.prevPageX;\n        var offset = -trackLeft + clientX - clickPosition;\n        this.view.scrollLeft = this.getScrollLeftForOffset(offset);\n      }\n\n      if (this.prevPageY) {\n        var clientY = event.clientY;\n\n        var _trackVertical$getBou = this.trackVertical.getBoundingClientRect(),\n            trackTop = _trackVertical$getBou.top;\n\n        var thumbHeight = this.getThumbVerticalHeight();\n\n        var _clickPosition = thumbHeight - this.prevPageY;\n\n        var _offset = -trackTop + clientY - _clickPosition;\n\n        this.view.scrollTop = this.getScrollTopForOffset(_offset);\n      }\n\n      return false;\n    }\n  }, {\n    key: 'handleDragEnd',\n    value: function handleDragEnd() {\n      this.dragging = false;\n      this.prevPageX = this.prevPageY = 0;\n      this.teardownDragging();\n      this.handleDragEndAutoHide();\n    }\n  }, {\n    key: 'handleDragEndAutoHide',\n    value: function handleDragEndAutoHide() {\n      var autoHide = this.props.autoHide;\n      if (!autoHide) return;\n      this.hideTracks();\n    }\n  }, {\n    key: 'handleTrackMouseEnter',\n    value: function handleTrackMouseEnter() {\n      this.trackMouseOver = true;\n      this.handleTrackMouseEnterAutoHide();\n    }\n  }, {\n    key: 'handleTrackMouseEnterAutoHide',\n    value: function handleTrackMouseEnterAutoHide() {\n      var autoHide = this.props.autoHide;\n      if (!autoHide) return;\n      this.showTracks();\n    }\n  }, {\n    key: 'handleTrackMouseLeave',\n    value: function handleTrackMouseLeave() {\n      this.trackMouseOver = false;\n      this.handleTrackMouseLeaveAutoHide();\n    }\n  }, {\n    key: 'handleTrackMouseLeaveAutoHide',\n    value: function handleTrackMouseLeaveAutoHide() {\n      var autoHide = this.props.autoHide;\n      if (!autoHide) return;\n      this.hideTracks();\n    }\n  }, {\n    key: 'showTracks',\n    value: function showTracks() {\n      clearTimeout(this.hideTracksTimeout);\n      (0, _domCss2[\"default\"])(this.trackHorizontal, {\n        opacity: 1\n      });\n      (0, _domCss2[\"default\"])(this.trackVertical, {\n        opacity: 1\n      });\n    }\n  }, {\n    key: 'hideTracks',\n    value: function hideTracks() {\n      var _this5 = this;\n\n      if (this.dragging) return;\n      if (this.scrolling) return;\n      if (this.trackMouseOver) return;\n      var autoHideTimeout = this.props.autoHideTimeout;\n      clearTimeout(this.hideTracksTimeout);\n      this.hideTracksTimeout = setTimeout(function () {\n        (0, _domCss2[\"default\"])(_this5.trackHorizontal, {\n          opacity: 0\n        });\n        (0, _domCss2[\"default\"])(_this5.trackVertical, {\n          opacity: 0\n        });\n      }, autoHideTimeout);\n    }\n  }, {\n    key: 'detectScrolling',\n    value: function detectScrolling() {\n      var _this6 = this;\n\n      if (this.scrolling) return;\n      this.scrolling = true;\n      this.handleScrollStart();\n      this.detectScrollingInterval = setInterval(function () {\n        if (_this6.lastViewScrollLeft === _this6.viewScrollLeft && _this6.lastViewScrollTop === _this6.viewScrollTop) {\n          clearInterval(_this6.detectScrollingInterval);\n          _this6.scrolling = false;\n\n          _this6.handleScrollStop();\n        }\n\n        _this6.lastViewScrollLeft = _this6.viewScrollLeft;\n        _this6.lastViewScrollTop = _this6.viewScrollTop;\n      }, 100);\n    }\n  }, {\n    key: 'raf',\n    value: function raf(callback) {\n      var _this7 = this;\n\n      if (this.requestFrame) _raf3[\"default\"].cancel(this.requestFrame);\n      this.requestFrame = (0, _raf3[\"default\"])(function () {\n        _this7.requestFrame = undefined;\n        callback();\n      });\n    }\n  }, {\n    key: 'update',\n    value: function update(callback) {\n      var _this8 = this;\n\n      this.raf(function () {\n        _this8._update(function (values) {\n          _this8.detectScrollbarWidthChange(values);\n\n          if (typeof callback !== 'function') return;\n          callback(values);\n        });\n      });\n    }\n  }, {\n    key: '_update',\n    value: function _update(callback) {\n      var _props4 = this.props,\n          onUpdate = _props4.onUpdate,\n          hideTracksWhenNotNeeded = _props4.hideTracksWhenNotNeeded;\n      this.container.scrollTop = 0;\n      this.container.scrollLeft = 0;\n\n      if (!this.view) {\n        if (typeof callback === 'function') callback();\n        return;\n      }\n\n      var values = this.getValues();\n      var scrollLeft = values.scrollLeft,\n          clientWidth = values.clientWidth,\n          scrollWidth = values.scrollWidth;\n      var trackHorizontalWidth = (0, _getInnerWidth2[\"default\"])(this.trackHorizontal);\n      var thumbHorizontalWidth = this.getThumbHorizontalWidth();\n      var thumbHorizontalX = scrollLeft / (scrollWidth - clientWidth) * (trackHorizontalWidth - thumbHorizontalWidth);\n      var thumbHorizontalStyle = {\n        width: thumbHorizontalWidth,\n        transform: 'translateX(' + thumbHorizontalX + 'px)'\n      };\n      var scrollTop = values.scrollTop,\n          clientHeight = values.clientHeight,\n          scrollHeight = values.scrollHeight;\n      var trackVerticalHeight = (0, _getInnerHeight2[\"default\"])(this.trackVertical);\n      var thumbVerticalHeight = this.getThumbVerticalHeight();\n      var thumbVerticalY = scrollTop / (scrollHeight - clientHeight) * (trackVerticalHeight - thumbVerticalHeight);\n      var thumbVerticalStyle = {\n        height: thumbVerticalHeight,\n        transform: 'translateY(' + thumbVerticalY + 'px)'\n      };\n\n      if (hideTracksWhenNotNeeded) {\n        var trackHorizontalStyle = {\n          visibility: scrollWidth > clientWidth ? 'visible' : 'hidden'\n        };\n        var trackVerticalStyle = {\n          visibility: scrollHeight > clientHeight ? 'visible' : 'hidden'\n        };\n        (0, _domCss2[\"default\"])(this.trackHorizontal, trackHorizontalStyle);\n        (0, _domCss2[\"default\"])(this.trackVertical, trackVerticalStyle);\n      }\n\n      (0, _domCss2[\"default\"])(this.thumbHorizontal, thumbHorizontalStyle);\n      (0, _domCss2[\"default\"])(this.thumbVertical, thumbVerticalStyle);\n      if (onUpdate) onUpdate(values);\n      if (typeof callback !== 'function') return;\n      callback(values);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this9 = this;\n      /* eslint-disable no-unused-vars */\n\n\n      var _props5 = this.props,\n          onScroll = _props5.onScroll,\n          onScrollFrame = _props5.onScrollFrame,\n          onScrollStart = _props5.onScrollStart,\n          onScrollStop = _props5.onScrollStop,\n          onUpdate = _props5.onUpdate,\n          renderView = _props5.renderView,\n          renderTrackHorizontal = _props5.renderTrackHorizontal,\n          renderTrackVertical = _props5.renderTrackVertical,\n          renderThumbHorizontal = _props5.renderThumbHorizontal,\n          renderThumbVertical = _props5.renderThumbVertical,\n          tagName = _props5.tagName,\n          hideTracksWhenNotNeeded = _props5.hideTracksWhenNotNeeded,\n          autoHide = _props5.autoHide,\n          autoHideTimeout = _props5.autoHideTimeout,\n          autoHideDuration = _props5.autoHideDuration,\n          thumbSize = _props5.thumbSize,\n          thumbMinSize = _props5.thumbMinSize,\n          universal = _props5.universal,\n          autoHeight = _props5.autoHeight,\n          autoHeightMin = _props5.autoHeightMin,\n          autoHeightMax = _props5.autoHeightMax,\n          style = _props5.style,\n          children = _props5.children,\n          props = _objectWithoutProperties(_props5, ['onScroll', 'onScrollFrame', 'onScrollStart', 'onScrollStop', 'onUpdate', 'renderView', 'renderTrackHorizontal', 'renderTrackVertical', 'renderThumbHorizontal', 'renderThumbVertical', 'tagName', 'hideTracksWhenNotNeeded', 'autoHide', 'autoHideTimeout', 'autoHideDuration', 'thumbSize', 'thumbMinSize', 'universal', 'autoHeight', 'autoHeightMin', 'autoHeightMax', 'style', 'children']);\n      /* eslint-enable no-unused-vars */\n\n\n      var _state = this.state,\n          didMountUniversal = _state.didMountUniversal,\n          scrollbarWidth = _state.scrollbarWidth;\n\n      var containerStyle = _extends({}, _styles.containerStyleDefault, autoHeight && _extends({}, _styles.containerStyleAutoHeight, {\n        minHeight: autoHeightMin,\n        maxHeight: autoHeightMax\n      }), style);\n\n      var viewStyle = _extends({}, _styles.viewStyleDefault, {\n        // Hide scrollbars by setting a negative margin\n        marginRight: -this.getPaddingWidth() + (scrollbarWidth ? -scrollbarWidth : 0),\n        marginBottom: -this.getPaddingHeight() + (scrollbarWidth ? -scrollbarWidth : 0),\n        width: 'calc(100% + ' + (_styles.scrollbarSize + scrollbarWidth) + 'px)'\n      }, autoHeight && _extends({}, _styles.viewStyleAutoHeight, {\n        // Add paddingHeight and scrollbarWidth to autoHeight in order to compensate negative margins\n        minHeight: (0, _isString2[\"default\"])(autoHeightMin) ? 'calc(' + autoHeightMin + ' + ' + (this.getPaddingHeight() + scrollbarWidth) + 'px)' : autoHeightMin + this.getPaddingHeight() + scrollbarWidth,\n        maxHeight: (0, _isString2[\"default\"])(autoHeightMax) ? 'calc(' + autoHeightMax + ' + ' + (this.getPaddingHeight() + scrollbarWidth) + 'px)' : autoHeightMax + this.getPaddingHeight() + scrollbarWidth\n      }), autoHeight && universal && !didMountUniversal && {\n        minHeight: autoHeightMin,\n        maxHeight: autoHeightMax\n      }, universal && !didMountUniversal && _styles.viewStyleUniversalInitial);\n\n      var viewWrapperStyle = _extends({}, _styles.viewWrapperStyleDefault, autoHeight && _extends({}, _styles.viewWrapperStyleAutoHeight));\n\n      var viewWrappedStyle = _extends({}, _styles.viewWrappedStyleDefault);\n\n      var trackAutoHeightStyle = {\n        transition: 'opacity ' + autoHideDuration + 'ms',\n        opacity: 0\n      };\n\n      var trackHorizontalStyle = _extends({}, _styles.trackHorizontalStyleDefault, autoHide && trackAutoHeightStyle, universal && !didMountUniversal && {\n        display: 'none'\n      });\n\n      var trackVerticalStyle = _extends({}, _styles.trackVerticalStyleDefault, autoHide && trackAutoHeightStyle, universal && !didMountUniversal && {\n        display: 'none'\n      });\n\n      return (0, _react.createElement)(tagName, {\n        className: props.className ? props.className : '',\n        style: containerStyle,\n        ref: function ref(_ref3) {\n          _this9.container = _ref3;\n        }\n      }, [(0, _react.createElement)('div', {\n        style: viewStyle,\n        key: 'view',\n        ref: function ref(_ref4) {\n          _this9.view = _ref4;\n        }\n      }, [(0, _react.createElement)('div', {\n        style: viewWrapperStyle,\n        key: 'viewWrapper',\n        ref: function ref(_ref5) {\n          _this9.viewWrapper = _ref5;\n        }\n      }, [(0, _react.cloneElement)(renderView({\n        style: viewWrappedStyle\n      }), {\n        key: 'viewWrapped',\n        ref: function ref(_ref6) {\n          _this9.viewWrapped = _ref6;\n        }\n      }, children)])]), (0, _react.cloneElement)(renderTrackHorizontal({\n        style: trackHorizontalStyle\n      }), {\n        key: 'trackHorizontal',\n        ref: function ref(_ref7) {\n          _this9.trackHorizontal = _ref7;\n        }\n      }, (0, _react.cloneElement)(renderThumbHorizontal({\n        style: _styles.thumbHorizontalStyleDefault\n      }), {\n        ref: function ref(_ref8) {\n          _this9.thumbHorizontal = _ref8;\n        }\n      })), (0, _react.cloneElement)(renderTrackVertical({\n        style: trackVerticalStyle\n      }), {\n        key: 'trackVertical',\n        ref: function ref(_ref9) {\n          _this9.trackVertical = _ref9;\n        }\n      }, (0, _react.cloneElement)(renderThumbVertical({\n        style: _styles.thumbVerticalStyleDefault\n      }), {\n        ref: function ref(_ref10) {\n          _this9.thumbVertical = _ref10;\n        }\n      }))]);\n    }\n  }]);\n\n  return Scrollbars;\n}(_react.Component);\n\nexports[\"default\"] = Scrollbars;\nScrollbars.propTypes = {\n  onScroll: _propTypes2[\"default\"].func,\n  onScrollFrame: _propTypes2[\"default\"].func,\n  onScrollStart: _propTypes2[\"default\"].func,\n  onScrollStop: _propTypes2[\"default\"].func,\n  onUpdate: _propTypes2[\"default\"].func,\n  renderView: _propTypes2[\"default\"].func,\n  renderTrackHorizontal: _propTypes2[\"default\"].func,\n  renderTrackVertical: _propTypes2[\"default\"].func,\n  renderThumbHorizontal: _propTypes2[\"default\"].func,\n  renderThumbVertical: _propTypes2[\"default\"].func,\n  tagName: _propTypes2[\"default\"].string,\n  thumbSize: _propTypes2[\"default\"].number,\n  thumbMinSize: _propTypes2[\"default\"].number,\n  hideTracksWhenNotNeeded: _propTypes2[\"default\"].bool,\n  autoHide: _propTypes2[\"default\"].bool,\n  autoHideTimeout: _propTypes2[\"default\"].number,\n  autoHideDuration: _propTypes2[\"default\"].number,\n  autoHeight: _propTypes2[\"default\"].bool,\n  autoHeightMin: _propTypes2[\"default\"].oneOfType([_propTypes2[\"default\"].number, _propTypes2[\"default\"].string]),\n  autoHeightMax: _propTypes2[\"default\"].oneOfType([_propTypes2[\"default\"].number, _propTypes2[\"default\"].string]),\n  universal: _propTypes2[\"default\"].bool,\n  style: _propTypes2[\"default\"].object,\n  children: _propTypes2[\"default\"].node\n};\nScrollbars.defaultProps = {\n  renderView: _defaultRenderElements.renderViewDefault,\n  renderTrackHorizontal: _defaultRenderElements.renderTrackHorizontalDefault,\n  renderTrackVertical: _defaultRenderElements.renderTrackVerticalDefault,\n  renderThumbHorizontal: _defaultRenderElements.renderThumbHorizontalDefault,\n  renderThumbVertical: _defaultRenderElements.renderThumbVerticalDefault,\n  tagName: 'div',\n  thumbMinSize: 30,\n  hideTracksWhenNotNeeded: false,\n  autoHide: false,\n  autoHideTimeout: 1000,\n  autoHideDuration: 200,\n  autoHeight: false,\n  autoHeightMin: 0,\n  autoHeightMax: 200,\n  universal: false\n};\n\n/***/ }),\n\n/***/ \"./node_modules/tt-react-custom-scrollbars/lib/Scrollbars/styles.js\":\n/*!**************************************************************************!*\\\n  !*** ./node_modules/tt-react-custom-scrollbars/lib/Scrollbars/styles.js ***!\n  \\**************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar scrollbarSize = exports.scrollbarSize = 100;\nvar containerStyleDefault = exports.containerStyleDefault = {\n  position: 'relative',\n  overflow: 'hidden',\n  width: '100%',\n  height: '100%'\n};\nvar viewWrapperStyleDefault = exports.viewWrapperStyleDefault = {\n  paddingRight: scrollbarSize,\n  paddingBottom: scrollbarSize,\n  width: 'auto',\n  minWidth: '100%',\n  boxSizing: 'border-box',\n  verticalAlign: 'top',\n  display: 'inline-block'\n};\nvar viewWrappedStyleDefault = exports.viewWrappedStyleDefault = {\n  position: 'relative',\n  display: 'block',\n  verticalAlign: 'top',\n  width: '100%',\n  boxSizing: 'border-box'\n}; // Overrides containerStyleDefault properties\n\nvar containerStyleAutoHeight = exports.containerStyleAutoHeight = {\n  height: 'auto'\n};\nvar viewStyleDefault = exports.viewStyleDefault = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  overflow: 'scroll',\n  MsOverflowStyle: 'scrollbar',\n  WebkitOverflowScrolling: 'touch',\n  height: 'auto',\n  boxSizing: 'content-box'\n}; // Overrides viewStyleDefault properties\n\nvar viewStyleAutoHeight = exports.viewStyleAutoHeight = {\n  position: 'relative',\n  top: undefined,\n  left: undefined,\n  right: undefined,\n  bottom: undefined\n};\nvar viewStyleUniversalInitial = exports.viewStyleUniversalInitial = {\n  overflow: 'hidden',\n  marginRight: 0,\n  marginBottom: 0\n};\nvar trackHorizontalStyleDefault = exports.trackHorizontalStyleDefault = {\n  position: 'absolute',\n  height: 6\n};\nvar trackVerticalStyleDefault = exports.trackVerticalStyleDefault = {\n  position: 'absolute',\n  width: 6\n};\nvar thumbHorizontalStyleDefault = exports.thumbHorizontalStyleDefault = {\n  position: 'relative',\n  display: 'block',\n  height: '100%'\n};\nvar thumbVerticalStyleDefault = exports.thumbVerticalStyleDefault = {\n  position: 'relative',\n  display: 'block',\n  width: '100%'\n};\nvar disableSelectStyle = exports.disableSelectStyle = {\n  userSelect: 'none'\n};\nvar disableSelectStyleReset = exports.disableSelectStyleReset = {\n  userSelect: ''\n};\n\n/***/ }),\n\n/***/ \"./node_modules/tt-react-custom-scrollbars/lib/index.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/tt-react-custom-scrollbars/lib/index.js ***!\n  \\**************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Scrollbars = undefined;\n\nvar _Scrollbars = __webpack_require__(/*! ./Scrollbars */ \"./node_modules/tt-react-custom-scrollbars/lib/Scrollbars/index.js\");\n\nvar _Scrollbars2 = _interopRequireDefault(_Scrollbars);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nexports[\"default\"] = _Scrollbars2[\"default\"];\nexports.Scrollbars = _Scrollbars2[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/tt-react-custom-scrollbars/lib/utils/getInnerHeight.js\":\n/*!*****************************************************************************!*\\\n  !*** ./node_modules/tt-react-custom-scrollbars/lib/utils/getInnerHeight.js ***!\n  \\*****************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getInnerHeight;\n\nfunction getInnerHeight(el) {\n  var clientHeight = el.clientHeight;\n\n  var _getComputedStyle = getComputedStyle(el),\n      paddingTop = _getComputedStyle.paddingTop,\n      paddingBottom = _getComputedStyle.paddingBottom;\n\n  return clientHeight - parseFloat(paddingTop) - parseFloat(paddingBottom);\n}\n\n/***/ }),\n\n/***/ \"./node_modules/tt-react-custom-scrollbars/lib/utils/getInnerWidth.js\":\n/*!****************************************************************************!*\\\n  !*** ./node_modules/tt-react-custom-scrollbars/lib/utils/getInnerWidth.js ***!\n  \\****************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getInnerWidth;\n\nfunction getInnerWidth(el) {\n  var clientWidth = el.clientWidth;\n\n  var _getComputedStyle = getComputedStyle(el),\n      paddingLeft = _getComputedStyle.paddingLeft,\n      paddingRight = _getComputedStyle.paddingRight;\n\n  return clientWidth - parseFloat(paddingLeft) - parseFloat(paddingRight);\n}\n\n/***/ }),\n\n/***/ \"./node_modules/tt-react-custom-scrollbars/lib/utils/getScrollbarWidth.js\":\n/*!********************************************************************************!*\\\n  !*** ./node_modules/tt-react-custom-scrollbars/lib/utils/getScrollbarWidth.js ***!\n  \\********************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.invalidateScrollbarWidth = invalidateScrollbarWidth;\nvar scrollbarWidth = false;\n\nfunction invalidateScrollbarWidth() {\n  scrollbarWidth = false;\n}\n\nfunction getScrollbarWidth(values) {\n  if (scrollbarWidth !== false) return scrollbarWidth;\n  /* istanbul ignore else */\n\n  if (values && typeof document !== 'undefined') {\n    scrollbarWidth = values.offsetWidth - values.realClientWidth;\n  } else {\n    scrollbarWidth = 0;\n  }\n\n  return scrollbarWidth || 0;\n}\n\nexports[\"default\"] = getScrollbarWidth;\nexports.getScrollbarWidth = getScrollbarWidth;\n\n/***/ }),\n\n/***/ \"./node_modules/tt-react-custom-scrollbars/lib/utils/isString.js\":\n/*!***********************************************************************!*\\\n  !*** ./node_modules/tt-react-custom-scrollbars/lib/utils/isString.js ***!\n  \\***********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = isString;\n\nfunction isString(maybe) {\n  return typeof maybe === 'string';\n}\n\n/***/ }),\n\n/***/ \"./node_modules/tt-react-custom-scrollbars/lib/utils/returnFalse.js\":\n/*!**************************************************************************!*\\\n  !*** ./node_modules/tt-react-custom-scrollbars/lib/utils/returnFalse.js ***!\n  \\**************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = returnFalse;\n\nfunction returnFalse() {\n  return false;\n}\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/buildin/global.js\":\n/*!***********************************!*\\\n  !*** (webpack)/buildin/global.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nvar g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;\n\n/***/ }),\n\n/***/ \"./sass/_themes.scss\":\n/*!***************************!*\\\n  !*** ./sass/_themes.scss ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_bottom-widget-container.scss\":\n/*!*******************************************************!*\\\n  !*** ./sass/components/_bottom-widget-container.scss ***!\n  \\*******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_categorical-display.scss\":\n/*!***************************************************!*\\\n  !*** ./sass/components/_categorical-display.scss ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_chart-controls.scss\":\n/*!**********************************************!*\\\n  !*** ./sass/components/_chart-controls.scss ***!\n  \\**********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_chart-size.scss\":\n/*!******************************************!*\\\n  !*** ./sass/components/_chart-size.scss ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_chart-title.scss\":\n/*!*******************************************!*\\\n  !*** ./sass/components/_chart-title.scss ***!\n  \\*******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_chart-types.scss\":\n/*!*******************************************!*\\\n  !*** ./sass/components/_chart-types.scss ***!\n  \\*******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_ciq-asset-information.scss\":\n/*!*****************************************************!*\\\n  !*** ./sass/components/_ciq-asset-information.scss ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_ciq-chart-setting.scss\":\n/*!*************************************************!*\\\n  !*** ./sass/components/_ciq-chart-setting.scss ***!\n  \\*************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_ciq-chart-table.scss\":\n/*!***********************************************!*\\\n  !*** ./sass/components/_ciq-chart-table.scss ***!\n  \\***********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_ciq-crosshair.scss\":\n/*!*********************************************!*\\\n  !*** ./sass/components/_ciq-crosshair.scss ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_ciq-dialog.scss\":\n/*!******************************************!*\\\n  !*** ./sass/components/_ciq-dialog.scss ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_ciq-download.scss\":\n/*!********************************************!*\\\n  !*** ./sass/components/_ciq-download.scss ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_ciq-form.scss\":\n/*!****************************************!*\\\n  !*** ./sass/components/_ciq-form.scss ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_ciq-list.scss\":\n/*!****************************************!*\\\n  !*** ./sass/components/_ciq-list.scss ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_ciq-navigation-widget.scss\":\n/*!*****************************************************!*\\\n  !*** ./sass/components/_ciq-navigation-widget.scss ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_ciq-settings-dialog.scss\":\n/*!***************************************************!*\\\n  !*** ./sass/components/_ciq-settings-dialog.scss ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_comparison-list.scss\":\n/*!***********************************************!*\\\n  !*** ./sass/components/_comparison-list.scss ***!\n  \\***********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_draw-tools.scss\":\n/*!******************************************!*\\\n  !*** ./sass/components/_draw-tools.scss ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_highest-lowest-marker.scss\":\n/*!*****************************************************!*\\\n  !*** ./sass/components/_highest-lowest-marker.scss ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_icons.scss\":\n/*!*************************************!*\\\n  !*** ./sass/components/_icons.scss ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_last-digits.scss\":\n/*!*******************************************!*\\\n  !*** ./sass/components/_last-digits.scss ***!\n  \\*******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_menu-dropdown.scss\":\n/*!*********************************************!*\\\n  !*** ./sass/components/_menu-dropdown.scss ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_pagination-loader.scss\":\n/*!*************************************************!*\\\n  !*** ./sass/components/_pagination-loader.scss ***!\n  \\*************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_timeperiod.scss\":\n/*!******************************************!*\\\n  !*** ./sass/components/_timeperiod.scss ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/components/_view.scss\":\n/*!************************************!*\\\n  !*** ./sass/components/_view.scss ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/energy/oil usd/ic-oilusd.svg\":\n/*!****************************************************************!*\\\n  !*** ./sass/icons/active-symbols/energy/oil usd/ic-oilusd.svg ***!\n  \\****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-oilusd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-oilusd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/ic-otcbadge.svg\":\n/*!***************************************************!*\\\n  !*** ./sass/icons/active-symbols/ic-otcbadge.svg ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-otcbadge-usage\",\n      viewBox: \"0 0 13 9\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-otcbadge-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/ic-smartfx-placeholder.svg\":\n/*!**************************************************************!*\\\n  !*** ./sass/icons/active-symbols/ic-smartfx-placeholder.svg ***!\n  \\**************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-smartfx-placeholder-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-smartfx-placeholder-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/metals/ic-metal.svg\":\n/*!*******************************************************!*\\\n  !*** ./sass/icons/active-symbols/metals/ic-metal.svg ***!\n  \\*******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-metal-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-metal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/10 index/ic-10-index.svg\":\n/*!***********************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/10 index/ic-10-index.svg ***!\n  \\***********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-10-index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-10-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/100 index/ic-100-index.svg\":\n/*!*************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/100 index/ic-100-index.svg ***!\n  \\*************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-100-index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-100-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/1s10 index/ic-10-1s-index.svg\":\n/*!****************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/1s10 index/ic-10-1s-index.svg ***!\n  \\****************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-10-1s-index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-10-1s-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/1s100 index/ic-100-1s-index.svg\":\n/*!******************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/1s100 index/ic-100-1s-index.svg ***!\n  \\******************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-100-1s-index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-100-1s-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/25 index/ic-25-index.svg\":\n/*!***********************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/25 index/ic-25-index.svg ***!\n  \\***********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-25-index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-25-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/50 index/ic-50-index.svg\":\n/*!***********************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/50 index/ic-50-index.svg ***!\n  \\***********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-50-index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-50-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/75 index/ic-75-index.svg\":\n/*!***********************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/75 index/ic-75-index.svg ***!\n  \\***********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-75-index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-75-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/bear market/ic-marketbear.svg\":\n/*!****************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/bear market/ic-marketbear.svg ***!\n  \\****************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-marketbear-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-marketbear-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/bull market/ic-marketbull.svg\":\n/*!****************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/bull market/ic-marketbull.svg ***!\n  \\****************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-marketbull-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-marketbull-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/alert message/error.svg\":\n/*!********************************************!*\\\n  !*** ./sass/icons/alert message/error.svg ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"error-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#error-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/alert message/info.svg\":\n/*!*******************************************!*\\\n  !*** ./sass/icons/alert message/info.svg ***!\n  \\*******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"info-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#info-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/alert message/success.svg\":\n/*!**********************************************!*\\\n  !*** ./sass/icons/alert message/success.svg ***!\n  \\**********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"success-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#success-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/alert message/warning.svg\":\n/*!**********************************************!*\\\n  !*** ./sass/icons/alert message/warning.svg ***!\n  \\**********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"warning-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#warning-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/arrows/ic-arrow-green.svg\":\n/*!**********************************************!*\\\n  !*** ./sass/icons/arrows/ic-arrow-green.svg ***!\n  \\**********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-arrow-green-usage\",\n      viewBox: \"0 0 22 31\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-arrow-green-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/arrows/ic-arrow-orange.svg\":\n/*!***********************************************!*\\\n  !*** ./sass/icons/arrows/ic-arrow-orange.svg ***!\n  \\***********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-arrow-orange-usage\",\n      viewBox: \"0 0 22 31\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-arrow-orange-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/back/ic-back.svg\":\n/*!*************************************!*\\\n  !*** ./sass/icons/back/ic-back.svg ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-back-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-back-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart template/ic-charttemplate-normal.svg\":\n/*!******************************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart template/ic-charttemplate-normal.svg ***!\n  \\******************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-charttemplate-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-charttemplate-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/baseline/ic-baseline-normal.svg\":\n/*!*******************************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/baseline/ic-baseline-normal.svg ***!\n  \\*******************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-baseline-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-baseline-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/candle/ic-candle-normal.svg\":\n/*!***************************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/candle/ic-candle-normal.svg ***!\n  \\***************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-candle-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-candle-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/dot/ic-dot-normal.svg\":\n/*!*********************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/dot/ic-dot-normal.svg ***!\n  \\*********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-dot-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-dot-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/hollow candle/ic-hollowcandle-normal.svg\":\n/*!****************************************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/hollow candle/ic-hollowcandle-normal.svg ***!\n  \\****************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-hollowcandle-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-hollowcandle-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/ic-heikin-ashi-normal.svg\":\n/*!*************************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/ic-heikin-ashi-normal.svg ***!\n  \\*************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-heikin-ashi-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-heikin-ashi-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/ic-kagi-normal.svg\":\n/*!******************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/ic-kagi-normal.svg ***!\n  \\******************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-kagi-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-kagi-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/ic-linebreak-normal.svg\":\n/*!***********************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/ic-linebreak-normal.svg ***!\n  \\***********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-linebreak-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-linebreak-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/ic-pointfigure-normal.svg\":\n/*!*************************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/ic-pointfigure-normal.svg ***!\n  \\*************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-pointfigure-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-pointfigure-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/ic-rangebars-normal.svg\":\n/*!***********************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/ic-rangebars-normal.svg ***!\n  \\***********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-rangebars-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-rangebars-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/ic-renko-normal.svg\":\n/*!*******************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/ic-renko-normal.svg ***!\n  \\*******************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-renko-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-renko-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/line dot/ic-linedot-normal.svg\":\n/*!******************************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/line dot/ic-linedot-normal.svg ***!\n  \\******************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-linedot-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-linedot-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/line/ic-line-normal.svg\":\n/*!***********************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/line/ic-line-normal.svg ***!\n  \\***********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-line-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-line-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/ohlc/ic-ohlc-normal.svg\":\n/*!***********************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/ohlc/ic-ohlc-normal.svg ***!\n  \\***********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-ohlc-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-ohlc-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/spline/ic-spline-normal.svg\":\n/*!***************************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/spline/ic-spline-normal.svg ***!\n  \\***************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-spline-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-spline-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/table/table.svg\":\n/*!***************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/table/table.svg ***!\n  \\***************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"table-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#table-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/comparison/ic-comparison-normal.svg\":\n/*!***********************************************************************!*\\\n  !*** ./sass/icons/chart settings/comparison/ic-comparison-normal.svg ***!\n  \\***********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-comparison-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-comparison-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/crosshair/ic-crosshair-off.svg\":\n/*!******************************************************************!*\\\n  !*** ./sass/icons/chart settings/crosshair/ic-crosshair-off.svg ***!\n  \\******************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-crosshair-off-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-crosshair-off-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/crosshair/ic-crosshair-on.svg\":\n/*!*****************************************************************!*\\\n  !*** ./sass/icons/chart settings/crosshair/ic-crosshair-on.svg ***!\n  \\*****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-crosshair-on-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-crosshair-on-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/crosshair/ic-crosshair-tooltip.svg\":\n/*!**********************************************************************!*\\\n  !*** ./sass/icons/chart settings/crosshair/ic-crosshair-tooltip.svg ***!\n  \\**********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-crosshair-tooltip-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-crosshair-tooltip-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/drawing tools/ic-drawingtools-normal.svg\":\n/*!****************************************************************************!*\\\n  !*** ./sass/icons/chart settings/drawing tools/ic-drawingtools-normal.svg ***!\n  \\****************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-drawingtools-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-drawingtools-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/indicators/ic-indicator-normal.svg\":\n/*!**********************************************************************!*\\\n  !*** ./sass/icons/chart settings/indicators/ic-indicator-normal.svg ***!\n  \\**********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-indicator-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-indicator-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/setting/ic-position-bottom.svg\":\n/*!******************************************************************!*\\\n  !*** ./sass/icons/chart settings/setting/ic-position-bottom.svg ***!\n  \\******************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-position-bottom-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-position-bottom-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/setting/ic-position-left.svg\":\n/*!****************************************************************!*\\\n  !*** ./sass/icons/chart settings/setting/ic-position-left.svg ***!\n  \\****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-position-left-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-position-left-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/zoom-in/ic-zoomin-light.svg\":\n/*!***************************************************************!*\\\n  !*** ./sass/icons/chart settings/zoom-in/ic-zoomin-light.svg ***!\n  \\***************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-zoomin-light-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-zoomin-light-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/zoom-out/ic-zoomout-light.svg\":\n/*!*****************************************************************!*\\\n  !*** ./sass/icons/chart settings/zoom-out/ic-zoomout-light.svg ***!\n  \\*****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-zoomout-light-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-zoomout-light-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart/ic-down.svg\":\n/*!**************************************!*\\\n  !*** ./sass/icons/chart/ic-down.svg ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-down-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-down-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart/ic-maximize.svg\":\n/*!******************************************!*\\\n  !*** ./sass/icons/chart/ic-maximize.svg ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-maximize-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-maximize-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart/jump-to-today.svg\":\n/*!********************************************!*\\\n  !*** ./sass/icons/chart/jump-to-today.svg ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"jump-to-today-usage\",\n      viewBox: \"0 0 15.1 13.4\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#jump-to-today-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart/resize-icon.svg\":\n/*!******************************************!*\\\n  !*** ./sass/icons/chart/resize-icon.svg ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"resize-icon-usage\",\n      viewBox: \"0 0 6 14\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#resize-icon-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/clear/ic-clear.svg\":\n/*!***************************************!*\\\n  !*** ./sass/icons/clear/ic-clear.svg ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-clear-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-clear-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/close/ic-close-bold.svg\":\n/*!********************************************!*\\\n  !*** ./sass/icons/close/ic-close-bold.svg ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-close-bold-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-close-bold-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/close/ic-close-circle.svg\":\n/*!**********************************************!*\\\n  !*** ./sass/icons/close/ic-close-circle.svg ***!\n  \\**********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-close-circle-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-close-circle-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-close.svg\":\n/*!****************************************!*\\\n  !*** ./sass/icons/common/ic-close.svg ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-close-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-close-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-input-number-minus.svg\":\n/*!*****************************************************!*\\\n  !*** ./sass/icons/common/ic-input-number-minus.svg ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-input-number-minus-usage\",\n      viewBox: \"0 0 8 8\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-input-number-minus-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-input-number-plus.svg\":\n/*!****************************************************!*\\\n  !*** ./sass/icons/common/ic-input-number-plus.svg ***!\n  \\****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-input-number-plus-usage\",\n      viewBox: \"0 0 8 8\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-input-number-plus-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/delete/ic-delete.svg\":\n/*!*****************************************!*\\\n  !*** ./sass/icons/delete/ic-delete.svg ***!\n  \\*****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-delete-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-delete-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/download/ic-csv.svg\":\n/*!****************************************!*\\\n  !*** ./sass/icons/download/ic-csv.svg ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-csv-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-csv-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/download/ic-download.svg\":\n/*!*********************************************!*\\\n  !*** ./sass/icons/download/ic-download.svg ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-download-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-download-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/download/ic-png.svg\":\n/*!****************************************!*\\\n  !*** ./sass/icons/download/ic-png.svg ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-png-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-png-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/dropdown/ic-dropdown.svg\":\n/*!*********************************************!*\\\n  !*** ./sass/icons/dropdown/ic-dropdown.svg ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-dropdown-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-dropdown-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/edit/ic-edit.svg\":\n/*!*************************************!*\\\n  !*** ./sass/icons/edit/ic-edit.svg ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-edit-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-edit-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/favorite/ic-favorite-normal.svg\":\n/*!****************************************************!*\\\n  !*** ./sass/icons/favorite/ic-favorite-normal.svg ***!\n  \\****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-favorite-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-favorite-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/aud.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/aud.svg ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"aud-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#aud-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/cad.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/cad.svg ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"cad-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#cad-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/chf.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/chf.svg ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"chf-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#chf-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/chinese-traditional.svg\":\n/*!**************************************************!*\\\n  !*** ./sass/icons/flags/chinese-traditional.svg ***!\n  \\**************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"chinese-traditional-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#chinese-traditional-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/chinese.svg\":\n/*!**************************************!*\\\n  !*** ./sass/icons/flags/chinese.svg ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"chinese-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#chinese-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/dutch.svg\":\n/*!************************************!*\\\n  !*** ./sass/icons/flags/dutch.svg ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"dutch-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#dutch-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/eur.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/eur.svg ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"eur-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#eur-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/french.svg\":\n/*!*************************************!*\\\n  !*** ./sass/icons/flags/french.svg ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"french-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#french-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/gbp.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/gbp.svg ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"gbp-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#gbp-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/german.svg\":\n/*!*************************************!*\\\n  !*** ./sass/icons/flags/german.svg ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"german-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#german-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/hong kong.svg\":\n/*!****************************************!*\\\n  !*** ./sass/icons/flags/hong kong.svg ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"hong kong-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#hong kong-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/indonesia.svg\":\n/*!****************************************!*\\\n  !*** ./sass/icons/flags/indonesia.svg ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"indonesia-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#indonesia-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/italy.svg\":\n/*!************************************!*\\\n  !*** ./sass/icons/flags/italy.svg ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"italy-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#italy-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/jpy.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/jpy.svg ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"jpy-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#jpy-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/mxn.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/mxn.svg ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"mxn-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#mxn-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/nok.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/nok.svg ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"nok-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#nok-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/nzd.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/nzd.svg ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"nzd-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#nzd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/pln.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/pln.svg ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"pln-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#pln-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/portugal.svg\":\n/*!***************************************!*\\\n  !*** ./sass/icons/flags/portugal.svg ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"portugal-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#portugal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/russia.svg\":\n/*!*************************************!*\\\n  !*** ./sass/icons/flags/russia.svg ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"russia-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#russia-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/sek.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/sek.svg ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"sek-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#sek-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/spanish.svg\":\n/*!**************************************!*\\\n  !*** ./sass/icons/flags/spanish.svg ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"spanish-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#spanish-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/thailand.svg\":\n/*!***************************************!*\\\n  !*** ./sass/icons/flags/thailand.svg ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"thailand-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#thailand-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/usd.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/usd.svg ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"usd-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#usd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/vietnam.svg\":\n/*!**************************************!*\\\n  !*** ./sass/icons/flags/vietnam.svg ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"vietnam-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#vietnam-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/wallstreet.svg\":\n/*!*****************************************!*\\\n  !*** ./sass/icons/flags/wallstreet.svg ***!\n  \\*****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"wallstreet-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#wallstreet-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/measure/ic-measure.svg\":\n/*!*******************************************!*\\\n  !*** ./sass/icons/measure/ic-measure.svg ***!\n  \\*******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-measure-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-measure-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/navigation-widgets/ic-home.svg\":\n/*!***************************************************!*\\\n  !*** ./sass/icons/navigation-widgets/ic-home.svg ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-home-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-home-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/navigation-widgets/ic-scale-full.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/navigation-widgets/ic-scale-full.svg ***!\n  \\*********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-scale-full-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-scale-full-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/navigation-widgets/ic-zoomin.svg\":\n/*!*****************************************************!*\\\n  !*** ./sass/icons/navigation-widgets/ic-zoomin.svg ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-zoomin-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-zoomin-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/navigation-widgets/ic-zoomout.svg\":\n/*!******************************************************!*\\\n  !*** ./sass/icons/navigation-widgets/ic-zoomout.svg ***!\n  \\******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-zoomout-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-zoomout-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/pencil/ic-pencil.svg\":\n/*!*****************************************!*\\\n  !*** ./sass/icons/pencil/ic-pencil.svg ***!\n  \\*****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-pencil-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-pencil-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/placeholder/ic-placeholder.svg\":\n/*!***************************************************!*\\\n  !*** ./sass/icons/placeholder/ic-placeholder.svg ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-placeholder-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-placeholder-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/search/ic-search-normal.svg\":\n/*!************************************************!*\\\n  !*** ./sass/icons/search/ic-search-normal.svg ***!\n  \\************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-search-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-search-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/sidebar/active/ic-active-normal.svg\":\n/*!********************************************************!*\\\n  !*** ./sass/icons/sidebar/active/ic-active-normal.svg ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-active-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-active-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/sidebar/commodities/ic-commodities-normal.svg\":\n/*!******************************************************************!*\\\n  !*** ./sass/icons/sidebar/commodities/ic-commodities-normal.svg ***!\n  \\******************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-commodities-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-commodities-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/sidebar/forex/ic-forex-normal.svg\":\n/*!******************************************************!*\\\n  !*** ./sass/icons/sidebar/forex/ic-forex-normal.svg ***!\n  \\******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-forex-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-forex-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/sidebar/indices/ic-indices-normal.svg\":\n/*!**********************************************************!*\\\n  !*** ./sass/icons/sidebar/indices/ic-indices-normal.svg ***!\n  \\**********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-indices-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-indices-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/sidebar/otc/ic-otc-normal.svg\":\n/*!**************************************************!*\\\n  !*** ./sass/icons/sidebar/otc/ic-otc-normal.svg ***!\n  \\**************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-otc-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-otc-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/sidebar/synth_index/ic-synth-normal.svg\":\n/*!************************************************************!*\\\n  !*** ./sass/icons/sidebar/synth_index/ic-synth-normal.svg ***!\n  \\************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-synth-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-synth-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/sidebar/volatility/ic-volatility-normal.svg\":\n/*!****************************************************************!*\\\n  !*** ./sass/icons/sidebar/volatility/ic-volatility-normal.svg ***!\n  \\****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-volatility-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-volatility-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/tick/ic-tick.svg\":\n/*!*************************************!*\\\n  !*** ./sass/icons/tick/ic-tick.svg ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-tick-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-tick-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/time/ic-time.svg\":\n/*!*************************************!*\\\n  !*** ./sass/icons/time/ic-time.svg ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n      id: \"ic-time-usage\",\n      viewBox: \"0 0 12 12\",\n      url: __webpack_require__.p + \"sprite-b5fcfc.smartcharts.svg#ic-time-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/main.scss\":\n/*!************************!*\\\n  !*** ./sass/main.scss ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_border\":\"white\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"light_candle_text_closed\":\"rgba(0, 0, 0, 0.16)\",\"dark_candle_text_closed\":\"rgba(127, 131, 151, 0.3)\",\"light_candle_bg_closed\":\"#d6d6d6\",\"dark_candle_bg_closed\":\"#303342\",\"light_chart_closed_candle\":\"#d6d6d6\",\"dark_chart_closed_candle\":\"#303342\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n    if(false) { var cssReload; }\n  \n\n/***/ }),\n\n/***/ \"./src/SplinePlotter.js\":\n/*!******************************!*\\\n  !*** ./src/SplinePlotter.js ***!\n  \\******************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return plotSpline; });\n/* eslint-disable no-restricted-globals,no-restricted-properties */\nfunction plotSpline(points, tension, context, colorPatternChanges) {\n  function getControlPoints(i) {\n    var x0 = points[i];\n    var y0 = points[i + 1];\n    var x1 = points[i + 2];\n    var y1 = points[i + 3];\n    var x2 = points[i + 4];\n    var y2 = points[i + 5];\n\n    if (isNaN(x0) || isNaN(x1) || isNaN(x2) || isNaN(y0) || isNaN(y1) || isNaN(y2)) {\n      return null;\n    } // x0,y0,x1,y1 are the coordinates of the end (knot) points of this segment\n    // x2,y2 is the next knot -- not connected here but needed to calculate p2\n    // p1 is the control point calculated here, from x1 back toward x0.\n    // p2 is the next control point, calculated here and returned to become the\n    // next segment's p1.\n    // tension controls how far the control points spread.\n    // Scaling factors: distances from this knot to the previous and following knots.\n\n\n    var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n    var d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var fa = tension * d01 / (d01 + d12);\n    var fb = tension - fa;\n    var p1x = x1 + fa * (x0 - x2);\n    var p1y = y1 + fa * (y0 - y2);\n    var p2x = x1 - fb * (x0 - x2);\n    var p2y = y1 - fb * (y0 - y2);\n    return [p1x, p1y, p2x, p2y];\n  }\n\n  if (!tension || tension < 0) {\n    tension = 0;\n  }\n\n  var cp = []; // array of control points, as x0,y0,x1,y1,...\n\n  var n = points.length; // Draw an open curve, not connected at the ends\n\n  for (var i = 0; i < n - 4; i += 2) {\n    cp = cp.concat(getControlPoints(i));\n  }\n\n  if (cp === null) {\n    return;\n  }\n\n  if (!colorPatternChanges) {\n    colorPatternChanges = [];\n  }\n\n  var colorPatternIndex = 0;\n\n  function seeIfStrokeNeeded(i) {\n    if (colorPatternIndex === colorPatternChanges.length) {\n      return;\n    }\n\n    var colorPatternChange = colorPatternChanges[colorPatternIndex];\n\n    if (colorPatternChange.coord[0] === points[i] && colorPatternChange.coord[1] === points[i + 1]) {\n      context.stroke();\n      context.strokeStyle = colorPatternChange.color;\n      context.setLineDash(colorPatternChange.pattern);\n      context.lineDashOffset = 0;\n      context.lineWidth = colorPatternChange.width;\n      context.beginPath();\n      context.moveTo(points[i], points[i + 1]); // reset back to last point\n\n      colorPatternIndex++;\n    }\n  } // plot the first segment\n\n\n  context.moveTo(points[0], points[1]);\n  seeIfStrokeNeeded(0);\n  context.quadraticCurveTo(cp[0], cp[1], points[2], points[3]);\n\n  for (var _i = 2; _i < n - 5; _i += 2) {\n    seeIfStrokeNeeded(_i);\n    context.bezierCurveTo(cp[2 * _i - 2], cp[2 * _i - 1], cp[2 * _i], cp[2 * _i + 1], points[_i + 2], points[_i + 3]);\n  } // plot the last segment\n\n\n  seeIfStrokeNeeded(n - 4);\n  context.quadraticCurveTo(cp[2 * n - 10], cp[2 * n - 9], points[n - 2], points[n - 1]);\n}\n\n/***/ }),\n\n/***/ \"./src/Translation.js\":\n/*!****************************!*\\\n  !*** ./src/Translation.js ***!\n  \\****************************/\n/*! exports provided: Translation, t */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Translation\", function() { return Translation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"t\", function() { return t; });\n/* harmony import */ var _translation_messages_pot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../translation/messages.pot */ \"./translation/messages.pot\");\n/* harmony import */ var _translation_messages_pot__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_translation_messages_pot__WEBPACK_IMPORTED_MODULE_0__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\nvar lang_map = {};\nvar Translation =\n/*#__PURE__*/\nfunction () {\n  function Translation() {\n    var lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'en';\n\n    _classCallCheck(this, Translation);\n\n    this.lang = lang;\n  }\n\n  _createClass(Translation, [{\n    key: \"setLanguage\",\n    value: function setLanguage(lang) {\n      var _this = this;\n\n      if (lang_map[lang] || lang === 'en') {\n        this.lang = lang;\n      } else {\n        __webpack_require__(\"./translation lazy recursive ^\\\\.\\\\/.*\\\\.po$\")(\"./\".concat(lang, \".po\")).then(function (imported_lang) {\n          if (imported_lang) {\n            lang_map[lang] = imported_lang;\n            _this.lang = lang;\n          } else {\n            console.error('Unsupported language:', lang);\n          }\n        });\n      }\n    }\n    /**\n     *\n     * @param {*} args include string to be translated, its plural form,\n     * and object containing key value pair for replacement in translated string.\n     *\n     * For eg: translate('_n Hour','_n Hours',{'_n':2})\n     * Note: The first key-value pair will be used to determine the plural form.\n     *\n     */\n\n  }, {\n    key: \"translate\",\n    value: function translate() {\n      var curr_lang = lang_map[this.lang];\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (!curr_lang) {\n        return this.replace(args[0], args[1]);\n      }\n\n      var str = _translation_messages_pot__WEBPACK_IMPORTED_MODULE_0___default.a[args[0]];\n      var rt_str;\n\n      if (typeof args[1] === 'string') {\n        // Plural conversion\n        // TODO: currently there are no plurals in SmartCharts so put this off for now...\n        throw new Error('Plural conversion not working!'); // eslint-disable-next-line no-unreachable\n\n        var replacer = args[2];\n        var prop = Object.keys(replacer);\n\n        if (replacer[prop[0]] === 0 || replacer[prop[0]] > 1) {\n          if (curr_lang[str] && curr_lang[str][2]) {\n            rt_str = curr_lang[str][2];\n          } else {\n            rt_str = curr_lang[str] && curr_lang[str][0] ? curr_lang[str][0] : args[1];\n          }\n        } else {\n          rt_str = curr_lang[str] && curr_lang[str][1] ? curr_lang[str][1] : str;\n        } // Replace variables in string with values.\n\n\n        rt_str = this.replace(rt_str, replacer);\n      } else {\n        rt_str = curr_lang[str]; // Replace variables in string with values.\n\n        rt_str = this.replace(rt_str, args[1]) || args[0];\n      }\n\n      return rt_str;\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(str, obj) {\n      if (!obj) {\n        return str;\n      }\n\n      var prop = Object.keys(obj);\n\n      while (prop.length) {\n        var str_var = prop.shift();\n        str = str.replace(\"[\".concat(str_var, \"]\"), obj[str_var]);\n      }\n\n      return str;\n    }\n  }]);\n\n  return Translation;\n}();\nvar trans = new Translation();\nvar t = trans;\n\n/***/ }),\n\n/***/ \"./src/binaryapi/ActiveSymbols.js\":\n/*!****************************************!*\\\n  !*** ./src/binaryapi/ActiveSymbols.js ***!\n  \\****************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ActiveSymbols; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\n/* harmony import */ var _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/PendingPromise */ \"./src/utils/PendingPromise.js\");\nvar _dec, _class, _descriptor, _descriptor2, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\n\nvar ActiveSymbols = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function ActiveSymbols(api, tradingTimes) {\n    _classCallCheck(this, ActiveSymbols);\n\n    _initializerDefineProperty(this, \"changes\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"categorizedSymbols\", _descriptor2, this);\n\n    this.symbolMap = {};\n    this.symbolsPromise = new _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    this.isRetrievingSymbols = false;\n    this._api = api;\n    this._tradingTimes = tradingTimes;\n  }\n\n  _createClass(ActiveSymbols, [{\n    key: \"retrieveActiveSymbols\",\n    value: function () {\n      var _retrieveActiveSymbols = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var retrieveNewActiveSymbols,\n            _ref,\n            active_symbols,\n            _iteratorNormalCompletion,\n            _didIteratorError,\n            _iteratorError,\n            _iterator,\n            _step,\n            symbolObj,\n            _args = arguments;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                retrieveNewActiveSymbols = _args.length > 0 && _args[0] !== undefined ? _args[0] : false;\n\n                if (!(this.isRetrievingSymbols && !retrieveNewActiveSymbols)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 4;\n                return this.symbolsPromise;\n\n              case 4:\n                return _context.abrupt(\"return\", this.activeSymbols);\n\n              case 5:\n                this.isRetrievingSymbols = true;\n                _context.next = 8;\n                return this._api.getActiveSymbols();\n\n              case 8:\n                _ref = _context.sent;\n                active_symbols = _ref.active_symbols;\n                Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"runInAction\"])(function () {\n                  _this.processedSymbols = _this._processSymbols(active_symbols);\n                  _this.categorizedSymbols = _this._categorizeActiveSymbols(_this.processedSymbols);\n                });\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context.prev = 14;\n\n                for (_iterator = this.processedSymbols[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  symbolObj = _step.value;\n                  this.symbolMap[symbolObj.symbol] = symbolObj;\n                }\n\n                _context.next = 22;\n                break;\n\n              case 18:\n                _context.prev = 18;\n                _context.t0 = _context[\"catch\"](14);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 22:\n                _context.prev = 22;\n                _context.prev = 23;\n\n                if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                  _iterator[\"return\"]();\n                }\n\n              case 25:\n                _context.prev = 25;\n\n                if (!_didIteratorError) {\n                  _context.next = 28;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 28:\n                return _context.finish(25);\n\n              case 29:\n                return _context.finish(22);\n\n              case 30:\n                this._tradingTimes.onMarketOpenCloseChanged(Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"])(function (changes) {\n                  for (var symbol in changes) {\n                    var symObj = _this.symbolMap[symbol];\n\n                    if (symObj) {\n                      symObj.exchange_is_open = changes[symbol];\n                    }\n                  }\n\n                  _this.changes = changes;\n                }));\n\n                this.symbolsPromise.resolve();\n                return _context.abrupt(\"return\", this.activeSymbols);\n\n              case 33:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[14, 18, 22, 30], [23,, 25, 29]]);\n      }));\n\n      function retrieveActiveSymbols() {\n        return _retrieveActiveSymbols.apply(this, arguments);\n      }\n\n      return retrieveActiveSymbols;\n    }()\n  }, {\n    key: \"getSymbolObj\",\n    value: function getSymbolObj(symbol) {\n      return this.symbolMap[symbol];\n    }\n  }, {\n    key: \"_processSymbols\",\n    value: function _processSymbols(symbols) {\n      var processedSymbols = []; // Stable sort is required to retain the order of the symbol name\n\n      Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"stableSort\"])(symbols, function (a, b) {\n        return a.submarket_display_name.localeCompare(b.submarket_display_name);\n      });\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = symbols[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var s = _step2.value;\n          processedSymbols.push({\n            symbol: s.symbol,\n            name: s.display_name,\n            market: s.market,\n            market_display_name: s.market_display_name,\n            submarket_display_name: s.submarket_display_name,\n            exchange_is_open: !!s.exchange_is_open,\n            decimal_places: s.pip.toString().length - 2\n          });\n        } // Categorize symbols in order defined by another array; there's probably a more\n        // efficient algo for this, but for just ~100 items it's not worth the effort\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var order = ['forex', 'indices', 'stocks', 'commodities', 'synthetic_index'];\n      var orderedSymbols = [];\n\n      for (var _i = 0, _order = order; _i < _order.length; _i++) {\n        var o = _order[_i];\n\n        for (var _i2 = 0, _processedSymbols = processedSymbols; _i2 < _processedSymbols.length; _i2++) {\n          var p = _processedSymbols[_i2];\n\n          if (o === p.market) {\n            orderedSymbols.push(p);\n          }\n        }\n      }\n\n      return orderedSymbols;\n    }\n  }, {\n    key: \"_categorizeActiveSymbols\",\n    value: function _categorizeActiveSymbols(activeSymbols) {\n      var categorizedSymbols = [];\n      var first = activeSymbols[0];\n\n      var getSubcategory = function getSubcategory(d) {\n        return {\n          subcategoryName: d.submarket_display_name,\n          data: []\n        };\n      };\n\n      var getCategory = function getCategory(d) {\n        return {\n          categoryName: d.market_display_name,\n          categoryId: d.market,\n          hasSubcategory: true,\n          data: []\n        };\n      };\n\n      var subcategory = getSubcategory(first);\n      var category = getCategory(first);\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = activeSymbols[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var symbol = _step3.value;\n\n          if (category.categoryName !== symbol.market_display_name) {\n            category.data.push(subcategory);\n            categorizedSymbols.push(category);\n            subcategory = getSubcategory(symbol);\n            category = getCategory(symbol);\n          }\n\n          if (subcategory.subcategoryName !== symbol.submarket_display_name) {\n            category.data.push(subcategory);\n            subcategory = getSubcategory(symbol);\n          }\n\n          subcategory.data.push({\n            enabled: true,\n            itemId: symbol.symbol,\n            display: symbol.name,\n            dataObject: symbol\n          });\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      category.data.push(subcategory);\n      categorizedSymbols.push(category);\n      return categorizedSymbols;\n    }\n  }, {\n    key: \"activeSymbols\",\n    get: function get() {\n      var _this2 = this;\n\n      var categorized = Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"cloneCategories\"])(this.categorizedSymbols, function (item) {\n        var symbol = item.dataObject.symbol;\n\n        if (symbol in _this2.changes) {\n          item.dataObject.exchange_is_open = _this2.changes[symbol];\n        }\n\n        return _objectSpread({}, item);\n      });\n      return categorized;\n    }\n  }]);\n\n  return ActiveSymbols;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"changes\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"categorizedSymbols\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"retrieveActiveSymbols\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"retrieveActiveSymbols\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"activeSymbols\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"activeSymbols\"), _class.prototype)), _class));\n\n\n/***/ }),\n\n/***/ \"./src/binaryapi/BinaryAPI.js\":\n/*!************************************!*\\\n  !*** ./src/binaryapi/BinaryAPI.js ***!\n  \\************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BinaryAPI; });\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar BinaryAPI =\n/*#__PURE__*/\nfunction () {\n  _createClass(BinaryAPI, null, [{\n    key: \"DEFAULT_COUNT\",\n    get: function get() {\n      return 1000;\n    }\n  }]);\n\n  function BinaryAPI(requestAPI, requestSubscribe, requestForget, requestForgetStream) {\n    _classCallCheck(this, BinaryAPI);\n\n    this.streamRequests = {};\n    this.tradingTimesCache = null;\n    this.requestAPI = requestAPI;\n    this.requestSubscribe = requestSubscribe;\n    this.requestForget = requestForget;\n    this.requestForgetStream = requestForgetStream;\n  }\n\n  _createClass(BinaryAPI, [{\n    key: \"getActiveSymbols\",\n    value: function getActiveSymbols() {\n      return this.requestAPI({\n        active_symbols: 'brief'\n      });\n    }\n  }, {\n    key: \"getServerTime\",\n    value: function getServerTime() {\n      return this.requestAPI({\n        time: 1\n      });\n    }\n  }, {\n    key: \"getTradingTimes\",\n    value: function () {\n      var _getTradingTimes = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var trading_times,\n            response,\n            _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                trading_times = _args.length > 0 && _args[0] !== undefined ? _args[0] : 'today';\n\n                if (!(this.tradingTimesCache && this.tradingTimesCache.trading_times === trading_times)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _objectSpread({}, this.tradingTimesCache));\n\n              case 3:\n                _context.next = 5;\n                return this.requestAPI({\n                  trading_times: trading_times\n                });\n\n              case 5:\n                response = _context.sent;\n\n                if (trading_times !== 'today') {\n                  this.tradingTimesCache = _objectSpread({}, response);\n                }\n\n                return _context.abrupt(\"return\", response);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getTradingTimes() {\n        return _getTradingTimes.apply(this, arguments);\n      }\n\n      return getTradingTimes;\n    }()\n  }, {\n    key: \"getTickHistory\",\n    value: function getTickHistory(params) {\n      var request = BinaryAPI.createTickHistoryRequest(params);\n      return this.requestAPI(request);\n    }\n  }, {\n    key: \"subscribeTickHistory\",\n    value: function subscribeTickHistory(params, callback) {\n      var key = this._getKey(params);\n\n      var request = BinaryAPI.createTickHistoryRequest(_objectSpread({}, params, {\n        subscribe: 1\n      }));\n      this.streamRequests[key] = {\n        request: request,\n        callback: callback\n      }; // Send a copy of the request, in case it gets mutated outside\n\n      this.requestSubscribe(_objectSpread({}, request), callback);\n    }\n  }, {\n    key: \"forget\",\n    value: function forget(params) {\n      var key = this._getKey(params);\n\n      if (!this.streamRequests[key]) return;\n      var _this$streamRequests$ = this.streamRequests[key],\n          request = _this$streamRequests$.request,\n          callback = _this$streamRequests$.callback;\n      delete this.streamRequests[key];\n      return this.requestForget(request, callback);\n    }\n  }, {\n    key: \"forgetStream\",\n    value: function forgetStream(subscription_id) {\n      if (this.requestForgetStream && typeof this.requestForgetStream === 'function') {\n        return this.requestForgetStream(subscription_id);\n      }\n    }\n  }, {\n    key: \"_getKey\",\n    value: function _getKey(_ref) {\n      var symbol = _ref.symbol,\n          granularity = _ref.granularity;\n      return \"\".concat(symbol, \"-\").concat(granularity);\n    }\n  }], [{\n    key: \"createTickHistoryRequest\",\n    value: function createTickHistoryRequest(_ref2) {\n      var symbol = _ref2.symbol,\n          granularity = _ref2.granularity,\n          start = _ref2.start,\n          end = _ref2.end,\n          subscribe = _ref2.subscribe,\n          _ref2$adjust_start_ti = _ref2.adjust_start_time,\n          adjust_start_time = _ref2$adjust_start_ti === void 0 ? 1 : _ref2$adjust_start_ti,\n          count = _ref2.count;\n      var request = {\n        ticks_history: symbol,\n        style: +granularity ? 'candles' : 'ticks',\n        end: 'latest',\n        count: count || BinaryAPI.DEFAULT_COUNT\n      };\n\n      if (granularity) {\n        // granularity will only be set if style=candles\n        request.granularity = +granularity;\n      }\n\n      if (adjust_start_time) {\n        request.adjust_start_time = adjust_start_time;\n      }\n\n      if (subscribe) {\n        request.subscribe = 1;\n      }\n\n      if (start) {\n        delete request.count;\n        request.start = start;\n      }\n\n      if (end) {\n        request.end = end;\n      }\n\n      return request;\n    }\n  }]);\n\n  return BinaryAPI;\n}();\n\n\n\n/***/ }),\n\n/***/ \"./src/binaryapi/TradingTimes.js\":\n/*!***************************************!*\\\n  !*** ./src/binaryapi/TradingTimes.js ***!\n  \\***************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! event-emitter-es6 */ \"./node_modules/event-emitter-es6/index.js\");\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_ServerTime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/ServerTime */ \"./src/utils/ServerTime.js\");\n/* harmony import */ var _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/PendingPromise */ \"./src/utils/PendingPromise.js\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar TradingTimes =\n/*#__PURE__*/\nfunction () {\n  _createClass(TradingTimes, null, [{\n    key: \"EVENT_MARKET_OPEN_CLOSE_CHANGE\",\n    get: function get() {\n      return 'EVENT_MARKET_OPEN_CLOSE_CHANGE';\n    }\n  }, {\n    key: \"FEED_UNAVAILABLE\",\n    get: function get() {\n      return 'chartonly';\n    }\n  }]);\n\n  function TradingTimes(api) {\n    var shouldFetchTradingTimes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    _classCallCheck(this, TradingTimes);\n\n    this.isInitialized = false;\n    this.tradingTimesPromise = new _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    this._shouldFetchTradingTimes = shouldFetchTradingTimes;\n    this._api = api;\n    this._serverTime = _utils_ServerTime__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance();\n    this._emitter = new event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default.a({\n      emitDelay: 0\n    });\n  }\n\n  _createClass(TradingTimes, [{\n    key: \"destructor\",\n    value: function destructor() {\n      if (this._updateTimer) {\n        clearTimeout(this._updateTimer);\n      }\n    }\n  }, {\n    key: \"initialize\",\n    value: function () {\n      var _initialize = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        var periodicUpdate;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this._serverTime.init(this._api);\n\n              case 2:\n                if (!this.isInitialized) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.tradingTimesPromise);\n\n              case 4:\n                this.isInitialized = true;\n                this.lastUpdateDate = this._serverTime.getLocalDate().toISOString().substring(0, 10);\n\n                if (!(!this._tradingTimesMap && this._shouldFetchTradingTimes)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                _context2.next = 9;\n                return this._updateTradeTimes();\n\n              case 9:\n                this.tradingTimesPromise.resolve();\n\n                periodicUpdate =\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee() {\n                    var changed, nextUpdate, now, nextUpdateDate, isOpenMap, key, _key, waitPeriod;\n\n                    return regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            changed = _this._updateMarketOpenClosed();\n\n                            if (Object.keys(changed).length > 0) {\n                              _this._emitter.emit(TradingTimes.EVENT_MARKET_OPEN_CLOSE_CHANGE, changed);\n                            }\n\n                            nextUpdate = _this._nextUpdateDate();\n\n                            if (nextUpdate) {\n                              _context.next = 14;\n                              break;\n                            }\n\n                            now = _this._serverTime.getLocalDate(); // Get tomorrow's date (UTC) and set it as next update if no nextDate available\n\n                            nextUpdateDate = new Date(\"\".concat(_this.lastUpdateDate, \"T00:00:00Z\"));\n                            nextUpdateDate.setDate(nextUpdateDate.getDate() + 1); // if somehow the next update date is in the past, use the current date\n\n                            _this.lastUpdateDate = (now > nextUpdateDate ? now : nextUpdateDate).toISOString().substring(0, 10); // Retain the current market open close status, because the trade times\n                            // will now be the following day:\n\n                            isOpenMap = {};\n\n                            for (key in _this._tradingTimesMap) {\n                              isOpenMap[key] = _this._tradingTimesMap[key].isOpened;\n                            }\n\n                            _context.next = 12;\n                            return _this._updateTradeTimes();\n\n                          case 12:\n                            for (_key in _this._tradingTimesMap) {\n                              _this._tradingTimesMap[_key].isOpened = isOpenMap[_key];\n                            } // next update date will be 00:00 hours (UTC) of the following day:\n\n\n                            nextUpdate = nextUpdateDate;\n\n                          case 14:\n                            waitPeriod = nextUpdate - _this._serverTime.getLocalDate();\n                            _this._updateTimer = setTimeout(periodicUpdate, waitPeriod);\n\n                          case 16:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function periodicUpdate() {\n                    return _ref.apply(this, arguments);\n                  };\n                }();\n\n                _context2.next = 13;\n                return periodicUpdate();\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function initialize() {\n        return _initialize.apply(this, arguments);\n      }\n\n      return initialize;\n    }()\n  }, {\n    key: \"_updateMarketOpenClosed\",\n    value: function _updateMarketOpenClosed() {\n      var changed = {};\n\n      for (var symbol in this._tradingTimesMap) {\n        var isOpened = this._calcIsMarketOpened(symbol);\n\n        if (this._tradingTimesMap[symbol].isOpened !== isOpened) {\n          this._tradingTimesMap[symbol].isOpened = isOpened;\n          changed[symbol] = isOpened;\n        }\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"_updateTradeTimes\",\n    value: function () {\n      var _updateTradeTimes2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var response, error, now, dateStr, getUTCDate, markets, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, market, submarkets, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, submarket, symbols, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _loop, _iterator3, _step3;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this._api.getTradingTimes(this.lastUpdateDate);\n\n              case 2:\n                response = _context3.sent;\n\n                if (!response.error) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                error = response.error;\n                console.error(\"Error getting trading times on \".concat(this.lastUpdateDate, \": [\").concat(error.code, \"] \\\"\").concat(error.message, \"\\\"\"));\n                return _context3.abrupt(\"return\");\n\n              case 7:\n                now = this._serverTime.getLocalDate();\n                dateStr = now.toISOString().substring(0, 11);\n\n                getUTCDate = function getUTCDate(hour) {\n                  return new Date(\"\".concat(dateStr).concat(hour, \"Z\"));\n                };\n\n                this._tradingTimesMap = {};\n                markets = response.trading_times.markets;\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context3.prev = 15;\n                _iterator = markets[Symbol.iterator]();\n\n              case 17:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context3.next = 68;\n                  break;\n                }\n\n                market = _step.value;\n                submarkets = market.submarkets;\n                _iteratorNormalCompletion2 = true;\n                _didIteratorError2 = false;\n                _iteratorError2 = undefined;\n                _context3.prev = 23;\n                _iterator2 = submarkets[Symbol.iterator]();\n\n              case 25:\n                if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                  _context3.next = 51;\n                  break;\n                }\n\n                submarket = _step2.value;\n                symbols = submarket.symbols;\n                _iteratorNormalCompletion3 = true;\n                _didIteratorError3 = false;\n                _iteratorError3 = undefined;\n                _context3.prev = 31;\n\n                _loop = function _loop() {\n                  var symbolObj = _step3.value;\n                  var times = symbolObj.times,\n                      symbol = symbolObj.symbol,\n                      feed_license = symbolObj.feed_license,\n                      delay_amount = symbolObj.delay_amount;\n                  var open = times.open,\n                      close = times.close;\n\n                  var _times = void 0;\n\n                  var isOpenAllDay = open.length === 1 && open[0] === '00:00:00' && close[0] === '23:59:59';\n                  var isClosedAllDay = open.length === 1 && open[0] === '--' && close[0] === '--';\n\n                  if (!isOpenAllDay && !isClosedAllDay) {\n                    _times = open.map(function (openTime, idx) {\n                      return {\n                        open: getUTCDate(openTime),\n                        close: getUTCDate(close[idx])\n                      };\n                    });\n                  }\n\n                  _this2._tradingTimesMap[symbol] = {\n                    feed_license: feed_license,\n                    delay_amount: delay_amount || 0,\n                    times: _times,\n                    isOpenAllDay: isOpenAllDay,\n                    isClosedAllDay: isClosedAllDay\n                  };\n                };\n\n                for (_iterator3 = symbols[Symbol.iterator](); !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                  _loop();\n                }\n\n                _context3.next = 40;\n                break;\n\n              case 36:\n                _context3.prev = 36;\n                _context3.t0 = _context3[\"catch\"](31);\n                _didIteratorError3 = true;\n                _iteratorError3 = _context3.t0;\n\n              case 40:\n                _context3.prev = 40;\n                _context3.prev = 41;\n\n                if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n                  _iterator3[\"return\"]();\n                }\n\n              case 43:\n                _context3.prev = 43;\n\n                if (!_didIteratorError3) {\n                  _context3.next = 46;\n                  break;\n                }\n\n                throw _iteratorError3;\n\n              case 46:\n                return _context3.finish(43);\n\n              case 47:\n                return _context3.finish(40);\n\n              case 48:\n                _iteratorNormalCompletion2 = true;\n                _context3.next = 25;\n                break;\n\n              case 51:\n                _context3.next = 57;\n                break;\n\n              case 53:\n                _context3.prev = 53;\n                _context3.t1 = _context3[\"catch\"](23);\n                _didIteratorError2 = true;\n                _iteratorError2 = _context3.t1;\n\n              case 57:\n                _context3.prev = 57;\n                _context3.prev = 58;\n\n                if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                  _iterator2[\"return\"]();\n                }\n\n              case 60:\n                _context3.prev = 60;\n\n                if (!_didIteratorError2) {\n                  _context3.next = 63;\n                  break;\n                }\n\n                throw _iteratorError2;\n\n              case 63:\n                return _context3.finish(60);\n\n              case 64:\n                return _context3.finish(57);\n\n              case 65:\n                _iteratorNormalCompletion = true;\n                _context3.next = 17;\n                break;\n\n              case 68:\n                _context3.next = 74;\n                break;\n\n              case 70:\n                _context3.prev = 70;\n                _context3.t2 = _context3[\"catch\"](15);\n                _didIteratorError = true;\n                _iteratorError = _context3.t2;\n\n              case 74:\n                _context3.prev = 74;\n                _context3.prev = 75;\n\n                if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                  _iterator[\"return\"]();\n                }\n\n              case 77:\n                _context3.prev = 77;\n\n                if (!_didIteratorError) {\n                  _context3.next = 80;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 80:\n                return _context3.finish(77);\n\n              case 81:\n                return _context3.finish(74);\n\n              case 82:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[15, 70, 74, 82], [23, 53, 57, 65], [31, 36, 40, 48], [41,, 43, 47], [58,, 60, 64], [75,, 77, 81]]);\n      }));\n\n      function _updateTradeTimes() {\n        return _updateTradeTimes2.apply(this, arguments);\n      }\n\n      return _updateTradeTimes;\n    }()\n  }, {\n    key: \"isFeedUnavailable\",\n    value: function isFeedUnavailable(symbol) {\n      if (!this._tradingTimesMap) {\n        return;\n      }\n\n      if (!(symbol in this._tradingTimesMap)) {\n        console.error('Symbol not in _tradingTimesMap:', symbol, ' trading map:', this._tradingTimesMap);\n        return false;\n      }\n\n      return this._tradingTimesMap[symbol].feed_license === TradingTimes.FEED_UNAVAILABLE;\n    }\n  }, {\n    key: \"getDelayedMinutes\",\n    value: function getDelayedMinutes(symbol) {\n      return this._tradingTimesMap[symbol].delay_amount;\n    }\n  }, {\n    key: \"isMarketOpened\",\n    value: function isMarketOpened(symbol) {\n      if (!this._tradingTimesMap) {\n        return;\n      }\n\n      if (!(symbol in this._tradingTimesMap)) {\n        console.error('Symbol not in _tradingTimesMap:', symbol, ' trading map:', this._tradingTimesMap);\n        return false;\n      }\n\n      return this._tradingTimesMap[symbol].isOpened;\n    }\n  }, {\n    key: \"_calcIsMarketOpened\",\n    value: function _calcIsMarketOpened(symbol) {\n      var now = this._serverTime.getLocalDate();\n\n      var _this$_tradingTimesMa = this._tradingTimesMap[symbol],\n          times = _this$_tradingTimesMa.times,\n          feed_license = _this$_tradingTimesMa.feed_license,\n          isOpenAllDay = _this$_tradingTimesMa.isOpenAllDay,\n          isClosedAllDay = _this$_tradingTimesMa.isClosedAllDay;\n      if (isClosedAllDay || feed_license === TradingTimes.FEED_UNAVAILABLE) return false;\n      if (isOpenAllDay) return true;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = times[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var session = _step4.value;\n          var open = session.open,\n              close = session.close;\n\n          if (now >= open && now < close) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_nextUpdateDate\",\n    value: function _nextUpdateDate() {\n      var now = this._serverTime.getLocalDate();\n\n      var nextDate;\n\n      for (var key in this._tradingTimesMap) {\n        var _this$_tradingTimesMa2 = this._tradingTimesMap[key],\n            times = _this$_tradingTimesMa2.times,\n            feed_license = _this$_tradingTimesMa2.feed_license,\n            isOpenAllDay = _this$_tradingTimesMa2.isOpenAllDay,\n            isClosedAllDay = _this$_tradingTimesMa2.isClosedAllDay;\n        if (isOpenAllDay || isClosedAllDay || feed_license === TradingTimes.FEED_UNAVAILABLE) continue;\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = times[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var session = _step5.value;\n            var open = session.open,\n                close = session.close;\n\n            if (open > now && (!nextDate || open < nextDate)) {\n              nextDate = open;\n            }\n\n            if (close > now && (!nextDate || close < nextDate)) {\n              nextDate = close;\n            }\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n              _iterator5[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n      }\n\n      return nextDate;\n    }\n  }, {\n    key: \"onMarketOpenCloseChanged\",\n    value: function onMarketOpenCloseChanged(callback) {\n      this._emitter.on(TradingTimes.EVENT_MARKET_OPEN_CLOSE_CHANGE, callback);\n    }\n  }]);\n\n  return TradingTimes;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (TradingTimes);\n\n/***/ }),\n\n/***/ \"./src/binaryapi/index.js\":\n/*!********************************!*\\\n  !*** ./src/binaryapi/index.js ***!\n  \\********************************/\n/*! exports provided: ActiveSymbols, TradingTimes, BinaryAPI */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ActiveSymbols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ActiveSymbols */ \"./src/binaryapi/ActiveSymbols.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ActiveSymbols\", function() { return _ActiveSymbols__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _TradingTimes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TradingTimes */ \"./src/binaryapi/TradingTimes.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TradingTimes\", function() { return _TradingTimes__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony import */ var _BinaryAPI__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BinaryAPI */ \"./src/binaryapi/BinaryAPI.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BinaryAPI\", function() { return _BinaryAPI__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n\n\n\n\n\n/***/ }),\n\n/***/ \"./src/chartiq_injections/createXAxis.js\":\n/*!***********************************************!*\\\n  !*** ./src/chartiq_injections/createXAxis.js ***!\n  \\***********************************************/\n/*! exports provided: createXAxis */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createXAxis\", function() { return createXAxis; });\nvar createXAxis = function createXAxis() {\n  CIQ.ChartEngine.prototype.append('createXAxis', function () {\n    if (this.chart.xaxis && this.chart.xaxis.length && this.chart.xaxis[0].DT) {\n      var first = this.chart.xaxis[0].DT.valueOf();\n      var last = this.chart.xaxis.slice(-1)[0].DT.valueOf();\n      var xAxisInterval = Math.floor((last - first) / 5000);\n      xAxisInterval = xAxisInterval > 5 ? xAxisInterval - xAxisInterval % 5 : xAxisInterval;\n      this.chart.xAxis.timeUnitMultiplier = xAxisInterval < 100 ? xAxisInterval : 1;\n      this.chart.xAxis.timeUnit = xAxisInterval < 100 ? CIQ.SECOND : undefined;\n    }\n  });\n};\n\n/***/ }),\n\n/***/ \"./src/chartiq_injections/currentHR.js\":\n/*!*********************************************!*\\\n  !*** ./src/chartiq_injections/currentHR.js ***!\n  \\*********************************************/\n/*! exports provided: drawCurrentPriceLine */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawCurrentPriceLine\", function() { return drawCurrentPriceLine; });\n/* eslint-disable */\nvar drawCurrentPriceLine = function drawCurrentPriceLine() {\n  CIQ.ChartEngine.prototype.drawCurrentHR = function () {\n    if (this.runPrepend('drawCurrentHR', arguments)) return;\n    this.labelType = 'currentSpot';\n    this.yaxisLabelStyle = 'roundRectArrow';\n    var backgroundColor, color;\n    var mainSeriesRenderer = this.mainSeriesRenderer || {};\n    if (mainSeriesRenderer.noCurrentHR) return;\n    var highLowBars = mainSeriesRenderer.highLowBars || this.highLowBars[this.layout.chartType];\n\n    for (var chartName in this.charts) {\n      var chart = this.charts[chartName];\n      var panel = chart.panel;\n      var yAxis = panel.yAxis;\n      if (panel.hidden) continue;\n      if (yAxis.drawCurrentPriceLabel === false || yAxis.noDraw) continue;\n      if (!mainSeriesRenderer.params) continue;\n      var whichSet = yAxis.whichSet;\n      if (!whichSet) whichSet = 'dataSet';\n      if (this.isHistoricalModeSet && whichSet !== 'dataSegment') continue;\n      var l = chart[whichSet].length,\n          cw = this.layout.candleWidth;\n\n      if (whichSet == 'dataSegment') {\n        // this crazy equation just to find the last bar displaying at least 50% on the screen\n        while (l > (chart.width - this.micropixels + cw / 2 + 1) / cw) {\n          l--;\n        }\n      }\n\n      if (l && chart[whichSet][l - 1]) {\n        var field = chart.defaultPlotField;\n        if (!field || highLowBars) field = 'Close';\n        var prevClose, currentClose;\n\n        do {\n          prevClose = chart[whichSet][--l][field];\n          currentClose = prevClose;\n          if (l === 0) break;\n        } while (currentClose === null);\n\n        if (whichSet == 'dataSet' && chart.currentQuote) {\n          currentClose = chart.currentQuote[field];\n        } else if (chart[whichSet].length >= 2) {\n          var pquote = chart[whichSet][l - 1];\n          if (pquote) prevClose = pquote[field];\n        }\n\n        if (currentClose < prevClose) {\n          backgroundColor = this.canvasStyle('stx_current_hr_down').backgroundColor;\n          color = this.canvasStyle('stx_current_hr_down').color;\n        } else {\n          backgroundColor = this.canvasStyle('stx_current_hr_up').backgroundColor;\n          color = this.canvasStyle('stx_current_hr_up').color;\n        }\n\n        if (chart.transformFunc) currentClose = chart.transformFunc(this, chart, currentClose);\n        var txt; // If a chart panel, then always display at least the number of decimal places as calculated by masterData (panel.chart.decimalPlaces)\n        // but if we are zoomed to high granularity then expand all the way out to the y-axis significant digits (panel.yAxis.printDecimalPlaces)\n\n        var labelDecimalPlaces = Math.max(panel.yAxis.printDecimalPlaces, panel.chart.decimalPlaces); //\t... and never display more decimal places than the symbol is supposed to be quoting at\n\n        if (yAxis.maxDecimalPlaces || yAxis.maxDecimalPlaces === 0) labelDecimalPlaces = Math.min(labelDecimalPlaces, yAxis.maxDecimalPlaces);\n\n        if (yAxis.priceFormatter) {\n          txt = yAxis.priceFormatter(this, panel, currentClose, labelDecimalPlaces);\n        } else {\n          txt = this.formatYAxisPrice(currentClose, panel, labelDecimalPlaces);\n        }\n\n        var y = this.pixelFromTransformedValue(currentClose, panel); // Keep current price label position fot later when we want to show countdown\n\n        chart.currentPriceLabelY = y;\n        this.createYAxisLabel(panel, txt, y, backgroundColor, color);\n        var x = panel.left;\n        var endOfLine = panel.right;\n        var currentQuote = this.currentQuote();\n\n        if (currentQuote) {\n          var tick = currentQuote.Close ? currentQuote.tick : currentQuote.tick - 1; // Change the panel position to current spot position for drawing current price line\n\n          x = this.pixelFromTick(tick, chart) + (chart.lastTickOffset || 0);\n          endOfLine -= this.chart.context.measureText(txt).width * 0.4; // Draw the chart from the current spot to the beginning of the price label\n        }\n\n        endOfLine += 24; // we move the \"x\" psoition forward by 24 on createYAxisLabel in chartStore.js\n\n        if (this.preferences.currentPriceLine === true && this.isHome()) {\n          this.plotLine(x, endOfLine, y, y, backgroundColor, 'segment', panel.chart.context, panel, {\n            pattern: 'dashed',\n            lineWidth: 1,\n            opacity: 0.8\n          });\n        }\n      }\n    }\n\n    this.yaxisLabelStyle = 'roundRect';\n    this.labelType = undefined;\n    this.runAppend('drawCurrentHR', arguments);\n  };\n};\n\n/***/ }),\n\n/***/ \"./src/chartiq_injections/headsUpHR.js\":\n/*!*********************************************!*\\\n  !*** ./src/chartiq_injections/headsUpHR.js ***!\n  \\*********************************************/\n/*! exports provided: maintainHeadsUpHR */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"maintainHeadsUpHR\", function() { return maintainHeadsUpHR; });\nvar maintainHeadsUpHR = function maintainHeadsUpHR() {\n  CIQ.ChartEngine.prototype.prepend('headsUpHR', function () {\n    if (this.currentPanel) {\n      this.labelType = 'crosshair';\n    }\n  });\n  CIQ.ChartEngine.prototype.append('headsUpHR', function () {\n    this.labelType = undefined;\n  });\n};\n\n/***/ }),\n\n/***/ \"./src/chartiq_injections/index.js\":\n/*!*****************************************!*\\\n  !*** ./src/chartiq_injections/index.js ***!\n  \\*****************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _createXAxis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createXAxis */ \"./src/chartiq_injections/createXAxis.js\");\n/* harmony import */ var _currentHR__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./currentHR */ \"./src/chartiq_injections/currentHR.js\");\n/* harmony import */ var _headsUpHR__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./headsUpHR */ \"./src/chartiq_injections/headsUpHR.js\");\n/* harmony import */ var _resizing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./resizing */ \"./src/chartiq_injections/resizing.js\");\n/* harmony import */ var _setMaxTicks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./setMaxTicks */ \"./src/chartiq_injections/setMaxTicks.js\");\n/* harmony import */ var _plotterDrawText__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./plotterDrawText */ \"./src/chartiq_injections/plotterDrawText.js\");\n\n\n // import { manageMasterDataLength } from './manageMasterDataLength';\n\n\n\n\n\nvar inject = function inject() {\n  Object(_createXAxis__WEBPACK_IMPORTED_MODULE_0__[\"createXAxis\"])();\n  Object(_currentHR__WEBPACK_IMPORTED_MODULE_1__[\"drawCurrentPriceLine\"])();\n  Object(_headsUpHR__WEBPACK_IMPORTED_MODULE_2__[\"maintainHeadsUpHR\"])();\n  Object(_resizing__WEBPACK_IMPORTED_MODULE_3__[\"maintainSpanSize\"])(); // manageMasterDataLength();\n\n  Object(_plotterDrawText__WEBPACK_IMPORTED_MODULE_5__[\"plotterDrawText\"])();\n  Object(_setMaxTicks__WEBPACK_IMPORTED_MODULE_4__[\"setMaxTicks\"])();\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (inject);\n\n/***/ }),\n\n/***/ \"./src/chartiq_injections/plotterDrawText.js\":\n/*!***************************************************!*\\\n  !*** ./src/chartiq_injections/plotterDrawText.js ***!\n  \\***************************************************/\n/*! exports provided: plotterDrawText */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"plotterDrawText\", function() { return plotterDrawText; });\nvar plotterDrawText = function plotterDrawText() {\n  // Plotter.drawTex duty is to write y-axis labels,which located in the Plotter\n  // as there isn't any option to make y-axis text align center, and also there\n  // isn't any injection for drawText, we have to do a monkey patching for handling\n  // this issue\n  CIQ.Plotter.prototype.drawText = function (context, series) {\n    for (var i = 0; i < series.text.length; i++) {\n      var textObj = series.text[i];\n      var w = textObj.width ? textObj.width : context.measureText(textObj.text).width;\n      var offset = this.getYAxisWidth() ? (this.getYAxisWidth() - w) / 2 : 0;\n\n      if (textObj.bg) {\n        var h = textObj.height ? textObj.height : 12;\n        var prev = context.fillStyle;\n        context.fillStyle = textObj.bg;\n\n        if (context.textAlign === 'right') {\n          context.fillRect(textObj.x, textObj.y - h / 2, -w, -h);\n        } else {\n          context.fillRect(textObj.x, textObj.y - h / 2, w, h);\n        }\n\n        context.fillStyle = prev;\n      }\n\n      context.fillText(textObj.text, textObj.x + offset, textObj.y);\n    }\n  };\n};\n\n/***/ }),\n\n/***/ \"./src/chartiq_injections/resizing.js\":\n/*!********************************************!*\\\n  !*** ./src/chartiq_injections/resizing.js ***!\n  \\********************************************/\n/*! exports provided: maintainSpanSize */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"maintainSpanSize\", function() { return maintainSpanSize; });\nvar maintainSpanSize = function maintainSpanSize() {\n  CIQ.ChartEngine.prototype.prepend('resizeChart', function () {\n    if (this.isAutoScale && this.chart.xaxis && this.chart.xaxis.length) {\n      this.customCandleWidth = this.layout.candleWidth;\n      this.customChartWidth = this.chart.width;\n      this.customScroll = this.chart.scroll;\n    }\n  });\n  CIQ.ChartEngine.prototype.append('resizeChart', function () {\n    if (this.isAutoScale && this.customChartWidth) {\n      var ratio = this.customChartWidth / this.customCandleWidth;\n      this.layout.candleWidth = this.chart.width / ratio;\n      this.chart.scroll = this.customScroll;\n      this.draw();\n    }\n  });\n};\n\n/***/ }),\n\n/***/ \"./src/chartiq_injections/setMaxTicks.js\":\n/*!***********************************************!*\\\n  !*** ./src/chartiq_injections/setMaxTicks.js ***!\n  \\***********************************************/\n/*! exports provided: setMaxTicks */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setMaxTicks\", function() { return setMaxTicks; });\nvar setMaxTicks = function setMaxTicks() {\n  /**\n   * The setMaxTicks function has been completely overwrited because the original one doesn't work properly\n   *  when the padding property is set in params.\n   */\n  // TODO Use the original one of the latest version of ChartIQ if the issue has been solved.\n  CIQ.ChartEngine.prototype.setMaxTicks = function (ticks, params) {\n    if (!params) params = {};\n    ticks = Math.round(ticks);\n    if (ticks < 2) ticks = 2;\n    var pad = params.padding ? params.padding : 0;\n    this.layout.candleWidth = (this.chart.width - pad) / ticks;\n    if (!this.layout.candleWidth) this.layout.candleWidth = 8; // Zero candlewidth can only occur if the chart has no width. This might happen if the chart is in a hidden iframe\n    // This line has been changed in the compare of the original function.\n\n    this.chart.maxTicks = Math.round((this.chart.width - pad) / this.layout.candleWidth - 0.499);\n    if (params.padding || params.padding === 0) this.chart.scroll = ticks + 1; // If padding, then by definition we're homing\n  };\n};\n\n/***/ }),\n\n/***/ \"./src/components/AnimatedPrice.jsx\":\n/*!******************************************!*\\\n  !*** ./src/components/AnimatedPrice.jsx ***!\n  \\******************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar AnimatedPrice = function AnimatedPrice(_ref) {\n  var isIncrease = _ref.isIncrease,\n      price = _ref.price,\n      className = _ref.className;\n  var classes = \"cq-animated-price \".concat(className || '', \" \").concat(isIncrease ? 'cq-up' : 'cq-down');\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, !price && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"cq-comparison-loader stx-show\"\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: classes\n  }, price));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AnimatedPrice);\n\n/***/ }),\n\n/***/ \"./src/components/AssetInformation.jsx\":\n/*!*********************************************!*\\\n  !*** ./src/components/AssetInformation.jsx ***!\n  \\*********************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _sass_components_ciq_asset_information_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../sass/components/_ciq-asset-information.scss */ \"./sass/components/_ciq-asset-information.scss\");\n/* harmony import */ var _sass_components_ciq_asset_information_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_sass_components_ciq_asset_information_scss__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar AssetInformation = react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(function () {\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-asset-information\",\n    style: {\n      visibility: 'hidden'\n    }\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, t.translate('SPOT'), \":\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-ai-spot\"\n  })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, t.translate('OPEN'), \":\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-ai-open\"\n  })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, t.translate('CLOSE'), \":\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-ai-close\"\n  })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, t.translate('HIGH'), \":\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-ai-high\"\n  })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, t.translate('LOW'), \":\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-ai-low\"\n  })));\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (AssetInformation);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/Barrier.jsx\":\n/*!************************************!*\\\n  !*** ./src/components/Barrier.jsx ***!\n  \\************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _store_BarrierStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store/BarrierStore */ \"./src/store/BarrierStore.js\");\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\nvar Barrier = react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(function (_ref) {\n  var _ref$shadeColor = _ref.shadeColor,\n      shadeColor = _ref$shadeColor === void 0 ? '#39b19d' : _ref$shadeColor,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? '#39b19d' : _ref$color,\n      _ref$foregroundColor = _ref.foregroundColor,\n      foregroundColor = _ref$foregroundColor === void 0 ? '#ffffff' : _ref$foregroundColor,\n      HighPriceLine = _ref.HighPriceLine,\n      LowPriceLine = _ref.LowPriceLine,\n      AboveShade = _ref.AboveShade,\n      BetweenShade = _ref.BetweenShade,\n      BelowShade = _ref.BelowShade,\n      hidePriceLines = _ref.hidePriceLines,\n      lineStyle = _ref.lineStyle,\n      isInitialized = _ref.isInitialized,\n      priceLabelWidth = _ref.priceLabelWidth,\n      isSingleBarrier = _ref.isSingleBarrier,\n      props = _objectWithoutProperties(_ref, [\"shadeColor\", \"color\", \"foregroundColor\", \"HighPriceLine\", \"LowPriceLine\", \"AboveShade\", \"BetweenShade\", \"BelowShade\", \"hidePriceLines\", \"lineStyle\", \"isInitialized\", \"priceLabelWidth\", \"isSingleBarrier\"]);\n\n  return isInitialized && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"barrier \".concat(hidePriceLines ? 'hide-pricelines' : ''),\n    style: {\n      '--shade-color': shadeColor\n    }\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(HighPriceLine, _extends({\n    width: priceLabelWidth,\n    lineStyle: lineStyle,\n    color: color,\n    foregroundColor: foregroundColor\n  }, props)), !isSingleBarrier && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(LowPriceLine, _extends({\n    width: priceLabelWidth,\n    lineStyle: lineStyle,\n    color: color,\n    foregroundColor: foregroundColor\n  }, props)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(AboveShade, null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(BetweenShade, null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(BelowShade, null)));\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function (store) {\n  return {\n    HighPriceLine: store.HighPriceLine,\n    LowPriceLine: store.LowPriceLine,\n    AboveShade: store.AboveShade,\n    BetweenShade: store.BetweenShade,\n    BelowShade: store.BelowShade,\n    shadeColor: store.shadeColor,\n    color: store.color,\n    foregroundColor: store.foregroundColor,\n    hideBarrierLine: store.hideBarrierLine,\n    hideOffscreenBarrier: store.hideOffscreenBarrier,\n    hideOffscreenLine: store.hideOffscreenLine,\n    hidePriceLines: store.hidePriceLines,\n    lineStyle: store.lineStyle,\n    isInitialized: store.isInitialized,\n    destructor: store.destructor,\n    priceLabelWidth: store.priceLabelWidth,\n    title: store.title,\n    isSingleBarrier: store.isSingleBarrier,\n    opacityOnOverlap: store.opacityOnOverlap\n  };\n}, _store_BarrierStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(Barrier));\n\n/***/ }),\n\n/***/ \"./src/components/BottomWidget.jsx\":\n/*!*****************************************!*\\\n  !*** ./src/components/BottomWidget.jsx ***!\n  \\*****************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _LastDigitStats_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./LastDigitStats.jsx */ \"./src/components/LastDigitStats.jsx\");\n\n\n\n\n\nvar BottomWidget = function BottomWidget(_ref) {\n  var bottomWidgets = _ref.bottomWidgets,\n      showLastDigitStats = _ref.showLastDigitStats,\n      digits = _ref.digits,\n      lastTick = _ref.lastTick;\n  var Widget = !bottomWidgets && showLastDigitStats ? _LastDigitStats_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"] : bottomWidgets;\n\n  if (Widget) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Widget, {\n      digits: digits,\n      tick: Object(mobx__WEBPACK_IMPORTED_MODULE_1__[\"toJS\"])(lastTick)\n    });\n  }\n\n  return null;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function (_ref2) {\n  var state = _ref2.state,\n      lastDigitStats = _ref2.lastDigitStats;\n  return {\n    showLastDigitStats: state.showLastDigitStats,\n    digits: lastDigitStats.digits,\n    lastTick: lastDigitStats.lastTick\n  };\n})(BottomWidget));\n\n/***/ }),\n\n/***/ \"./src/components/BottomWidgetsContainer.jsx\":\n/*!***************************************************!*\\\n  !*** ./src/components/BottomWidgetsContainer.jsx ***!\n  \\***************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _sass_components_bottom_widget_container_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../sass/components/_bottom-widget-container.scss */ \"./sass/components/_bottom-widget-container.scss\");\n/* harmony import */ var _sass_components_bottom_widget_container_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_sass_components_bottom_widget_container_scss__WEBPACK_IMPORTED_MODULE_3__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\nvar BottomWidgetsContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BottomWidgetsContainer, _React$Component);\n\n  function BottomWidgetsContainer() {\n    _classCallCheck(this, BottomWidgetsContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BottomWidgetsContainer).apply(this, arguments));\n  }\n\n  _createClass(BottomWidgetsContainer, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(_ref) {\n      var nextChildren = _ref.nextChildren;\n\n      if (react__WEBPACK_IMPORTED_MODULE_0___default.a.Children.count(this.props.children) === react__WEBPACK_IMPORTED_MODULE_0___default.a.Children.count(nextChildren)) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (react__WEBPACK_IMPORTED_MODULE_0___default.a.Children.count(this.props.children)) {\n        this.props.updateChartMargin(200);\n      } else {\n        this.props.updateChartMargin(100);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          bottom = _this$props.bottom,\n          isReadyToShow = _this$props.isReadyToShow,\n          children = _this$props.children,\n          top = _this$props.top;\n\n      if (!isReadyToShow) {\n        return null;\n      }\n\n      var styles = {\n        top: top,\n        bottom: bottom\n      };\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"cq-bottom-ui-widgets\",\n        style: styles\n      }, children);\n    }\n  }]);\n\n  return BottomWidgetsContainer;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\nBottomWidgetsContainer.propTypes = {\n  bottom: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,\n  isReadyToShow: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,\n  top: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,\n  updateChartMargin: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired\n};\nBottomWidgetsContainer.defaultProps = {\n  bottom: 0,\n  isReadyToShow: false,\n  top: 0\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function (_ref2) {\n  var store = _ref2.bottomWidgetsContainer;\n  return {\n    bottom: store.bottom,\n    isReadyToShow: store.isReadyToShow,\n    top: store.top,\n    updateChartMargin: store.updateChartMargin\n  };\n})(BottomWidgetsContainer));\n\n/***/ }),\n\n/***/ \"./src/components/Chart.jsx\":\n/*!**********************************!*\\\n  !*** ./src/components/Chart.jsx ***!\n  \\**********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _RenderInsideChart_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RenderInsideChart.jsx */ \"./src/components/RenderInsideChart.jsx\");\n/* harmony import */ var _ComparisonList_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ComparisonList.jsx */ \"./src/components/ComparisonList.jsx\");\n/* harmony import */ var _ChartTitle_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ChartTitle.jsx */ \"./src/components/ChartTitle.jsx\");\n/* harmony import */ var _AssetInformation_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AssetInformation.jsx */ \"./src/components/AssetInformation.jsx\");\n/* harmony import */ var _Loader_jsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Loader.jsx */ \"./src/components/Loader.jsx\");\n/* harmony import */ var _Barrier_jsx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Barrier.jsx */ \"./src/components/Barrier.jsx\");\n/* harmony import */ var _BottomWidget_jsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./BottomWidget.jsx */ \"./src/components/BottomWidget.jsx\");\n/* harmony import */ var _BottomWidgetsContainer_jsx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./BottomWidgetsContainer.jsx */ \"./src/components/BottomWidgetsContainer.jsx\");\n/* harmony import */ var _ChartTable_jsx__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ChartTable.jsx */ \"./src/components/ChartTable.jsx\");\n/* harmony import */ var _NavigationWidget_jsx__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./NavigationWidget.jsx */ \"./src/components/NavigationWidget.jsx\");\n/* harmony import */ var _HighestLowestMarker_jsx__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./HighestLowestMarker.jsx */ \"./src/components/HighestLowestMarker.jsx\");\n/* harmony import */ var _sass_main_scss__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../sass/main.scss */ \"./sass/main.scss\");\n/* harmony import */ var _sass_main_scss__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_sass_main_scss__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var react_tabs_style_react_tabs_css__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! react-tabs/style/react-tabs.css */ \"./node_modules/react-tabs/style/react-tabs.css\");\n/* harmony import */ var react_tabs_style_react_tabs_css__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(react_tabs_style_react_tabs_css__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _ui__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./ui */ \"./src/components/ui/index.js\");\n/* harmony import */ var _ChartControls_jsx__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./ChartControls.jsx */ \"./src/components/ChartControls.jsx\");\n/* harmony import */ var _Crosshair_jsx__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Crosshair.jsx */ \"./src/components/Crosshair.jsx\");\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../utils/ga */ \"./src/utils/ga.js\");\n/* harmony import */ var _PaginationLoader_jsx__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./PaginationLoader.jsx */ \"./src/components/PaginationLoader.jsx\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* css + scss */\n\n\n\n\n\n\n\n\n\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n\n    _this.defaultTopWidgets = function () {\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ChartTitle_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"], null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_AssetInformation_jsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"], null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ComparisonList_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null));\n    };\n\n    _this.modalNode = react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef();\n    _this.root = react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef();\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          updateProps = _this$props.updateProps,\n          init = _this$props.init,\n          props = _objectWithoutProperties(_this$props, [\"updateProps\", \"init\"]);\n\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_18__[\"initGA\"])();\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_18__[\"logPageView\"])();\n      updateProps(props);\n      init(this.root.current, this.modalNode.current, props);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props2 = this.props,\n          updateProps = _this$props2.updateProps,\n          init = _this$props2.init,\n          props = _objectWithoutProperties(_this$props2, [\"updateProps\", \"init\"]);\n\n      var prevUpdateProps = prevProps.updateProps,\n          prevInit = prevProps.init,\n          previousProps = _objectWithoutProperties(prevProps, [\"updateProps\", \"init\"]);\n\n      if (previousProps !== props) {\n        updateProps(props);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.destroy();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          DrawToolsSettingsDialog = _this$props3.DrawToolsSettingsDialog,\n          StudySettingsDialog = _this$props3.StudySettingsDialog,\n          isCandle = _this$props3.isCandle,\n          isSpline = _this$props3.isSpline,\n          _this$props3$isMobile = _this$props3.isMobile,\n          isMobile = _this$props3$isMobile === void 0 ? false : _this$props3$isMobile,\n          isChartAvailable = _this$props3.isChartAvailable,\n          isHighestLowestMarkerEnabled = _this$props3.isHighestLowestMarkerEnabled,\n          _this$props3$barriers = _this$props3.barriers,\n          barriers = _this$props3$barriers === void 0 ? [] : _this$props3$barriers,\n          children = _this$props3.children,\n          chartControlsWidgets = _this$props3.chartControlsWidgets,\n          AggregateChartSettingsDialog = _this$props3.AggregateChartSettingsDialog,\n          topWidgets = _this$props3.topWidgets,\n          chartContainerHeight = _this$props3.chartContainerHeight,\n          containerWidth = _this$props3.containerWidth,\n          isChartClosed = _this$props3.isChartClosed,\n          theme = _this$props3.theme,\n          position = _this$props3.position,\n          bottomWidgets = _this$props3.bottomWidgets,\n          enabledNavigationWidget = _this$props3.enabledNavigationWidget;\n      var currentPosition = \"cq-chart-control-\".concat(chartControlsWidgets && position && !isMobile ? position : 'bottom');\n      var contextWidth = !isMobile ? \"smartcharts-\".concat(containerWidth) : '';\n      var TopWidgets = topWidgets || this.defaultTopWidgets; // if there are any markers, then increase the subholder z-index\n\n      var HasMarkers = children && children.length ? 'smartcharts--has-markers' : '';\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"smartcharts smartcharts-\".concat(theme, \" \").concat(enabledNavigationWidget ? 'smartcharts--navigation-widget' : '', \" \").concat(HasMarkers, \" \").concat(contextWidth)\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"smartcharts-\".concat(isMobile ? 'mobile' : 'desktop'),\n        ref: this.modalNode\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"cq-context\",\n        ref: this.root\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \" \".concat(currentPosition)\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"ciq-chart-area\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"ciq-chart \".concat(isChartClosed ? 'closed-chart' : '')\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_RenderInsideChart_jsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        at: \"holder\"\n      }, barriers.map(function (barr, idx) {\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Barrier_jsx__WEBPACK_IMPORTED_MODULE_6__[\"default\"], _extends({\n          key: \"barrier-\".concat(idx) // eslint-disable-line react/no-array-index-key\n\n        }, barr));\n      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_RenderInsideChart_jsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        at: \"subholder\"\n      }, !isCandle && !isSpline && isHighestLowestMarkerEnabled && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_HighestLowestMarker_jsx__WEBPACK_IMPORTED_MODULE_11__[\"default\"], null)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_RenderInsideChart_jsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        at: \"subholder\",\n        hideInScrollToEpoch: true\n      }, children), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_RenderInsideChart_jsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        at: \"subholder\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_PaginationLoader_jsx__WEBPACK_IMPORTED_MODULE_19__[\"default\"], null)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"cq-top-ui-widgets\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(TopWidgets, null)), enabledNavigationWidget && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_NavigationWidget_jsx__WEBPACK_IMPORTED_MODULE_10__[\"default\"], null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"chartContainer\",\n        style: {\n          height: chartContainerHeight\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Crosshair_jsx__WEBPACK_IMPORTED_MODULE_16__[\"default\"], null)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Loader_jsx__WEBPACK_IMPORTED_MODULE_5__[\"default\"], null), !isChartAvailable && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"cq-chart-unavailable\"\n      }, t.translate('Chart data is not available for this symbol.')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_BottomWidgetsContainer_jsx__WEBPACK_IMPORTED_MODULE_8__[\"default\"], null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_BottomWidget_jsx__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n        bottomWidgets: bottomWidgets\n      }))), chartControlsWidgets !== null && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ChartControls_jsx__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n        widgets: chartControlsWidgets\n      })))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(DrawToolsSettingsDialog, null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(AggregateChartSettingsDialog, null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(StudySettingsDialog, null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ChartTable_jsx__WEBPACK_IMPORTED_MODULE_9__[\"default\"], null)));\n    }\n  }]);\n\n  return Chart;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_17__[\"connect\"])(function (_ref) {\n  var chart = _ref.chart,\n      drawTools = _ref.drawTools,\n      studies = _ref.studies,\n      chartSetting = _ref.chartSetting,\n      chartType = _ref.chartType,\n      state = _ref.state;\n  return {\n    init: chart.init,\n    destroy: chart.destroy,\n    StudySettingsDialog: studies.StudySettingsDialog,\n    DrawToolsSettingsDialog: drawTools.DrawToolsSettingsDialog,\n    AggregateChartSettingsDialog: chartType.AggregateChartSettingsDialog,\n    isCandle: chartType.isCandle,\n    isChartAvailable: chart.isChartAvailable,\n    isSpline: chartType.isSpline,\n    updateProps: state.updateProps,\n    chartContainerHeight: chart.chartContainerHeight,\n    containerWidth: chart.containerWidth,\n    isChartClosed: state.isChartClosed,\n    theme: chartSetting.theme,\n    position: chartSetting.position,\n    isHighestLowestMarkerEnabled: chartSetting.isHighestLowestMarkerEnabled\n  };\n})(Chart));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/ChartControls.jsx\":\n/*!******************************************!*\\\n  !*** ./src/components/ChartControls.jsx ***!\n  \\******************************************/\n/*! exports provided: RenderDefaultControls, default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenderDefaultControls\", function() { return RenderDefaultControls; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _ChartTypes_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ChartTypes.jsx */ \"./src/components/ChartTypes.jsx\");\n/* harmony import */ var _StudyLegend_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StudyLegend.jsx */ \"./src/components/StudyLegend.jsx\");\n/* harmony import */ var _Comparison_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Comparison.jsx */ \"./src/components/Comparison.jsx\");\n/* harmony import */ var _Views_jsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Views.jsx */ \"./src/components/Views.jsx\");\n/* harmony import */ var _CrosshairToggle_jsx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./CrosshairToggle.jsx */ \"./src/components/CrosshairToggle.jsx\");\n/* harmony import */ var _Timeperiod_jsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Timeperiod.jsx */ \"./src/components/Timeperiod.jsx\");\n/* harmony import */ var _ChartSize_jsx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ChartSize.jsx */ \"./src/components/ChartSize.jsx\");\n/* harmony import */ var _DrawTools_jsx__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./DrawTools.jsx */ \"./src/components/DrawTools.jsx\");\n/* harmony import */ var _Share_jsx__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Share.jsx */ \"./src/components/Share.jsx\");\n/* harmony import */ var _sass_components_chart_controls_scss__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../sass/components/_chart-controls.scss */ \"./sass/components/_chart-controls.scss\");\n/* harmony import */ var _sass_components_chart_controls_scss__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_sass_components_chart_controls_scss__WEBPACK_IMPORTED_MODULE_11__);\n\n\n\n\n\n\n\n\n\n\n\n\nvar RenderDefaultControls = function RenderDefaultControls(_ref) {\n  var isMobile = _ref.isMobile;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, isMobile ? '' : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_CrosshairToggle_jsx__WEBPACK_IMPORTED_MODULE_6__[\"default\"], null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ChartTypes_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Timeperiod_jsx__WEBPACK_IMPORTED_MODULE_7__[\"default\"], null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_StudyLegend_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"], null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Comparison_jsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"], null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_DrawTools_jsx__WEBPACK_IMPORTED_MODULE_9__[\"default\"], null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Views_jsx__WEBPACK_IMPORTED_MODULE_5__[\"default\"], null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Share_jsx__WEBPACK_IMPORTED_MODULE_10__[\"default\"], null), isMobile ? '' : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ChartSize_jsx__WEBPACK_IMPORTED_MODULE_8__[\"default\"], null));\n};\n\nvar ChartControls = function ChartControls(_ref2) {\n  var isMobile = _ref2.isMobile,\n      hasOpenMenu = _ref2.hasOpenMenu,\n      widgets = _ref2.widgets,\n      context = _ref2.context;\n  var Controls = widgets || RenderDefaultControls;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-chart-controls \".concat(hasOpenMenu ? ' active' : '')\n  }, context ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Controls, {\n    isMobile: isMobile\n  }) : null);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function (_ref3) {\n  var chart = _ref3.chart,\n      chartType = _ref3.chartType,\n      studies = _ref3.studies,\n      comparison = _ref3.comparison,\n      drawTools = _ref3.drawTools,\n      view = _ref3.view,\n      share = _ref3.share,\n      timeperiod = _ref3.timeperiod,\n      chartSetting = _ref3.chartSetting;\n  return {\n    isMobile: chart.isMobile,\n    context: chart.context,\n    hasOpenMenu: chartType.menu.open || studies.menu.open || comparison.menu.open || drawTools.menu.open || view.menu.open || share.menu.open || timeperiod.menu.open || chartSetting.menu.open\n  };\n})(ChartControls));\n\n/***/ }),\n\n/***/ \"./src/components/ChartSetting.jsx\":\n/*!*****************************************!*\\\n  !*** ./src/components/ChartSetting.jsx ***!\n  \\*****************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_transition_group__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-transition-group */ \"react-transition-group\");\n/* harmony import */ var react_transition_group__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_transition_group__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _Form_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Form.jsx */ \"./src/components/Form.jsx\");\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _sass_components_ciq_chart_setting_scss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../sass/components/_ciq-chart-setting.scss */ \"./sass/components/_ciq-chart-setting.scss\");\n/* harmony import */ var _sass_components_ciq_chart_setting_scss__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_sass_components_ciq_chart_setting_scss__WEBPACK_IMPORTED_MODULE_5__);\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n\n\n\n\n\n\nvar AssetInformationToggle = function AssetInformationToggle(_ref) {\n  var value = _ref.value,\n      onChange = _ref.onChange;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-list-item\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"ciq-icon-text\"\n  }, t.translate('Asset Information')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-action\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Form_jsx__WEBPACK_IMPORTED_MODULE_3__[\"Switch\"], {\n    value: value,\n    onChange: onChange\n  })));\n};\n\nvar ThemeToggle = function ThemeToggle(_ref2) {\n  var position = _ref2.position,\n      setPosition = _ref2.setPosition;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-list-item ciq-list-item-position\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"ciq-icon-text\"\n  }, t.translate('Position')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-action\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_4__[\"PositionBottomIcon\"], {\n    onClick: function onClick() {\n      return setPosition('bottom');\n    },\n    className: \"\".concat(position === 'bottom' ? 'active' : '')\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_4__[\"PositionLeftIcon\"], {\n    onClick: function onClick() {\n      return setPosition('left');\n    },\n    className: \"\".concat(position === 'left' ? 'active' : '')\n  })));\n};\n\nvar ChartSetting = function ChartSetting(_ref3) {\n  var assetInformation = _ref3.assetInformation,\n      ChartSettingMenu = _ref3.ChartSettingMenu,\n      closeMenu = _ref3.closeMenu,\n      countdown = _ref3.countdown,\n      historical = _ref3.historical,\n      isAutoScale = _ref3.isAutoScale,\n      isHighestLowestMarkerEnabled = _ref3.isHighestLowestMarkerEnabled,\n      isMobile = _ref3.isMobile,\n      languages = _ref3.languages,\n      menuOpen = _ref3.menuOpen,\n      position = _ref3.position,\n      selectedLanguage = _ref3.selectedLanguage,\n      setAssetInformation = _ref3.setAssetInformation,\n      setAutoScale = _ref3.setAutoScale,\n      setHistorical = _ref3.setHistorical,\n      setLanguage = _ref3.setLanguage,\n      setPosition = _ref3.setPosition,\n      setTheme = _ref3.setTheme,\n      setView = _ref3.setView,\n      showCountdown = _ref3.showCountdown,\n      view = _ref3.view,\n      theme = _ref3.theme,\n      toggleHighestLowestMarker = _ref3.toggleHighestLowestMarker;\n\n  var renderMain = function renderMain() {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"title\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"title-text\"\n    }, \" \", t.translate('Settings'), \" \"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_4__[\"CloseIcon\"], {\n      className: \"icon-close-menu\",\n      onClick: function onClick() {\n        return closeMenu();\n      }\n    })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"body\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"ciq-list ciq-list-setting\"\n    }, !isMobile ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ThemeToggle, {\n      setPosition: setPosition,\n      position: position\n    }) : '', react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"ciq-list-item\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n      className: \"ciq-icon-text\"\n    }, t.translate('Auto Scale')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"ciq-action\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Form_jsx__WEBPACK_IMPORTED_MODULE_3__[\"Switch\"], {\n      value: isAutoScale,\n      onChange: setAutoScale\n    }))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"ciq-list-item\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n      className: \"ciq-icon-text\"\n    }, t.translate('Dark Mode')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"ciq-action\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Form_jsx__WEBPACK_IMPORTED_MODULE_3__[\"Switch\"], {\n      value: theme === 'dark',\n      onChange: function onChange(checked) {\n        return setTheme(checked ? 'dark' : 'light');\n      }\n    }))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"ciq-list-item\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n      className: \"ciq-icon-text\"\n    }, t.translate('Countdown')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"ciq-action\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Form_jsx__WEBPACK_IMPORTED_MODULE_3__[\"Switch\"], {\n      value: countdown,\n      onChange: showCountdown\n    }))), !isMobile ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(AssetInformationToggle, {\n      value: assetInformation,\n      onChange: setAssetInformation\n    }) : '', react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"ciq-list-item\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n      className: \"ciq-icon-text\"\n    }, t.translate('Historical Data Mode')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"ciq-action\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Form_jsx__WEBPACK_IMPORTED_MODULE_3__[\"Switch\"], {\n      value: historical,\n      onChange: setHistorical\n    }))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"ciq-list-item ciq-list-item-lng\",\n      onClick: function onClick() {\n        return setView('language');\n      }\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n      className: \"ciq-icon-text\"\n    }, t.translate('Language')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"ciq-action\"\n    }, selectedLanguage.icon)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"ciq-list-item \".concat(historical && 'disabled')\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n      className: \"ciq-icon-text\"\n    }, t.translate('Show Highest/Lowest Spot')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"ciq-action\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Form_jsx__WEBPACK_IMPORTED_MODULE_3__[\"Switch\"], {\n      value: isHighestLowestMarkerEnabled,\n      onChange: toggleHighestLowestMarker\n    }))))));\n  };\n\n  var renderLanguage = function renderLanguage() {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"title\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_4__[\"BackIcon\"], {\n      className: \"icon-back-menu\",\n      onClick: function onClick() {\n        return setView();\n      }\n    }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"title-text\"\n    }, t.translate('Language'))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"body\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"ciq-list ciq-list-language\"\n    }, languages.map(function (language) {\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"ciq-list-item \".concat(selectedLanguage.key === language.key ? 'selected' : ''),\n        key: language.key,\n        onClick: function onClick() {\n          return setLanguage(language.key);\n        }\n      }, language.icon, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n        className: \"ciq-icon-text\"\n      }, language.name));\n    }))));\n  };\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChartSettingMenu, {\n    className: \"cq-chart-setting\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChartSettingMenu.Title, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_4__[\"SettingIcon\"], {\n    className: \"ic-icon-with-sub \".concat(menuOpen ? 'active' : ''),\n    \"tooltip-title\": t.translate('Settings')\n  })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChartSettingMenu.Body, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-setting-container container-\".concat(view === '' ? 'main' : view)\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_transition_group__WEBPACK_IMPORTED_MODULE_1__[\"CSSTransition\"], {\n    \"in\": view === '',\n    timeout: 250,\n    classNames: \"cq-setting-main animate\",\n    unmountOnExit: true\n  }, renderMain()), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_transition_group__WEBPACK_IMPORTED_MODULE_1__[\"CSSTransition\"], {\n    \"in\": view === 'language',\n    timeout: 250,\n    classNames: \"cq-setting-language animate\",\n    unmountOnExit: true\n  }, renderLanguage()))));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function (_ref4) {\n  var s = _ref4.chartSetting,\n      c = _ref4.chart;\n  return {\n    assetInformation: s.assetInformation,\n    ChartSettingMenu: s.ChartSettingMenu,\n    closeMenu: s.menu.onTitleClick,\n    countdown: s.countdown,\n    historical: s.historical,\n    isMobile: c.isMobile,\n    isAutoScale: s.isAutoScale,\n    isHighestLowestMarkerEnabled: s.isHighestLowestMarkerEnabled,\n    languages: s.languages,\n    menuOpen: s.menu.dialog.open,\n    position: s.position,\n    selectedLanguage: s.language,\n    setAssetInformation: s.setAssetInformation,\n    setAutoScale: s.setAutoScale,\n    setHistorical: s.setHistorical,\n    setLanguage: s.setLanguage,\n    setPosition: s.setPosition,\n    setTheme: s.setTheme,\n    setView: s.setView,\n    showCountdown: s.showCountdown,\n    theme: s.theme,\n    toggleHighestLowestMarker: s.toggleHighestLowestMarker,\n    view: s.view\n  };\n})(ChartSetting));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/ChartSize.jsx\":\n/*!**************************************!*\\\n  !*** ./src/components/ChartSize.jsx ***!\n  \\**************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _sass_components_chart_size_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../sass/components/_chart-size.scss */ \"./sass/components/_chart-size.scss\");\n/* harmony import */ var _sass_components_chart_size_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_sass_components_chart_size_scss__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n\n\n\n\n\nvar ChartSize = function ChartSize(_ref) {\n  var zoomIn = _ref.zoomIn,\n      zoomOut = _ref.zoomOut;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-menu cq-chart-size\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-menu-btn\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"ZoomOutIcon\"], {\n    className: \"ic-icon-with-sub cq-zoom-out\",\n    \"tooltip-title\": t.translate('Zoom out'),\n    onClick: zoomOut\n  })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-menu-btn\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"ZoomInIcon\"], {\n    className: \"ic-icon-with-sub cq-zoom-in\",\n    \"tooltip-title\": t.translate('Zoom in'),\n    onClick: zoomIn\n  })));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(function (_ref2) {\n  var chartSize = _ref2.chartSize;\n  return {\n    zoomIn: chartSize.zoomIn,\n    zoomOut: chartSize.zoomOut\n  };\n})(ChartSize));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/ChartTable.jsx\":\n/*!***************************************!*\\\n  !*** ./src/components/ChartTable.jsx ***!\n  \\***************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tt-react-custom-scrollbars */ \"./node_modules/tt-react-custom-scrollbars/lib/index.js\");\n/* harmony import */ var tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _sass_components_ciq_chart_table_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../sass/components/_ciq-chart-table.scss */ \"./sass/components/_ciq-chart-table.scss\");\n/* harmony import */ var _sass_components_ciq_chart_table_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_sass_components_ciq_chart_table_scss__WEBPACK_IMPORTED_MODULE_4__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\n\nvar ChartTableGroupContent = function ChartTableGroupContent(_ref) {\n  var item = _ref.item,\n      isTick = _ref.isTick;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"table\", {\n    className: \"ciq-chart-table \".concat(isTick ? 'ciq-chart-table--tick' : '')\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"tbody\", null, item.datas.map(function (data, idy) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"tr\", {\n      key: \"chartTable-\".concat(item.key, \"-\").concat(idy) // eslint-disable-line react/no-array-index-key\n\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"td\", null, data.Date), isTick && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"td\", null, data.Close), !isTick && [react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"td\", {\n      key: \"td-open\"\n    }, data.Open), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"td\", {\n      key: \"td-high\"\n    }, data.High), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"td\", {\n      key: \"td-low\"\n    }, data.Low), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"td\", {\n      key: \"td-close\"\n    }, data.Close)], react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"td\", {\n      className: \"before-last-child\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"cq-change-cell\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"\".concat(data.Status ? data.Status : 'up')\n    }, data.Change))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"td\", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"cq-change-cell\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"cq-change \".concat(data.Status)\n    }))));\n  })));\n};\n\nvar ChartTableGroup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChartTableGroup, _Component);\n\n  function ChartTableGroup() {\n    _classCallCheck(this, ChartTableGroup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChartTableGroup).apply(this, arguments));\n  }\n\n  _createClass(ChartTableGroup, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var scrollPanel = this.props.scrollPanel;\n      if (scrollPanel && scrollPanel.container && !this.scrollPanelTop) this.scrollPanelTop = scrollPanel.container.getBoundingClientRect().top;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          item = _this$props.item,\n          isTick = _this$props.isTick,\n          setDateElement = _this$props.setDateElement,\n          ele = _this$props.ele;\n      var classname = '';\n\n      if (ele) {\n        var bound = ele.getBoundingClientRect();\n        var groupTitleHeight = 44; // height of fixed header\n\n        var fromTop = bound.top - this.scrollPanelTop;\n        var fromBottom = bound.height + fromTop - groupTitleHeight;\n\n        if (fromTop <= 0 && fromBottom >= 0) {\n          classname = 'sticky-top';\n        } else if (fromTop <= 0 && fromBottom <= 0 && fromBottom > -1 * groupTitleHeight) {\n          classname = 'sticky-bottom';\n        }\n      }\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        key: \"chartTable-group-\".concat(item.key),\n        className: \"ciq-chart-table__panel__group\",\n        ref: function ref(el) {\n          return setDateElement(item.key, el);\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"ciq-chart-table__panel__group--title \".concat(classname)\n      }, item.date), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"ciq-chart-table__panel__group--content\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChartTableGroupContent, {\n        item: item,\n        isTick: isTick\n      })));\n    }\n  }]);\n\n  return ChartTableGroup;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\nvar ChartTable = function ChartTable(_ref2) {\n  var isMobile = _ref2.isMobile,\n      tableData = _ref2.tableData,\n      Dialog = _ref2.Dialog,\n      open = _ref2.open,\n      isTick = _ref2.isTick,\n      symbol = _ref2.symbol,\n      setOpen = _ref2.setOpen,\n      scrollTop = _ref2.scrollTop,\n      updateScrollSpy = _ref2.updateScrollSpy,\n      setScrollPanel = _ref2.setScrollPanel,\n      dateElements = _ref2.dateElements,\n      scrollPanel = _ref2.scrollPanel,\n      setDateElement = _ref2.setDateElement;\n  var SymbolIcon = _Icons_jsx__WEBPACK_IMPORTED_MODULE_2__[\"ItemIconMap\"][symbol.symbol] || _Icons_jsx__WEBPACK_IMPORTED_MODULE_2__[\"SymbolPlaceholderIcon\"];\n  var width = isTick ? '380px' : '704px';\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-dialog-overlay \".concat(open ? 'cq-dialog-active' : ''),\n    style: {\n      '--table-width': width\n    }\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Dialog, {\n    className: \"cq-dialog ciq-chart-dialog\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, isMobile && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-titlebar\"\n  }, SymbolIcon && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SymbolIcon, {\n    className: \"ic-\".concat(symbol.symbol)\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-title\"\n  }, \"\".concat(symbol.name, \" \").concat(t.translate('Chart Table'))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_2__[\"CloseBoldIcon\"], {\n    className: \"icon-close-menu\",\n    onClick: handleClose\n  })), isMobile ? '' : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"table\", {\n    className: \"ciq-chart-table\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"thead\", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"tr\", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"th\", null, t.translate('Date')), isTick ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"th\", null, t.translate('Tick')) : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"th\", null, t.translate('Open')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"th\", null, t.translate('High')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"th\", null, t.translate('Low')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"th\", null, t.translate('Close'))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"th\", {\n    className: \"before-last-child\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-change-cell\"\n  }, t.translate('Change'))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"th\", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_2__[\"CloseBoldIcon\"], {\n    className: \"icon-close-menu\",\n    onClick: handleClose\n  }))))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_1__[\"Scrollbars\"], {\n    className: \"ciq-chart-table__panel\",\n    onScroll: updateScrollSpy,\n    ref: setScrollPanel\n  }, tableData.map(function (item) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChartTableGroup, {\n      key: item.key,\n      item: item,\n      isTick: isTick,\n      ele: dateElements[item.key],\n      scrollTop: scrollTop,\n      scrollPanel: scrollPanel,\n      setDateElement: setDateElement\n    });\n  })))));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(function (_ref3) {\n  var chart = _ref3.chart,\n      chartTable = _ref3.chartTable;\n  return {\n    isMobile: chart.isMobile,\n    tableData: chartTable.tableData,\n    Dialog: chartTable.Dialog,\n    open: chartTable.open,\n    isTick: chartTable.isTick,\n    symbol: chartTable.symbol,\n    setOpen: chartTable.setOpen,\n    scrollTop: chartTable.scrollTop,\n    dateElements: chartTable.dateElements,\n    updateScrollSpy: chartTable.updateScrollSpy,\n    setScrollPanel: chartTable.setScrollPanel,\n    setDateElement: chartTable.setDateElement,\n    scrollPanel: chartTable.scrollPanel\n  };\n})(ChartTable));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/ChartTitle.jsx\":\n/*!***************************************!*\\\n  !*** ./src/components/ChartTitle.jsx ***!\n  \\***************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _sass_components_chart_title_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../sass/components/_chart-title.scss */ \"./sass/components/_chart-title.scss\");\n/* harmony import */ var _sass_components_chart_title_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_sass_components_chart_title_scss__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nvar ChartTitle = function ChartTitle(_ref) {\n  var chartId = _ref.chartId,\n      ChartTitleMenu = _ref.ChartTitleMenu,\n      currentSymbol = _ref.currentSymbol,\n      enabled = _ref.enabled,\n      isMobile = _ref.isMobile,\n      MarketSelector = _ref.MarketSelector,\n      portalNodeId = _ref.portalNodeId,\n      onChange = _ref.onChange,\n      SymbolSelectButton = _ref.SymbolSelectButton,\n      setMenuOpen = _ref.setMenuOpen,\n      searchInputClassName = _ref.searchInputClassName,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseLeave = _ref.onMouseLeave,\n      isNestedList = _ref.isNestedList;\n\n  if (!currentSymbol) {\n    return null;\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChartTitleMenu, {\n    enabled: enabled,\n    className: \"cq-chart-title stx-show cq-symbols-display\",\n    isFullscreen: true,\n    portalNodeId: portalNodeId,\n    title: isMobile ? t.translate('Underlying Assets') : '',\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChartTitleMenu.Title, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SymbolSelectButton, null)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChartTitleMenu.Body, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MarketSelector, {\n    isNestedList: isNestedList,\n    searchInputClassName: searchInputClassName,\n    onSelectItem: function onSelectItem(x) {\n      if (x.symbol !== currentSymbol.symbol) {\n        onChange(x.symbol, chartId);\n      }\n\n      setMenuOpen(false);\n    }\n  })));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function (_ref2) {\n  var c = _ref2.chartTitle,\n      chart = _ref2.chart,\n      state = _ref2.state;\n  return {\n    chartId: state.chartId,\n    ChartTitleMenu: c.ChartTitleMenu,\n    currentSymbol: c.currentSymbol,\n    isMobile: chart.isMobile,\n    MarketSelector: c.MarketSelector,\n    onChange: c.setSymbol,\n    setMenuOpen: c.menu.setOpen,\n    SymbolSelectButton: c.SymbolSelectButton,\n    onMouseEnter: c.onMouseEnter,\n    onMouseLeave: c.onMouseLeave\n  };\n})(ChartTitle));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/ChartTypes.jsx\":\n/*!***************************************!*\\\n  !*** ./src/components/ChartTypes.jsx ***!\n  \\***************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _sass_components_chart_types_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../sass/components/_chart-types.scss */ \"./sass/components/_chart-types.scss\");\n/* harmony import */ var _sass_components_chart_types_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_sass_components_chart_types_scss__WEBPACK_IMPORTED_MODULE_3__);\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n\n\n\n\nvar ChartTypes = function ChartTypes(_ref) {\n  var chartId = _ref.chartId,\n      ChartTypeList = _ref.ChartTypeList,\n      ChartTypeMenu = _ref.ChartTypeMenu,\n      enabled = _ref.enabled,\n      menuOpen = _ref.menuOpen,\n      onChange = _ref.onChange,\n      setOpen = _ref.setOpen,\n      showAggregateDialog = _ref.showAggregateDialog,\n      Type = _ref.Type,\n      updateProps = _ref.updateProps;\n  if (Type === undefined) return null;\n\n  var onItemClick = function onItemClick(idx, chartType) {\n    if (Type.id !== chartType.id) {\n      onChange(chartType.id, chartType.candleOnly, chartId);\n    }\n\n    setOpen(false);\n  };\n\n  updateProps(onChange);\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChartTypeMenu, {\n    className: \"ciq-display ciq-chart-types\",\n    enabled: enabled,\n    title: t.translate('Chart types')\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChartTypeMenu.Title, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Type.icon, {\n    className: \"ic-icon-with-sub \".concat(menuOpen ? 'active' : ''),\n    \"tooltip-title\": t.translate(Type.text)\n  })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChartTypeMenu.Body, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"body\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChartTypeList, {\n    height: 260,\n    onItemClick: onItemClick\n  }, function (T) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n      className: \"left\"\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(T.icon, {\n      className: \"margin \".concat(T.active ? 'active' : '')\n    }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n      className: \"ciq-icon-text\"\n    }, T.text)), T.settingsOnClick && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n      className: \"ciq-aggregate-setting\",\n      onClick: function onClick() {\n        return showAggregateDialog(T.id);\n      }\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_2__[\"SettingIcon\"], null)));\n  }))));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function (_ref2) {\n  var chartType = _ref2.chartType,\n      state = _ref2.state;\n  return {\n    chartId: state.chartId,\n    ChartTypeMenu: chartType.ChartTypeMenu,\n    ChartTypeList: chartType.ChartTypeList,\n    menuOpen: chartType.menu.open,\n    onChange: chartType.setTypeFromUI,\n    setOpen: chartType.menu.setOpen,\n    showAggregateDialog: chartType.showAggregateDialog,\n    Type: chartType.type,\n    updateProps: chartType.updateProps\n  };\n})(ChartTypes));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/Comparison.jsx\":\n/*!***************************************!*\\\n  !*** ./src/components/Comparison.jsx ***!\n  \\***************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _NotificationBadge_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./NotificationBadge.jsx */ \"./src/components/NotificationBadge.jsx\");\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n\n\n\n\n\nvar Comparison = function Comparison(_ref) {\n  var ComparisonSelector = _ref.ComparisonSelector,\n      ComparisonMenu = _ref.ComparisonMenu,\n      menuOpen = _ref.menuOpen,\n      isMobile = _ref.isMobile,\n      activeComparisonsNo = _ref.activeComparisonsNo,\n      searchInputClassName = _ref.searchInputClassName;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ComparisonMenu, {\n    className: \"cq-comparison-new cq-symbols-display\",\n    isMobile: isMobile,\n    title: isMobile ? t.translate('Comparison') : ''\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ComparisonMenu.Title, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"ComparisonIcon\"], {\n    className: \"ic-icon-with-sub \".concat(menuOpen ? 'active' : ''),\n    \"tooltip-title\": t.translate('Comparison')\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_NotificationBadge_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n    notificationCount: activeComparisonsNo\n  })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ComparisonMenu.Body, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ComparisonSelector, {\n    searchInputClassName: searchInputClassName\n  })));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function (_ref2) {\n  var c = _ref2.comparison,\n      chart = _ref2.chart;\n  return {\n    ComparisonSelector: c.ComparisonSelector,\n    ComparisonMenu: c.ComparisonMenu,\n    menuOpen: c.menu.open,\n    isMobile: chart.isMobile,\n    activeComparisonsNo: c.comparisonSymbols.length\n  };\n})(Comparison));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/ComparisonList.jsx\":\n/*!*******************************************!*\\\n  !*** ./src/components/ComparisonList.jsx ***!\n  \\*******************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _sass_components_comparison_list_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../sass/components/_comparison-list.scss */ \"./sass/components/_comparison-list.scss\");\n/* harmony import */ var _sass_components_comparison_list_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_sass_components_comparison_list_scss__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nvar ComparisonListItem = function ComparisonListItem(_ref) {\n  var item = _ref.item,\n      AnimatedPrice = _ref.AnimatedPrice,\n      onDeleteItem = _ref.onDeleteItem;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-comparison-item\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"left\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"cq-comparison-swatch\",\n    style: {\n      backgroundColor: item.color\n    }\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"cq-comparison-label\"\n  }, item.symbolObject.name)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"right\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(AnimatedPrice, null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_2__[\"DeleteIcon\"], {\n    className: \"ciq-close\",\n    onClick: function onClick() {\n      return onDeleteItem(item.symbolObject);\n    }\n  })));\n};\n\nvar ComparisonList = function ComparisonList(_ref2) {\n  var comparisonSymbols = _ref2.comparisonSymbols,\n      animatedPrices = _ref2.animatedPrices,\n      onDeleteItem = _ref2.onDeleteItem;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-comparison\"\n  }, comparisonSymbols.map(function (item, i) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ComparisonListItem, {\n      key: item.symbolObject.symbol,\n      item: item,\n      onDeleteItem: onDeleteItem,\n      AnimatedPrice: animatedPrices[i]\n    });\n  }));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function (_ref3) {\n  var c = _ref3.comparisonList;\n  return {\n    comparisonSymbols: c.comparisonSymbols,\n    animatedPrices: c.animatedPrices,\n    onDeleteItem: c.onDeleteItem\n  };\n})(ComparisonList));\n\n/***/ }),\n\n/***/ \"./src/components/Crosshair.jsx\":\n/*!**************************************!*\\\n  !*** ./src/components/Crosshair.jsx ***!\n  \\**************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _sass_components_ciq_crosshair_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../sass/components/_ciq-crosshair.scss */ \"./sass/components/_ciq-crosshair.scss\");\n/* harmony import */ var _sass_components_ciq_crosshair_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_sass_components_ciq_crosshair_scss__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nvar Crosshair = function Crosshair() {\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-crosshair\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-crosshair-content\"\n  }));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Crosshair);\n\n/***/ }),\n\n/***/ \"./src/components/CrosshairToggle.jsx\":\n/*!********************************************!*\\\n  !*** ./src/components/CrosshairToggle.jsx ***!\n  \\********************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _Form_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Form.jsx */ \"./src/components/Form.jsx\");\n\n\n\n\n\nvar CrosshairToggle = function CrosshairToggle(_ref) {\n  var state = _ref.state,\n      setCrosshairState = _ref.setCrosshairState,\n      onChange = _ref.onChange,\n      updateProps = _ref.updateProps,\n      _ref$isVisible = _ref.isVisible,\n      isVisible = _ref$isVisible === void 0 ? true : _ref$isVisible;\n  var CrosshairIcon = [_Icons_jsx__WEBPACK_IMPORTED_MODULE_2__[\"CrosshairOffIcon\"], _Icons_jsx__WEBPACK_IMPORTED_MODULE_2__[\"CrosshairOnIcon\"], _Icons_jsx__WEBPACK_IMPORTED_MODULE_2__[\"CrosshairTooltipIcon\"]][state];\n\n  var onCrosshairToggle = function onCrosshairToggle() {\n    setCrosshairState((state + 1) % 3);\n  };\n\n  updateProps(onChange);\n  if (!isVisible) return null;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-menu cq-crosshair-toggle\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-menu-btn\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Form_jsx__WEBPACK_IMPORTED_MODULE_3__[\"Toggle\"], {\n    active: state !== 0,\n    onChange: onCrosshairToggle\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(CrosshairIcon, {\n    className: \"ic-icon-with-sub\",\n    \"tooltip-title\": t.translate('Crosshair')\n  }))));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function (_ref2) {\n  var crosshair = _ref2.crosshair;\n  return {\n    state: typeof crosshair.state !== 'number' ? 0 : crosshair.state,\n    setCrosshairState: crosshair.setCrosshairState,\n    updateProps: crosshair.updateProps\n  };\n})(CrosshairToggle));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/Dialog.jsx\":\n/*!***********************************!*\\\n  !*** ./src/components/Dialog.jsx ***!\n  \\***********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _sass_components_ciq_dialog_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../sass/components/_ciq-dialog.scss */ \"./sass/components/_ciq-dialog.scss\");\n/* harmony import */ var _sass_components_ciq_dialog_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_sass_components_ciq_dialog_scss__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nvar Dialog = function Dialog(_ref) {\n  var open = _ref.open,\n      children = _ref.children,\n      onContainerClick = _ref.onContainerClick,\n      className = _ref.className,\n      title = _ref.title,\n      setOpen = _ref.setOpen,\n      enableTabular = _ref.enableTabular,\n      enableOverlay = _ref.enableOverlay;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, enableOverlay ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-dialog-overlay \".concat(open ? 'cq-dialog-active' : '')\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"\".concat(className || 'cq-dialog', \" \").concat(enableTabular ? 'cq-dialog--tabular' : '', \" \").concat(open ? ' open' : ''),\n    onClick: onContainerClick\n  }, title ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-dialog__head\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-dialog__head--title\"\n  }, title), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-dialog__head--action\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"CloseIcon\"], {\n    onClick: function onClick() {\n      return setOpen(false);\n    }\n  }))) : '', react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-dialog__body\"\n  }, children))) : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"\".concat(className || 'cq-dialog', \" \").concat(enableTabular ? 'cq-dialog--tabular' : '', \" \").concat(open ? ' open' : ''),\n    onClick: onContainerClick\n  }, title ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-dialog__head\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-dialog__head--title\"\n  }, title), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-dialog__head--action\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"CloseIcon\"], {\n    onClick: function onClick() {\n      return setOpen(false);\n    }\n  }))) : '', react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-dialog__body\"\n  }, children)));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Dialog);\n\n/***/ }),\n\n/***/ \"./src/components/DrawTools.jsx\":\n/*!**************************************!*\\\n  !*** ./src/components/DrawTools.jsx ***!\n  \\**************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tt-react-custom-scrollbars */ \"./node_modules/tt-react-custom-scrollbars/lib/index.js\");\n/* harmony import */ var tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _sass_components_draw_tools_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../sass/components/_draw-tools.scss */ \"./sass/components/_draw-tools.scss\");\n/* harmony import */ var _sass_components_draw_tools_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_sass_components_draw_tools_scss__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\nvar DrawTools = function DrawTools(_ref) {\n  var clearAll = _ref.clearAll,\n      selectTool = _ref.selectTool,\n      DrawToolsMenu = _ref.DrawToolsMenu,\n      menuOpen = _ref.menuOpen,\n      drawToolsItems = _ref.drawToolsItems;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(DrawToolsMenu, {\n    className: \"ciq-draw-tools\",\n    title: t.translate('Draw tools')\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(DrawToolsMenu.Title, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"DrawIcon\"], {\n    className: \"ic-icon-with-sub \".concat(menuOpen ? 'active' : ''),\n    \"tooltip-title\": t.translate('Draw tools')\n  })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(DrawToolsMenu.Body, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"body\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_1___default.a, {\n    autoHeight: true,\n    autoHeightMax: 260,\n    className: \"ciq-list\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-draw-buttons\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-draw-button\",\n    onClick: clearAll\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"ClearIcon\"], null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, t.translate('Clear All'))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-draw-button\",\n    onClick: function onClick() {\n      return selectTool('measure');\n    },\n    style: {\n      display: 'none'\n      /* TODO: measurement tool doesn't show measurement */\n\n    }\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"MeasureIcon\"], null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, t.translate('Measure')))), drawToolsItems.map(function (it) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      key: it.id,\n      className: \"ciq-list-item\",\n      onClick: function onClick() {\n        return selectTool(it.id);\n      }\n    }, it.text);\n  })))));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function (_ref2) {\n  var dt = _ref2.drawTools;\n  return {\n    clearAll: dt.clearAll,\n    selectTool: dt.selectTool,\n    DrawToolsMenu: dt.DrawToolsMenu,\n    menuOpen: dt.menu.open,\n    drawToolsItems: dt.drawToolsItems\n  };\n})(DrawTools));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/FastMarker.jsx\":\n/*!***************************************!*\\\n  !*** ./src/components/FastMarker.jsx ***!\n  \\***************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n // Render given Components under stx-subholder.\n// This component is used to position a marker on the chart.\n//\n// USAGE:\n//\n//  - setRef({setPosition, div}) will be called on mount.\n//  - \"div\" is the dom element containing the marker with \"your-css-class\"\n//  - \"setPosition({epoch, price})\" is a function that you will use to update the div position.\n//  - calling \"setPosition({epoch: null, price: null})\" will hide the marker.\n//  - use \"div.querySelector('...')\" to get a dom reference in order to update your content .\n//  - \"setRef(null)\" will be called when the marker unmounts.\n//\n//  <FastMarker\n//      markerRef={setRef}\n//      threshold={optional visibility threshold}\n//      className=\"your-css-class\"\n//  >\n//     <your content here/>\n//  </FastMarker>\n//\n//  - the chart can have a zoom level, if `threshold` is provided\n//    the marker will only be shown if it's within that zoom threshold.\n\nvar FastMarker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FastMarker, _Component);\n\n  function FastMarker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FastMarker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FastMarker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.price = null;\n    _this.date = null;\n    _this.elem = null;\n    _this.ctx = null;\n    _this.stx = null;\n    _this.injectionId = null;\n\n    _this.setPosition = function (_ref) {\n      var epoch = _ref.epoch,\n          price = _ref.price;\n      _this.price = +price || null;\n      _this.date = CIQ.strToDateTime(Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"getUTCDate\"])(epoch));\n\n      _this.updateCSS();\n    };\n\n    _this.updateCSS = function () {\n      if (!_this.elem || !_this.ctx) {\n        return;\n      }\n\n      if (!_this.date) {\n        _this.elem.style.visibility = 'hidden';\n        return;\n      }\n\n      var elem = _this.elem;\n      var stx = _this.stx;\n      var chart = stx.chart;\n      var top = 0,\n          left = 0,\n          show = true;\n      var threshold = +_this.props.threshold || 0;\n      show = !threshold || stx.layout.candleWidth >= threshold;\n\n      if (show && chart.dataSet && chart.dataSet.length && stx.mainSeriesRenderer) {\n        var tickIdx = stx.tickFromDate(_this.date, chart);\n\n        if (tickIdx > -1 && stx.chart.dataSet[tickIdx] && stx.chart.dataSet[tickIdx].Close !== _this.price) {\n          delete stx.chart.tickCache[_this.date.getTime()];\n          tickIdx = stx.tickFromDate(_this.date, chart);\n        }\n\n        var x = stx.pixelFromTick(tickIdx, chart); // ChartIQ doesn't support placing markers in the middle of ticks.\n\n        var bar = chart.dataSet[tickIdx]; // Here we interpolate the pixel distance between two adjacent ticks.\n\n        if (bar && bar.DT < _this.date) {\n          var barNext = chart.dataSet[tickIdx + 1];\n          var barPrev = tickIdx > 0 ? chart.dataSet[tickIdx - 1] : null;\n\n          if (barNext && barNext.Close && barNext.DT > _this.date) {\n            var pixelToNextBar = stx.pixelFromTick(tickIdx + 1, chart) - x;\n            x += (_this.date - bar.DT) / (barNext.DT - bar.DT) * pixelToNextBar;\n          } else if (barPrev && barPrev.Close) {\n            var pixelFromPrevBar = x - stx.pixelFromTick(tickIdx - 1, chart);\n            x += (_this.date - bar.DT) / (bar.DT - barPrev.DT) * pixelFromPrevBar;\n          }\n        }\n\n        var y = _this.price ? stx.pixelFromPrice(_this.price, chart.panel) : 0;\n\n        if (chart.yAxis.left > x && chart.yAxis.top <= y && chart.yAxis.bottom >= y) {\n          top = +y;\n          left = Math.round(x);\n        } else {\n          show = false;\n        }\n      } // patch DOM without triggering recalculate layout.\n\n\n      elem.style.transform = \"translate(\".concat(left, \"px, \").concat(top, \"px)\");\n      elem.style.visibility = show ? 'visible' : 'hidden';\n    };\n\n    _this.setRef = function (ref) {\n      _this.elem = ref;\n      var data = ref ? {\n        div: ref,\n        setPosition: _this.setPosition\n      } : null;\n\n      if (_this.props.markerRef) {\n        _this.props.markerRef(data);\n      }\n\n      if (ref !== null) {\n        var contextPromise = _this.props.contextPromise;\n        contextPromise.then(function (ctx) {\n          _this.ctx = ctx;\n          _this.stx = _this.ctx.stx;\n          _this.injectionId = _this.stx.append('draw', _this.updateCSS);\n\n          _this.updateCSS();\n        });\n      } else if (_this.injectionId) {\n        // remove the injection on unmount\n        _this.stx.removeInjection(_this.injectionId);\n\n        _this.ctx = null;\n        _this.stx = null;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(FastMarker, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          children = _this$props.children;\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: className,\n        ref: this.setRef,\n        style: {\n          position: 'absolute'\n        }\n      }, children);\n    }\n  }]);\n\n  return FastMarker;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function (_ref2) {\n  var chart = _ref2.chart;\n  return {\n    contextPromise: chart.contextPromise\n  };\n})(FastMarker));\n\n/***/ }),\n\n/***/ \"./src/components/Favorite.jsx\":\n/*!*************************************!*\\\n  !*** ./src/components/Favorite.jsx ***!\n  \\*************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _store_FavoriteStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store/FavoriteStore */ \"./src/store/FavoriteStore.js\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/ga */ \"./src/utils/ga.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\nvar Favorite =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Favorite, _Component);\n\n  function Favorite(props) {\n    var _this;\n\n    _classCallCheck(this, Favorite);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Favorite).call(this, props));\n    _this.store = _store_FavoriteStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n\n    _this.onFavoriteUpdate = function () {\n      var _this$props = _this.props,\n          category = _this$props.category,\n          id = _this$props.id;\n\n      var isFavorite = _this.isFavorite(category, id);\n\n      if (isFavorite !== _this.state.isFavorite) {\n        _this.setState({\n          isFavorite: isFavorite\n        });\n\n        Object(_utils_ga__WEBPACK_IMPORTED_MODULE_3__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_3__[\"LogCategories\"].CategoricalDisplay, _utils_ga__WEBPACK_IMPORTED_MODULE_3__[\"LogActions\"].Favorite, \"\".concat(isFavorite ? 'Add ' : 'Remove ', \" \").concat(id));\n      }\n    };\n\n    _this.onClick = function (e) {\n      e.stopPropagation();\n      e.nativeEvent.isHandledByDialog = true; // prevent close dialog\n\n      var _this$props2 = _this.props,\n          category = _this$props2.category,\n          id = _this$props2.id;\n\n      _this.toggleFavorite(category, id);\n    };\n\n    _this.store.onFavoriteUpdate(_this.onFavoriteUpdate);\n\n    _this.isFavorite = _this.store.isFavorite;\n    _this.toggleFavorite = _this.store.toggleFavorite;\n    var _this$props3 = _this.props,\n        _category = _this$props3.category,\n        _id = _this$props3.id;\n    _this.state = {\n      isFavorite: _this.isFavorite(_category, _id)\n    };\n    return _this;\n  }\n\n  _createClass(Favorite, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return this.state.isFavorite !== nextState.isFavorite;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.store.offFavoriteUpdate(this.onFavoriteUpdate);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          category = _this$props4.category,\n          id = _this$props4.id;\n      var isFavorite = this.state.isFavorite;\n      if (!category || !id) return null;\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"FavoriteIcon\"], {\n        onClick: this.onClick,\n        className: \"ciq-favorite \".concat(isFavorite ? 'ciq-active-favorite' : '')\n      });\n    }\n  }]);\n\n  return Favorite;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Favorite);\n\n/***/ }),\n\n/***/ \"./src/components/Form.jsx\":\n/*!*********************************!*\\\n  !*** ./src/components/Form.jsx ***!\n  \\*********************************/\n/*! exports provided: Slider, DropDown, Pattern, ColorPicker, Switch, NumericInput, NumberColorPicker, Toggle, FontSetting */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Slider\", function() { return Slider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DropDown\", function() { return DropDown; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Pattern\", function() { return Pattern; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColorPicker\", function() { return ColorPicker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Switch\", function() { return Switch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NumericInput\", function() { return NumericInput; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NumberColorPicker\", function() { return NumberColorPicker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Toggle\", function() { return Toggle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FontSetting\", function() { return FontSetting; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _sass_components_ciq_form_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../sass/components/_ciq-form.scss */ \"./sass/components/_ciq-form.scss\");\n/* harmony import */ var _sass_components_ciq_form_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_sass_components_ciq_form_scss__WEBPACK_IMPORTED_MODULE_2__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/* eslint-disable react/sort-comp,react/no-multi-comp */\n\n\n\nvar Slider =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Slider, _React$Component);\n\n  function Slider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Slider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChange = function (val) {\n      _this.props.onChange(val.currentTarget.value);\n    };\n\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return this.props.value !== nextProps.value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$min = _this$props.min,\n          min = _this$props$min === void 0 ? 1 : _this$props$min,\n          _this$props$max = _this$props.max,\n          max = _this$props$max === void 0 ? 10 : _this$props$max,\n          _this$props$step = _this$props.step,\n          step = _this$props$step === void 0 ? 1 : _this$props$step,\n          value = _this$props.value;\n      var barWidth = 238; // css hardcode\n\n      var activeWidth = Math.round(barWidth * (value - min) / (max - min));\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"cq-slider\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"cq-slider-range\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"cq-slider-bar\"\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"cq-slider-active-bar\",\n        style: {\n          width: activeWidth\n        }\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n        type: \"range\",\n        min: min,\n        max: max,\n        step: step,\n        onChange: this.onChange,\n        value: value\n      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"value\"\n      }, value));\n    }\n  }]);\n\n  return Slider;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\nvar DropDown =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(DropDown, _React$Component2);\n\n  function DropDown() {\n    var _getPrototypeOf3;\n\n    var _this2;\n\n    _classCallCheck(this, DropDown);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(DropDown)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this2.state = {\n      open: false\n    };\n    _this2.titleRef = null;\n\n    _this2.onClick = function () {\n      return _this2.setState(function (prevState) {\n        return {\n          open: !prevState.open\n        };\n      });\n    };\n\n    _this2.close = function (e) {\n      if (e.target !== _this2.titleRef) {\n        _this2.setState({\n          open: false\n        });\n      }\n    };\n\n    return _this2;\n  }\n\n  _createClass(DropDown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('click', this.close, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('click', this.close);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          subtitle = _this$props2.subtitle,\n          rows = _this$props2.rows,\n          children = _this$props2.children,\n          value = _this$props2.value,\n          onRowClick = _this$props2.onRowClick,\n          className = _this$props2.className;\n      var open = this.state.open;\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"\".concat(className || '', \" cq-dropdown \").concat(open ? 'active' : '')\n      }, subtitle ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"subtitle\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, subtitle)) : '', react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"value \".concat(open ? 'active' : ''),\n        onClick: this.onClick,\n        ref: function ref(_ref) {\n          _this3.titleRef = _ref;\n        }\n      }, value, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"ArrowIcon\"], null)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"dropdown \".concat(open ? 'active' : '')\n      }, rows.map(function (row, idx) {\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          key: idx // eslint-disable-line react/no-array-index-key\n          ,\n          className: \"row\",\n          onClick: function onClick() {\n            return onRowClick && onRowClick(row);\n          }\n        }, children(row));\n      })));\n    }\n  }]);\n\n  return DropDown;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\nvar Pattern =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(Pattern, _React$Component3);\n\n  function Pattern() {\n    var _getPrototypeOf4;\n\n    var _this4;\n\n    _classCallCheck(this, Pattern);\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this4 = _possibleConstructorReturn(this, (_getPrototypeOf4 = _getPrototypeOf(Pattern)).call.apply(_getPrototypeOf4, [this].concat(args)));\n    _this4.patterns = [{\n      width: 1,\n      pattern: 'solid'\n    }, {\n      width: 3,\n      pattern: 'solid'\n    }, {\n      width: 5,\n      pattern: 'solid'\n    }, {\n      width: 1,\n      pattern: 'dotted'\n    }, {\n      width: 3,\n      pattern: 'dotted'\n    }, {\n      width: 5,\n      pattern: 'dotted'\n    }, {\n      width: 1,\n      pattern: 'dashed'\n    }, {\n      width: 3,\n      pattern: 'dashed'\n    }, {\n      width: 5,\n      pattern: 'dashed'\n    }, {\n      width: 0,\n      pattern: 'none'\n    }];\n    return _this4;\n  }\n\n  _createClass(Pattern, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          pattern = _this$props3.pattern,\n          lineWidth = _this$props3.lineWidth,\n          onChange = _this$props3.onChange,\n          onActive = _this$props3.onActive;\n      var value = pattern !== 'none' ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n        className: \"option \".concat(pattern, \"-\").concat(lineWidth)\n      }) : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n        className: \"none\"\n      }, \"None\");\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(DropDown, {\n        rows: this.patterns,\n        value: value,\n        onActive: onActive,\n        onRowClick: onChange\n      }, function (p) {\n        return p.pattern !== 'none' ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n          className: \"option \".concat(p.pattern, \"-\").concat(p.width)\n        }) : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n          className: \"none\"\n        }, \"None\");\n      });\n    }\n  }]);\n\n  return Pattern;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\nvar ColorPicker =\n/*#__PURE__*/\nfunction (_React$Component4) {\n  _inherits(ColorPicker, _React$Component4);\n\n  function ColorPicker() {\n    var _getPrototypeOf5;\n\n    var _this5;\n\n    _classCallCheck(this, ColorPicker);\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    _this5 = _possibleConstructorReturn(this, (_getPrototypeOf5 = _getPrototypeOf(ColorPicker)).call.apply(_getPrototypeOf5, [this].concat(args)));\n    _this5.colorMap = [['#ffffff', '#e1e1e1', '#cccccc', '#b7b7b7', '#a0a0a5', '#898989', '#707070', '#626262', '#555555', '#464646', '#363636', '#262626', '#1d1d1d', '#000000'], ['#f4977c', '#f7ac84', '#fbc58d', '#fff69e', '#c4de9e', '#85c99e', '#7fcdc7', '#75d0f4', '#81a8d7', '#8594c8', '#8983bc', '#a187bd', '#bb8dbe', '#f29bc1'], ['#ef6c53', '#f38d5b', '#f8ae63', '#fff371', '#acd277', '#43b77a', '#2ebbb3', '#00bff0', '#4a8dc8', '#5875b7', '#625da6', '#8561a7', '#a665a7', '#ee6fa9'], ['#ea1d2c', '#ee652e', '#f4932f', '#fff126', '#8ec648', '#00a553', '#00a99c', '#00afed', '#0073ba', '#0056a4', '#323390', '#66308f', '#912a8e', '#e9088c'], ['#9b0b16', '#9e4117', '#a16118', '#c6b920', '#5a852d', '#007238', '#00746a', '#0077a1', '#004c7f', '#003570', '#1d1762', '#441261', '#62095f', '#9c005d'], ['#770001', '#792e03', '#7b4906', '#817a0b', '#41661e', '#005827', '#005951', '#003b5c', '#001d40', '#000e35', '#04002c', '#19002b', '#2c002a', '#580028']];\n    _this5.state = {\n      open: false\n    };\n    _this5.titleRef = null;\n\n    _this5.onClick = function () {\n      return _this5.setState(function (prevState) {\n        return {\n          open: !prevState.open\n        };\n      });\n    };\n\n    _this5.close = function (e) {\n      if (e.target !== _this5.titleRef && e.target.parentNode !== _this5.titleRef) {\n        _this5.setState({\n          open: false\n        });\n      }\n    };\n\n    _this5.defaultColor = function () {\n      return _this5.props.theme === 'light' ? '#000000' : '#ffffff';\n    };\n\n    return _this5;\n  }\n\n  _createClass(ColorPicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('click', this.close, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('click', this.close);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return this.state.open !== nextState.open || this.props.color !== nextProps.color || this.props.theme !== nextProps.theme;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var _this$props4 = this.props,\n          subtitle = _this$props4.subtitle,\n          color = _this$props4.color,\n          setColor = _this$props4.setColor;\n      var backgroundColor = color === 'auto' ? this.defaultColor() : color;\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"cq-color-picker \".concat(this.state.open ? 'active' : '')\n      }, subtitle ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"subtitle\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, subtitle)) : '', react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"value\",\n        onClick: this.onClick,\n        ref: function ref(_ref2) {\n          _this6.titleRef = _ref2;\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"input-color\",\n        style: {\n          backgroundColor: backgroundColor\n        }\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"ArrowIcon\"], null)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"dropdown \".concat(this.state.open ? 'open' : '')\n      }, this.colorMap.map(function (row, rowIdx) {\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          key: rowIdx\n          /* eslint-disable-line react/no-array-index-key */\n          ,\n          className: \"row\"\n        }, row.map(function (tileColor) {\n          return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n            key: tileColor,\n            className: \"tile-color\",\n            style: {\n              backgroundColor: tileColor\n            },\n            onClick: function onClick() {\n              return setColor(tileColor);\n            }\n          });\n        }));\n      })));\n    }\n  }]);\n\n  return ColorPicker;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\nvar Switch = function Switch(_ref3) {\n  var value = _ref3.value,\n      onChange = _ref3.onChange;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-switch \".concat(value ? 'on' : 'off'),\n    onClick: function onClick() {\n      return onChange(!value);\n    }\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"handle\"\n  }));\n}; // NumericInput fires onChange on Enter or onBlur\n\nvar NumericInput =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(NumericInput, _React$PureComponent);\n\n  function NumericInput(props) {\n    var _this7;\n\n    _classCallCheck(this, NumericInput);\n\n    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(NumericInput).call(this, props));\n\n    _this7.fireOnChange = function () {\n      var _this7$props = _this7.props,\n          min = _this7$props.min,\n          max = _this7$props.max,\n          onChange = _this7$props.onChange;\n\n      var setAndChange = function setAndChange(val) {\n        return _this7.setState({\n          value: val\n        }, function () {\n          return onChange(_this7.state.value);\n        });\n      };\n\n      if (max !== undefined && _this7.state.value > max) {\n        setAndChange(max);\n      } else if (min !== undefined && _this7.state.value < min) {\n        setAndChange(min);\n      } else {\n        onChange(_this7.state.value);\n      }\n    };\n\n    _this7.onUpdateValue = function (e) {\n      e.persist();\n\n      _this7.setState(function () {\n        return {\n          value: e.target.value\n        };\n      });\n    };\n\n    _this7.fireOnEnter = function (e) {\n      if (e.key === 'Enter') {\n        _this7.fireOnChange();\n      }\n    };\n\n    _this7.onIncrease = function () {\n      return _this7.setState(function (prevState) {\n        return {\n          value: prevState.value + 1\n        };\n      });\n    };\n\n    _this7.onDecrease = function () {\n      return _this7.setState(function (prevState) {\n        return {\n          value: prevState.value - 1\n        };\n      });\n    };\n\n    _this7.state = {\n      originalValue: '',\n      value: ''\n    };\n    _this7.onUpdateValue = _this7.onUpdateValue.bind(_assertThisInitialized(_this7));\n    return _this7;\n  }\n\n  _createClass(NumericInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this8 = this;\n\n      this.setState(function () {\n        return {\n          originalValue: _this8.props.value,\n          value: _this8.props.value\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          subtitle = _this$props5.subtitle,\n          min = _this$props5.min,\n          max = _this$props5.max,\n          step = _this$props5.step;\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"cq-numeric-input\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n        type: \"number\",\n        value: this.state.value,\n        onBlur: this.fireOnChange,\n        onChange: this.onUpdateValue,\n        onKeyPress: this.fireOnEnter,\n        min: min,\n        max: max,\n        step: step\n      }), subtitle ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"subtitle\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, subtitle)) : '', react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"cq-numeric-input-buttons\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"InputNumberPlusIcon\"], {\n        onClick: this.onIncrease\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"InputNumberMinusIcon\"], {\n        onClick: this.onDecrease\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var value = props.value,\n          min = props.min,\n          max = props.max,\n          onChange = props.onChange;\n      var val = value;\n\n      if (value !== state.originalValue) {\n        if (max !== undefined && value > max) {\n          val = max;\n        } else if (min !== undefined && value < min) {\n          val = min;\n        }\n\n        onChange(val);\n        return {\n          originalValue: value,\n          value: val\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return NumericInput;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.PureComponent);\nvar NumberColorPicker = function NumberColorPicker(_ref4) {\n  var value = _ref4.value,\n      theme = _ref4.theme,\n      onChange = _ref4.onChange,\n      onActive = _ref4.onActive;\n  // Do NOT rename the variables Value and Color! The keys are also\n  // used as attribute suffixes\n  var Value = value.Value,\n      Color = value.Color;\n\n  var onValueChange = function onValueChange(v) {\n    return onChange({\n      Color: Color,\n      Value: v\n    });\n  };\n\n  var onColorChange = function onColorChange(c) {\n    return onChange({\n      Color: c,\n      Value: Value\n    });\n  };\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"cq-numbercolorpicker\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(NumericInput, {\n    value: Value,\n    subtitle: t.translate('Size'),\n    onChange: function onChange(val) {\n      return onValueChange(val);\n    }\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ColorPicker, {\n    color: Color,\n    theme: theme,\n    onActive: onActive,\n    subtitle: t.translate('Color'),\n    setColor: function setColor(val) {\n      return onColorChange(val);\n    }\n  }));\n};\nvar Toggle = function Toggle(_ref5) {\n  var className = _ref5.className,\n      children = _ref5.children,\n      active = _ref5.active,\n      onChange = _ref5.onChange;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    onClick: function onClick() {\n      return onChange(!active);\n    },\n    className: \"\".concat(className || '', \" \").concat(active ? 'active' : '', \" cq-toggle\")\n  }, children);\n};\nvar FontSetting = function FontSetting(_ref6) {\n  var onChange = _ref6.onChange,\n      value = _ref6.value;\n  var families = ['Default', 'Helvetica', 'Courier', 'Garamond', 'Palatino', 'Times New Roman'];\n  var fontSizes = [8, 10, 12, 13, 14, 16, 20, 28, 36, 48, 64];\n\n  var fireChange = function fireChange(change) {\n    return onChange(_objectSpread({}, value, {}, change));\n  };\n\n  var onFontFamilyChange = function onFontFamilyChange(family) {\n    return fireChange({\n      family: family\n    });\n  };\n\n  var onFontSizeChange = function onFontSizeChange(size) {\n    return fireChange({\n      size: \"\".concat(size, \"px\")\n    });\n  };\n\n  var onBoldChange = function onBoldChange(isBold) {\n    return fireChange({\n      weight: isBold ? 'bold' : undefined\n    });\n  };\n\n  var onItalicChange = function onItalicChange(isItalic) {\n    return fireChange({\n      style: isItalic ? 'italic' : undefined\n    });\n  };\n\n  var family = value.family,\n      style = value.style,\n      weight = value.weight,\n      size = value.size;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"cq-fontsetting\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Toggle, {\n    onChange: onBoldChange,\n    active: !!weight\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-text-icon\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"b\", null, \"B\"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Toggle, {\n    active: !!style,\n    onChange: onItalicChange\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-text-icon\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"i\", null, \"i\"))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(DropDown, {\n    className: \"cq-changefontsize\",\n    rows: fontSizes,\n    title: size || '13px',\n    onRowClick: onFontSizeChange\n  }, function (p) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n      className: \"option\"\n    }, p);\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(DropDown, {\n    className: \"cq-changefontfamily\",\n    rows: families,\n    title: family || families[0],\n    onRowClick: onFontFamilyChange\n  }, function (p) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n      className: \"option\"\n    }, p);\n  }));\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/HighestLowestMarker.jsx\":\n/*!************************************************!*\\\n  !*** ./src/components/HighestLowestMarker.jsx ***!\n  \\************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _FastMarker_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FastMarker.jsx */ \"./src/components/FastMarker.jsx\");\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _sass_components_highest_lowest_marker_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../sass/components/_highest-lowest-marker.scss */ \"./sass/components/_highest-lowest-marker.scss\");\n/* harmony import */ var _sass_components_highest_lowest_marker_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_sass_components_highest_lowest_marker_scss__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nvar HighestLowestMarker = function HighestLowestMarker(_ref) {\n  var setHighestRef = _ref.setHighestRef,\n      setLowestRef = _ref.setLowestRef;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_FastMarker_jsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n    markerRef: setHighestRef,\n    className: \"ciq-highest-price\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"spot__shape-circule spot__fill-blue\"\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"spot__label\",\n    \"data-label-pos\": \"top\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, \"\".concat(t.translate('H'), \": \")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"spot__value\"\n  }))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_FastMarker_jsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n    markerRef: setLowestRef,\n    className: \"ciq-lowest-price\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"spot__shape-circule spot__fill-red\"\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"spot__label\",\n    \"data-label-pos\": \"bottom\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, \"\".concat(t.translate('L'), \" : \")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"spot__value\"\n  }))));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function (_ref2) {\n  var s = _ref2.highestLowest;\n  return {\n    setHighestRef: s.setHighestRef,\n    setLowestRef: s.setLowestRef\n  };\n})(HighestLowestMarker));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/Icons.jsx\":\n/*!**********************************!*\\\n  !*** ./src/components/Icons.jsx ***!\n  \\**********************************/\n/*! exports provided: Wrapper, DrawingCursorIcon, BaseLineIcon, CandleIcon, DotIcon, LineDotIcon, HeikinAshiIcon, HollowCandleIcon, KagiIcon, LineBreakIcon, LineIcon, OHLCIcon, PointFigureIcon, RangeBarsIcon, RenkoIcon, TableIcon, AddIcon, ZoomInIcon, CloseIcon, InputNumberMinusIcon, InputNumberPlusIcon, CloseCircleIcon, CloseBoldIcon, ComparisonIcon, CrosshairOffIcon, CrosshairOnIcon, CrosshairTooltipIcon, DeleteIcon, ClearIcon, DrawIcon, IndicatorIcon, MeasureIcon, ZoomOutIcon, SplineIcon, PngIcon, CsvIcon, StarIcon, TemplateIcon, TickIcon, TimeIcon, SearchIcon, EditIcon, SettingIcon, ArrowIcon, FavoriteIcon, DownloadIcon, PositionLeftIcon, PositionBottomIcon, BackIcon, HomeIcon, ScaleIcon, ZoominIcon, ZoomoutIcon, MetalIcon, ArrowGreenIcon, ArrowOrangeIcon, alertIconMap, SymbolPlaceholderIcon, CategoryIconMap, FlagIcons, ItemIconMap, ActiveOptionsIconMap */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Wrapper\", function() { return Wrapper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DrawingCursorIcon\", function() { return DrawingCursorIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BaseLineIcon\", function() { return BaseLineIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CandleIcon\", function() { return CandleIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DotIcon\", function() { return DotIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LineDotIcon\", function() { return LineDotIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HeikinAshiIcon\", function() { return HeikinAshiIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HollowCandleIcon\", function() { return HollowCandleIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KagiIcon\", function() { return KagiIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LineBreakIcon\", function() { return LineBreakIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LineIcon\", function() { return LineIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OHLCIcon\", function() { return OHLCIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PointFigureIcon\", function() { return PointFigureIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RangeBarsIcon\", function() { return RangeBarsIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenkoIcon\", function() { return RenkoIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TableIcon\", function() { return TableIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AddIcon\", function() { return AddIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ZoomInIcon\", function() { return ZoomInIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CloseIcon\", function() { return CloseIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InputNumberMinusIcon\", function() { return InputNumberMinusIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InputNumberPlusIcon\", function() { return InputNumberPlusIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CloseCircleIcon\", function() { return CloseCircleIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CloseBoldIcon\", function() { return CloseBoldIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ComparisonIcon\", function() { return ComparisonIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CrosshairOffIcon\", function() { return CrosshairOffIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CrosshairOnIcon\", function() { return CrosshairOnIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CrosshairTooltipIcon\", function() { return CrosshairTooltipIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DeleteIcon\", function() { return DeleteIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClearIcon\", function() { return ClearIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DrawIcon\", function() { return DrawIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IndicatorIcon\", function() { return IndicatorIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MeasureIcon\", function() { return MeasureIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ZoomOutIcon\", function() { return ZoomOutIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SplineIcon\", function() { return SplineIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PngIcon\", function() { return PngIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CsvIcon\", function() { return CsvIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StarIcon\", function() { return StarIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TemplateIcon\", function() { return TemplateIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TickIcon\", function() { return TickIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TimeIcon\", function() { return TimeIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SearchIcon\", function() { return SearchIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EditIcon\", function() { return EditIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SettingIcon\", function() { return SettingIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ArrowIcon\", function() { return ArrowIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FavoriteIcon\", function() { return FavoriteIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DownloadIcon\", function() { return DownloadIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PositionLeftIcon\", function() { return PositionLeftIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PositionBottomIcon\", function() { return PositionBottomIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BackIcon\", function() { return BackIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HomeIcon\", function() { return HomeIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScaleIcon\", function() { return ScaleIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ZoominIcon\", function() { return ZoominIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ZoomoutIcon\", function() { return ZoomoutIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MetalIcon\", function() { return MetalIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ArrowGreenIcon\", function() { return ArrowGreenIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ArrowOrangeIcon\", function() { return ArrowOrangeIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"alertIconMap\", function() { return alertIconMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SymbolPlaceholderIcon\", function() { return SymbolPlaceholderIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CategoryIconMap\", function() { return CategoryIconMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FlagIcons\", function() { return FlagIcons; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemIconMap\", function() { return ItemIconMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActiveOptionsIconMap\", function() { return ActiveOptionsIconMap; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _sass_components_icons_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../sass/components/_icons.scss */ \"./sass/components/_icons.scss\");\n/* harmony import */ var _sass_components_icons_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_sass_components_icons_scss__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_baseline_ic_baseline_normal_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../sass/icons/chart settings/chart types/baseline/ic-baseline-normal.svg */ \"./sass/icons/chart settings/chart types/baseline/ic-baseline-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_baseline_ic_baseline_normal_svg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_chart_types_baseline_ic_baseline_normal_svg__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_candle_ic_candle_normal_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../sass/icons/chart settings/chart types/candle/ic-candle-normal.svg */ \"./sass/icons/chart settings/chart types/candle/ic-candle-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_candle_ic_candle_normal_svg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_chart_types_candle_ic_candle_normal_svg__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_dot_ic_dot_normal_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../sass/icons/chart settings/chart types/dot/ic-dot-normal.svg */ \"./sass/icons/chart settings/chart types/dot/ic-dot-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_dot_ic_dot_normal_svg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_chart_types_dot_ic_dot_normal_svg__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_line_dot_ic_linedot_normal_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../sass/icons/chart settings/chart types/line dot/ic-linedot-normal.svg */ \"./sass/icons/chart settings/chart types/line dot/ic-linedot-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_line_dot_ic_linedot_normal_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_chart_types_line_dot_ic_linedot_normal_svg__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_heikin_ashi_normal_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../sass/icons/chart settings/chart types/ic-heikin-ashi-normal.svg */ \"./sass/icons/chart settings/chart types/ic-heikin-ashi-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_heikin_ashi_normal_svg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_chart_types_ic_heikin_ashi_normal_svg__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_hollow_candle_ic_hollowcandle_normal_svg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../sass/icons/chart settings/chart types/hollow candle/ic-hollowcandle-normal.svg */ \"./sass/icons/chart settings/chart types/hollow candle/ic-hollowcandle-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_hollow_candle_ic_hollowcandle_normal_svg__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_chart_types_hollow_candle_ic_hollowcandle_normal_svg__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_kagi_normal_svg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../sass/icons/chart settings/chart types/ic-kagi-normal.svg */ \"./sass/icons/chart settings/chart types/ic-kagi-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_kagi_normal_svg__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_chart_types_ic_kagi_normal_svg__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_line_ic_line_normal_svg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../sass/icons/chart settings/chart types/line/ic-line-normal.svg */ \"./sass/icons/chart settings/chart types/line/ic-line-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_line_ic_line_normal_svg__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_chart_types_line_ic_line_normal_svg__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_linebreak_normal_svg__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../sass/icons/chart settings/chart types/ic-linebreak-normal.svg */ \"./sass/icons/chart settings/chart types/ic-linebreak-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_linebreak_normal_svg__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_chart_types_ic_linebreak_normal_svg__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ohlc_ic_ohlc_normal_svg__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../sass/icons/chart settings/chart types/ohlc/ic-ohlc-normal.svg */ \"./sass/icons/chart settings/chart types/ohlc/ic-ohlc-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ohlc_ic_ohlc_normal_svg__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_chart_types_ohlc_ic_ohlc_normal_svg__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_pointfigure_normal_svg__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../sass/icons/chart settings/chart types/ic-pointfigure-normal.svg */ \"./sass/icons/chart settings/chart types/ic-pointfigure-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_pointfigure_normal_svg__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_chart_types_ic_pointfigure_normal_svg__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_rangebars_normal_svg__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../sass/icons/chart settings/chart types/ic-rangebars-normal.svg */ \"./sass/icons/chart settings/chart types/ic-rangebars-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_rangebars_normal_svg__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_chart_types_ic_rangebars_normal_svg__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_renko_normal_svg__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../sass/icons/chart settings/chart types/ic-renko-normal.svg */ \"./sass/icons/chart settings/chart types/ic-renko-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_renko_normal_svg__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_chart_types_ic_renko_normal_svg__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_spline_ic_spline_normal_svg__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../sass/icons/chart settings/chart types/spline/ic-spline-normal.svg */ \"./sass/icons/chart settings/chart types/spline/ic-spline-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_spline_ic_spline_normal_svg__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_chart_types_spline_ic_spline_normal_svg__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_table_table_svg__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../sass/icons/chart settings/chart types/table/table.svg */ \"./sass/icons/chart settings/chart types/table/table.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_table_table_svg__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_chart_types_table_table_svg__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var _sass_icons_download_ic_png_svg__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../sass/icons/download/ic-png.svg */ \"./sass/icons/download/ic-png.svg\");\n/* harmony import */ var _sass_icons_download_ic_png_svg__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_download_ic_png_svg__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var _sass_icons_download_ic_csv_svg__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../sass/icons/download/ic-csv.svg */ \"./sass/icons/download/ic-csv.svg\");\n/* harmony import */ var _sass_icons_download_ic_csv_svg__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_download_ic_csv_svg__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var _sass_icons_chart_settings_zoom_in_ic_zoomin_light_svg__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../sass/icons/chart settings/zoom-in/ic-zoomin-light.svg */ \"./sass/icons/chart settings/zoom-in/ic-zoomin-light.svg\");\n/* harmony import */ var _sass_icons_chart_settings_zoom_in_ic_zoomin_light_svg__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_zoom_in_ic_zoomin_light_svg__WEBPACK_IMPORTED_MODULE_19__);\n/* harmony import */ var _sass_icons_common_ic_close_svg__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../sass/icons/common/ic-close.svg */ \"./sass/icons/common/ic-close.svg\");\n/* harmony import */ var _sass_icons_common_ic_close_svg__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_common_ic_close_svg__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var _sass_icons_common_ic_input_number_minus_svg__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../sass/icons/common/ic-input-number-minus.svg */ \"./sass/icons/common/ic-input-number-minus.svg\");\n/* harmony import */ var _sass_icons_common_ic_input_number_minus_svg__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_common_ic_input_number_minus_svg__WEBPACK_IMPORTED_MODULE_21__);\n/* harmony import */ var _sass_icons_common_ic_input_number_plus_svg__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../sass/icons/common/ic-input-number-plus.svg */ \"./sass/icons/common/ic-input-number-plus.svg\");\n/* harmony import */ var _sass_icons_common_ic_input_number_plus_svg__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_common_ic_input_number_plus_svg__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var _sass_icons_close_ic_close_circle_svg__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../sass/icons/close/ic-close-circle.svg */ \"./sass/icons/close/ic-close-circle.svg\");\n/* harmony import */ var _sass_icons_close_ic_close_circle_svg__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_close_ic_close_circle_svg__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var _sass_icons_close_ic_close_bold_svg__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../sass/icons/close/ic-close-bold.svg */ \"./sass/icons/close/ic-close-bold.svg\");\n/* harmony import */ var _sass_icons_close_ic_close_bold_svg__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_close_ic_close_bold_svg__WEBPACK_IMPORTED_MODULE_24__);\n/* harmony import */ var _sass_icons_chart_settings_comparison_ic_comparison_normal_svg__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../sass/icons/chart settings/comparison/ic-comparison-normal.svg */ \"./sass/icons/chart settings/comparison/ic-comparison-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_comparison_ic_comparison_normal_svg__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_comparison_ic_comparison_normal_svg__WEBPACK_IMPORTED_MODULE_25__);\n/* harmony import */ var _sass_icons_chart_settings_crosshair_ic_crosshair_off_svg__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../sass/icons/chart settings/crosshair/ic-crosshair-off.svg */ \"./sass/icons/chart settings/crosshair/ic-crosshair-off.svg\");\n/* harmony import */ var _sass_icons_chart_settings_crosshair_ic_crosshair_off_svg__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_crosshair_ic_crosshair_off_svg__WEBPACK_IMPORTED_MODULE_26__);\n/* harmony import */ var _sass_icons_chart_settings_crosshair_ic_crosshair_on_svg__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../sass/icons/chart settings/crosshair/ic-crosshair-on.svg */ \"./sass/icons/chart settings/crosshair/ic-crosshair-on.svg\");\n/* harmony import */ var _sass_icons_chart_settings_crosshair_ic_crosshair_on_svg__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_crosshair_ic_crosshair_on_svg__WEBPACK_IMPORTED_MODULE_27__);\n/* harmony import */ var _sass_icons_chart_settings_crosshair_ic_crosshair_tooltip_svg__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../sass/icons/chart settings/crosshair/ic-crosshair-tooltip.svg */ \"./sass/icons/chart settings/crosshair/ic-crosshair-tooltip.svg\");\n/* harmony import */ var _sass_icons_chart_settings_crosshair_ic_crosshair_tooltip_svg__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_crosshair_ic_crosshair_tooltip_svg__WEBPACK_IMPORTED_MODULE_28__);\n/* harmony import */ var _sass_icons_delete_ic_delete_svg__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../../sass/icons/delete/ic-delete.svg */ \"./sass/icons/delete/ic-delete.svg\");\n/* harmony import */ var _sass_icons_delete_ic_delete_svg__WEBPACK_IMPORTED_MODULE_29___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_delete_ic_delete_svg__WEBPACK_IMPORTED_MODULE_29__);\n/* harmony import */ var _sass_icons_clear_ic_clear_svg__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../../sass/icons/clear/ic-clear.svg */ \"./sass/icons/clear/ic-clear.svg\");\n/* harmony import */ var _sass_icons_clear_ic_clear_svg__WEBPACK_IMPORTED_MODULE_30___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_clear_ic_clear_svg__WEBPACK_IMPORTED_MODULE_30__);\n/* harmony import */ var _sass_icons_chart_settings_drawing_tools_ic_drawingtools_normal_svg__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../../sass/icons/chart settings/drawing tools/ic-drawingtools-normal.svg */ \"./sass/icons/chart settings/drawing tools/ic-drawingtools-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_drawing_tools_ic_drawingtools_normal_svg__WEBPACK_IMPORTED_MODULE_31___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_drawing_tools_ic_drawingtools_normal_svg__WEBPACK_IMPORTED_MODULE_31__);\n/* harmony import */ var _sass_icons_chart_settings_indicators_ic_indicator_normal_svg__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../../sass/icons/chart settings/indicators/ic-indicator-normal.svg */ \"./sass/icons/chart settings/indicators/ic-indicator-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_indicators_ic_indicator_normal_svg__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_indicators_ic_indicator_normal_svg__WEBPACK_IMPORTED_MODULE_32__);\n/* harmony import */ var _sass_icons_measure_ic_measure_svg__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../../sass/icons/measure/ic-measure.svg */ \"./sass/icons/measure/ic-measure.svg\");\n/* harmony import */ var _sass_icons_measure_ic_measure_svg__WEBPACK_IMPORTED_MODULE_33___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_measure_ic_measure_svg__WEBPACK_IMPORTED_MODULE_33__);\n/* harmony import */ var _sass_icons_chart_settings_zoom_out_ic_zoomout_light_svg__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../../sass/icons/chart settings/zoom-out/ic-zoomout-light.svg */ \"./sass/icons/chart settings/zoom-out/ic-zoomout-light.svg\");\n/* harmony import */ var _sass_icons_chart_settings_zoom_out_ic_zoomout_light_svg__WEBPACK_IMPORTED_MODULE_34___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_zoom_out_ic_zoomout_light_svg__WEBPACK_IMPORTED_MODULE_34__);\n/* harmony import */ var _sass_icons_favorite_ic_favorite_normal_svg__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../../sass/icons/favorite/ic-favorite-normal.svg */ \"./sass/icons/favorite/ic-favorite-normal.svg\");\n/* harmony import */ var _sass_icons_favorite_ic_favorite_normal_svg__WEBPACK_IMPORTED_MODULE_35___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_favorite_ic_favorite_normal_svg__WEBPACK_IMPORTED_MODULE_35__);\n/* harmony import */ var _sass_icons_chart_settings_chart_template_ic_charttemplate_normal_svg__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../../sass/icons/chart settings/chart template/ic-charttemplate-normal.svg */ \"./sass/icons/chart settings/chart template/ic-charttemplate-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_template_ic_charttemplate_normal_svg__WEBPACK_IMPORTED_MODULE_36___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_chart_template_ic_charttemplate_normal_svg__WEBPACK_IMPORTED_MODULE_36__);\n/* harmony import */ var _sass_icons_tick_ic_tick_svg__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../../sass/icons/tick/ic-tick.svg */ \"./sass/icons/tick/ic-tick.svg\");\n/* harmony import */ var _sass_icons_tick_ic_tick_svg__WEBPACK_IMPORTED_MODULE_37___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_tick_ic_tick_svg__WEBPACK_IMPORTED_MODULE_37__);\n/* harmony import */ var _sass_icons_time_ic_time_svg__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../../sass/icons/time/ic-time.svg */ \"./sass/icons/time/ic-time.svg\");\n/* harmony import */ var _sass_icons_time_ic_time_svg__WEBPACK_IMPORTED_MODULE_38___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_time_ic_time_svg__WEBPACK_IMPORTED_MODULE_38__);\n/* harmony import */ var _sass_icons_sidebar_active_ic_active_normal_svg__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../../sass/icons/sidebar/active/ic-active-normal.svg */ \"./sass/icons/sidebar/active/ic-active-normal.svg\");\n/* harmony import */ var _sass_icons_sidebar_active_ic_active_normal_svg__WEBPACK_IMPORTED_MODULE_39___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_sidebar_active_ic_active_normal_svg__WEBPACK_IMPORTED_MODULE_39__);\n/* harmony import */ var _sass_icons_sidebar_commodities_ic_commodities_normal_svg__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../../sass/icons/sidebar/commodities/ic-commodities-normal.svg */ \"./sass/icons/sidebar/commodities/ic-commodities-normal.svg\");\n/* harmony import */ var _sass_icons_sidebar_commodities_ic_commodities_normal_svg__WEBPACK_IMPORTED_MODULE_40___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_sidebar_commodities_ic_commodities_normal_svg__WEBPACK_IMPORTED_MODULE_40__);\n/* harmony import */ var _sass_icons_sidebar_forex_ic_forex_normal_svg__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../../sass/icons/sidebar/forex/ic-forex-normal.svg */ \"./sass/icons/sidebar/forex/ic-forex-normal.svg\");\n/* harmony import */ var _sass_icons_sidebar_forex_ic_forex_normal_svg__WEBPACK_IMPORTED_MODULE_41___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_sidebar_forex_ic_forex_normal_svg__WEBPACK_IMPORTED_MODULE_41__);\n/* harmony import */ var _sass_icons_sidebar_indices_ic_indices_normal_svg__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../../sass/icons/sidebar/indices/ic-indices-normal.svg */ \"./sass/icons/sidebar/indices/ic-indices-normal.svg\");\n/* harmony import */ var _sass_icons_sidebar_indices_ic_indices_normal_svg__WEBPACK_IMPORTED_MODULE_42___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_sidebar_indices_ic_indices_normal_svg__WEBPACK_IMPORTED_MODULE_42__);\n/* harmony import */ var _sass_icons_sidebar_otc_ic_otc_normal_svg__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../../sass/icons/sidebar/otc/ic-otc-normal.svg */ \"./sass/icons/sidebar/otc/ic-otc-normal.svg\");\n/* harmony import */ var _sass_icons_sidebar_otc_ic_otc_normal_svg__WEBPACK_IMPORTED_MODULE_43___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_sidebar_otc_ic_otc_normal_svg__WEBPACK_IMPORTED_MODULE_43__);\n/* harmony import */ var _sass_icons_sidebar_synth_index_ic_synth_normal_svg__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../../sass/icons/sidebar/synth_index/ic-synth-normal.svg */ \"./sass/icons/sidebar/synth_index/ic-synth-normal.svg\");\n/* harmony import */ var _sass_icons_sidebar_synth_index_ic_synth_normal_svg__WEBPACK_IMPORTED_MODULE_44___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_sidebar_synth_index_ic_synth_normal_svg__WEBPACK_IMPORTED_MODULE_44__);\n/* harmony import */ var _sass_icons_sidebar_volatility_ic_volatility_normal_svg__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../../sass/icons/sidebar/volatility/ic-volatility-normal.svg */ \"./sass/icons/sidebar/volatility/ic-volatility-normal.svg\");\n/* harmony import */ var _sass_icons_sidebar_volatility_ic_volatility_normal_svg__WEBPACK_IMPORTED_MODULE_45___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_sidebar_volatility_ic_volatility_normal_svg__WEBPACK_IMPORTED_MODULE_45__);\n/* harmony import */ var _sass_icons_search_ic_search_normal_svg__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../../sass/icons/search/ic-search-normal.svg */ \"./sass/icons/search/ic-search-normal.svg\");\n/* harmony import */ var _sass_icons_search_ic_search_normal_svg__WEBPACK_IMPORTED_MODULE_46___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_search_ic_search_normal_svg__WEBPACK_IMPORTED_MODULE_46__);\n/* harmony import */ var _sass_icons_edit_ic_edit_svg__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../../sass/icons/edit/ic-edit.svg */ \"./sass/icons/edit/ic-edit.svg\");\n/* harmony import */ var _sass_icons_edit_ic_edit_svg__WEBPACK_IMPORTED_MODULE_47___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_edit_ic_edit_svg__WEBPACK_IMPORTED_MODULE_47__);\n/* harmony import */ var _sass_icons_dropdown_ic_dropdown_svg__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../../sass/icons/dropdown/ic-dropdown.svg */ \"./sass/icons/dropdown/ic-dropdown.svg\");\n/* harmony import */ var _sass_icons_dropdown_ic_dropdown_svg__WEBPACK_IMPORTED_MODULE_48___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_dropdown_ic_dropdown_svg__WEBPACK_IMPORTED_MODULE_48__);\n/* harmony import */ var _sass_icons_download_ic_download_svg__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ../../sass/icons/download/ic-download.svg */ \"./sass/icons/download/ic-download.svg\");\n/* harmony import */ var _sass_icons_download_ic_download_svg__WEBPACK_IMPORTED_MODULE_49___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_download_ic_download_svg__WEBPACK_IMPORTED_MODULE_49__);\n/* harmony import */ var _sass_icons_chart_settings_setting_ic_position_left_svg__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ../../sass/icons/chart settings/setting/ic-position-left.svg */ \"./sass/icons/chart settings/setting/ic-position-left.svg\");\n/* harmony import */ var _sass_icons_chart_settings_setting_ic_position_left_svg__WEBPACK_IMPORTED_MODULE_50___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_setting_ic_position_left_svg__WEBPACK_IMPORTED_MODULE_50__);\n/* harmony import */ var _sass_icons_chart_settings_setting_ic_position_bottom_svg__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ../../sass/icons/chart settings/setting/ic-position-bottom.svg */ \"./sass/icons/chart settings/setting/ic-position-bottom.svg\");\n/* harmony import */ var _sass_icons_chart_settings_setting_ic_position_bottom_svg__WEBPACK_IMPORTED_MODULE_51___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_settings_setting_ic_position_bottom_svg__WEBPACK_IMPORTED_MODULE_51__);\n/* harmony import */ var _sass_icons_back_ic_back_svg__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../../sass/icons/back/ic-back.svg */ \"./sass/icons/back/ic-back.svg\");\n/* harmony import */ var _sass_icons_back_ic_back_svg__WEBPACK_IMPORTED_MODULE_52___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_back_ic_back_svg__WEBPACK_IMPORTED_MODULE_52__);\n/* harmony import */ var _sass_icons_pencil_ic_pencil_svg__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ../../sass/icons/pencil/ic-pencil.svg */ \"./sass/icons/pencil/ic-pencil.svg\");\n/* harmony import */ var _sass_icons_pencil_ic_pencil_svg__WEBPACK_IMPORTED_MODULE_53___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_pencil_ic_pencil_svg__WEBPACK_IMPORTED_MODULE_53__);\n/* harmony import */ var _sass_icons_alert_message_warning_svg__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../../sass/icons/alert message/warning.svg */ \"./sass/icons/alert message/warning.svg\");\n/* harmony import */ var _sass_icons_alert_message_warning_svg__WEBPACK_IMPORTED_MODULE_54___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_alert_message_warning_svg__WEBPACK_IMPORTED_MODULE_54__);\n/* harmony import */ var _sass_icons_alert_message_error_svg__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../../sass/icons/alert message/error.svg */ \"./sass/icons/alert message/error.svg\");\n/* harmony import */ var _sass_icons_alert_message_error_svg__WEBPACK_IMPORTED_MODULE_55___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_alert_message_error_svg__WEBPACK_IMPORTED_MODULE_55__);\n/* harmony import */ var _sass_icons_alert_message_success_svg__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ../../sass/icons/alert message/success.svg */ \"./sass/icons/alert message/success.svg\");\n/* harmony import */ var _sass_icons_alert_message_success_svg__WEBPACK_IMPORTED_MODULE_56___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_alert_message_success_svg__WEBPACK_IMPORTED_MODULE_56__);\n/* harmony import */ var _sass_icons_alert_message_info_svg__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../../sass/icons/alert message/info.svg */ \"./sass/icons/alert message/info.svg\");\n/* harmony import */ var _sass_icons_alert_message_info_svg__WEBPACK_IMPORTED_MODULE_57___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_alert_message_info_svg__WEBPACK_IMPORTED_MODULE_57__);\n/* harmony import */ var _sass_icons_navigation_widgets_ic_home_svg__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ../../sass/icons/navigation-widgets/ic-home.svg */ \"./sass/icons/navigation-widgets/ic-home.svg\");\n/* harmony import */ var _sass_icons_navigation_widgets_ic_home_svg__WEBPACK_IMPORTED_MODULE_58___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_navigation_widgets_ic_home_svg__WEBPACK_IMPORTED_MODULE_58__);\n/* harmony import */ var _sass_icons_navigation_widgets_ic_scale_full_svg__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ../../sass/icons/navigation-widgets/ic-scale-full.svg */ \"./sass/icons/navigation-widgets/ic-scale-full.svg\");\n/* harmony import */ var _sass_icons_navigation_widgets_ic_scale_full_svg__WEBPACK_IMPORTED_MODULE_59___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_navigation_widgets_ic_scale_full_svg__WEBPACK_IMPORTED_MODULE_59__);\n/* harmony import */ var _sass_icons_navigation_widgets_ic_zoomin_svg__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ../../sass/icons/navigation-widgets/ic-zoomin.svg */ \"./sass/icons/navigation-widgets/ic-zoomin.svg\");\n/* harmony import */ var _sass_icons_navigation_widgets_ic_zoomin_svg__WEBPACK_IMPORTED_MODULE_60___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_navigation_widgets_ic_zoomin_svg__WEBPACK_IMPORTED_MODULE_60__);\n/* harmony import */ var _sass_icons_navigation_widgets_ic_zoomout_svg__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ../../sass/icons/navigation-widgets/ic-zoomout.svg */ \"./sass/icons/navigation-widgets/ic-zoomout.svg\");\n/* harmony import */ var _sass_icons_navigation_widgets_ic_zoomout_svg__WEBPACK_IMPORTED_MODULE_61___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_navigation_widgets_ic_zoomout_svg__WEBPACK_IMPORTED_MODULE_61__);\n/* harmony import */ var _sass_icons_arrows_ic_arrow_green_svg__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ../../sass/icons/arrows/ic-arrow-green.svg */ \"./sass/icons/arrows/ic-arrow-green.svg\");\n/* harmony import */ var _sass_icons_arrows_ic_arrow_green_svg__WEBPACK_IMPORTED_MODULE_62___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_arrows_ic_arrow_green_svg__WEBPACK_IMPORTED_MODULE_62__);\n/* harmony import */ var _sass_icons_arrows_ic_arrow_orange_svg__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ../../sass/icons/arrows/ic-arrow-orange.svg */ \"./sass/icons/arrows/ic-arrow-orange.svg\");\n/* harmony import */ var _sass_icons_arrows_ic_arrow_orange_svg__WEBPACK_IMPORTED_MODULE_63___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_arrows_ic_arrow_orange_svg__WEBPACK_IMPORTED_MODULE_63__);\n/* harmony import */ var _sass_icons_placeholder_ic_placeholder_svg__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ../../sass/icons/placeholder/ic-placeholder.svg */ \"./sass/icons/placeholder/ic-placeholder.svg\");\n/* harmony import */ var _sass_icons_placeholder_ic_placeholder_svg__WEBPACK_IMPORTED_MODULE_64___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_placeholder_ic_placeholder_svg__WEBPACK_IMPORTED_MODULE_64__);\n/* harmony import */ var _sass_icons_flags_aud_svg__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ../../sass/icons/flags/aud.svg */ \"./sass/icons/flags/aud.svg\");\n/* harmony import */ var _sass_icons_flags_aud_svg__WEBPACK_IMPORTED_MODULE_65___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_aud_svg__WEBPACK_IMPORTED_MODULE_65__);\n/* harmony import */ var _sass_icons_flags_cad_svg__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ../../sass/icons/flags/cad.svg */ \"./sass/icons/flags/cad.svg\");\n/* harmony import */ var _sass_icons_flags_cad_svg__WEBPACK_IMPORTED_MODULE_66___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_cad_svg__WEBPACK_IMPORTED_MODULE_66__);\n/* harmony import */ var _sass_icons_flags_chf_svg__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ../../sass/icons/flags/chf.svg */ \"./sass/icons/flags/chf.svg\");\n/* harmony import */ var _sass_icons_flags_chf_svg__WEBPACK_IMPORTED_MODULE_67___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_chf_svg__WEBPACK_IMPORTED_MODULE_67__);\n/* harmony import */ var _sass_icons_flags_eur_svg__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ../../sass/icons/flags/eur.svg */ \"./sass/icons/flags/eur.svg\");\n/* harmony import */ var _sass_icons_flags_eur_svg__WEBPACK_IMPORTED_MODULE_68___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_eur_svg__WEBPACK_IMPORTED_MODULE_68__);\n/* harmony import */ var _sass_icons_flags_gbp_svg__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ../../sass/icons/flags/gbp.svg */ \"./sass/icons/flags/gbp.svg\");\n/* harmony import */ var _sass_icons_flags_gbp_svg__WEBPACK_IMPORTED_MODULE_69___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_gbp_svg__WEBPACK_IMPORTED_MODULE_69__);\n/* harmony import */ var _sass_icons_flags_jpy_svg__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ../../sass/icons/flags/jpy.svg */ \"./sass/icons/flags/jpy.svg\");\n/* harmony import */ var _sass_icons_flags_jpy_svg__WEBPACK_IMPORTED_MODULE_70___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_jpy_svg__WEBPACK_IMPORTED_MODULE_70__);\n/* harmony import */ var _sass_icons_flags_mxn_svg__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ../../sass/icons/flags/mxn.svg */ \"./sass/icons/flags/mxn.svg\");\n/* harmony import */ var _sass_icons_flags_mxn_svg__WEBPACK_IMPORTED_MODULE_71___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_mxn_svg__WEBPACK_IMPORTED_MODULE_71__);\n/* harmony import */ var _sass_icons_flags_nok_svg__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ../../sass/icons/flags/nok.svg */ \"./sass/icons/flags/nok.svg\");\n/* harmony import */ var _sass_icons_flags_nok_svg__WEBPACK_IMPORTED_MODULE_72___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_nok_svg__WEBPACK_IMPORTED_MODULE_72__);\n/* harmony import */ var _sass_icons_flags_nzd_svg__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ../../sass/icons/flags/nzd.svg */ \"./sass/icons/flags/nzd.svg\");\n/* harmony import */ var _sass_icons_flags_nzd_svg__WEBPACK_IMPORTED_MODULE_73___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_nzd_svg__WEBPACK_IMPORTED_MODULE_73__);\n/* harmony import */ var _sass_icons_flags_pln_svg__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ../../sass/icons/flags/pln.svg */ \"./sass/icons/flags/pln.svg\");\n/* harmony import */ var _sass_icons_flags_pln_svg__WEBPACK_IMPORTED_MODULE_74___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_pln_svg__WEBPACK_IMPORTED_MODULE_74__);\n/* harmony import */ var _sass_icons_flags_sek_svg__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ../../sass/icons/flags/sek.svg */ \"./sass/icons/flags/sek.svg\");\n/* harmony import */ var _sass_icons_flags_sek_svg__WEBPACK_IMPORTED_MODULE_75___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_sek_svg__WEBPACK_IMPORTED_MODULE_75__);\n/* harmony import */ var _sass_icons_flags_usd_svg__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ../../sass/icons/flags/usd.svg */ \"./sass/icons/flags/usd.svg\");\n/* harmony import */ var _sass_icons_flags_usd_svg__WEBPACK_IMPORTED_MODULE_76___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_usd_svg__WEBPACK_IMPORTED_MODULE_76__);\n/* harmony import */ var _sass_icons_flags_portugal_svg__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ../../sass/icons/flags/portugal.svg */ \"./sass/icons/flags/portugal.svg\");\n/* harmony import */ var _sass_icons_flags_portugal_svg__WEBPACK_IMPORTED_MODULE_77___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_portugal_svg__WEBPACK_IMPORTED_MODULE_77__);\n/* harmony import */ var _sass_icons_flags_russia_svg__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ../../sass/icons/flags/russia.svg */ \"./sass/icons/flags/russia.svg\");\n/* harmony import */ var _sass_icons_flags_russia_svg__WEBPACK_IMPORTED_MODULE_78___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_russia_svg__WEBPACK_IMPORTED_MODULE_78__);\n/* harmony import */ var _sass_icons_flags_thailand_svg__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ../../sass/icons/flags/thailand.svg */ \"./sass/icons/flags/thailand.svg\");\n/* harmony import */ var _sass_icons_flags_thailand_svg__WEBPACK_IMPORTED_MODULE_79___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_thailand_svg__WEBPACK_IMPORTED_MODULE_79__);\n/* harmony import */ var _sass_icons_flags_indonesia_svg__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ../../sass/icons/flags/indonesia.svg */ \"./sass/icons/flags/indonesia.svg\");\n/* harmony import */ var _sass_icons_flags_indonesia_svg__WEBPACK_IMPORTED_MODULE_80___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_indonesia_svg__WEBPACK_IMPORTED_MODULE_80__);\n/* harmony import */ var _sass_icons_flags_vietnam_svg__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ../../sass/icons/flags/vietnam.svg */ \"./sass/icons/flags/vietnam.svg\");\n/* harmony import */ var _sass_icons_flags_vietnam_svg__WEBPACK_IMPORTED_MODULE_81___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_vietnam_svg__WEBPACK_IMPORTED_MODULE_81__);\n/* harmony import */ var _sass_icons_flags_italy_svg__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ../../sass/icons/flags/italy.svg */ \"./sass/icons/flags/italy.svg\");\n/* harmony import */ var _sass_icons_flags_italy_svg__WEBPACK_IMPORTED_MODULE_82___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_italy_svg__WEBPACK_IMPORTED_MODULE_82__);\n/* harmony import */ var _sass_icons_flags_chinese_svg__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ../../sass/icons/flags/chinese.svg */ \"./sass/icons/flags/chinese.svg\");\n/* harmony import */ var _sass_icons_flags_chinese_svg__WEBPACK_IMPORTED_MODULE_83___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_chinese_svg__WEBPACK_IMPORTED_MODULE_83__);\n/* harmony import */ var _sass_icons_flags_chinese_traditional_svg__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ../../sass/icons/flags/chinese-traditional.svg */ \"./sass/icons/flags/chinese-traditional.svg\");\n/* harmony import */ var _sass_icons_flags_chinese_traditional_svg__WEBPACK_IMPORTED_MODULE_84___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_chinese_traditional_svg__WEBPACK_IMPORTED_MODULE_84__);\n/* harmony import */ var _sass_icons_flags_german_svg__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ../../sass/icons/flags/german.svg */ \"./sass/icons/flags/german.svg\");\n/* harmony import */ var _sass_icons_flags_german_svg__WEBPACK_IMPORTED_MODULE_85___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_german_svg__WEBPACK_IMPORTED_MODULE_85__);\n/* harmony import */ var _sass_icons_flags_hong_kong_svg__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ../../sass/icons/flags/hong kong.svg */ \"./sass/icons/flags/hong kong.svg\");\n/* harmony import */ var _sass_icons_flags_hong_kong_svg__WEBPACK_IMPORTED_MODULE_86___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_hong_kong_svg__WEBPACK_IMPORTED_MODULE_86__);\n/* harmony import */ var _sass_icons_flags_french_svg__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ../../sass/icons/flags/french.svg */ \"./sass/icons/flags/french.svg\");\n/* harmony import */ var _sass_icons_flags_french_svg__WEBPACK_IMPORTED_MODULE_87___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_french_svg__WEBPACK_IMPORTED_MODULE_87__);\n/* harmony import */ var _sass_icons_flags_dutch_svg__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ../../sass/icons/flags/dutch.svg */ \"./sass/icons/flags/dutch.svg\");\n/* harmony import */ var _sass_icons_flags_dutch_svg__WEBPACK_IMPORTED_MODULE_88___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_dutch_svg__WEBPACK_IMPORTED_MODULE_88__);\n/* harmony import */ var _sass_icons_flags_spanish_svg__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ../../sass/icons/flags/spanish.svg */ \"./sass/icons/flags/spanish.svg\");\n/* harmony import */ var _sass_icons_flags_spanish_svg__WEBPACK_IMPORTED_MODULE_89___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_spanish_svg__WEBPACK_IMPORTED_MODULE_89__);\n/* harmony import */ var _sass_icons_flags_wallstreet_svg__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ../../sass/icons/flags/wallstreet.svg */ \"./sass/icons/flags/wallstreet.svg\");\n/* harmony import */ var _sass_icons_flags_wallstreet_svg__WEBPACK_IMPORTED_MODULE_90___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_flags_wallstreet_svg__WEBPACK_IMPORTED_MODULE_90__);\n/* harmony import */ var _sass_icons_active_symbols_energy_oil_usd_ic_oilusd_svg__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ../../sass/icons/active-symbols/energy/oil usd/ic-oilusd.svg */ \"./sass/icons/active-symbols/energy/oil usd/ic-oilusd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_energy_oil_usd_ic_oilusd_svg__WEBPACK_IMPORTED_MODULE_91___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_active_symbols_energy_oil_usd_ic_oilusd_svg__WEBPACK_IMPORTED_MODULE_91__);\n/* harmony import */ var _sass_icons_active_symbols_metals_ic_metal_svg__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ../../sass/icons/active-symbols/metals/ic-metal.svg */ \"./sass/icons/active-symbols/metals/ic-metal.svg\");\n/* harmony import */ var _sass_icons_active_symbols_metals_ic_metal_svg__WEBPACK_IMPORTED_MODULE_92___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_active_symbols_metals_ic_metal_svg__WEBPACK_IMPORTED_MODULE_92__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_10_index_ic_10_index_svg__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ../../sass/icons/active-symbols/volatility/10 index/ic-10-index.svg */ \"./sass/icons/active-symbols/volatility/10 index/ic-10-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_10_index_ic_10_index_svg__WEBPACK_IMPORTED_MODULE_93___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_active_symbols_volatility_10_index_ic_10_index_svg__WEBPACK_IMPORTED_MODULE_93__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_25_index_ic_25_index_svg__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ../../sass/icons/active-symbols/volatility/25 index/ic-25-index.svg */ \"./sass/icons/active-symbols/volatility/25 index/ic-25-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_25_index_ic_25_index_svg__WEBPACK_IMPORTED_MODULE_94___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_active_symbols_volatility_25_index_ic_25_index_svg__WEBPACK_IMPORTED_MODULE_94__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_50_index_ic_50_index_svg__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ../../sass/icons/active-symbols/volatility/50 index/ic-50-index.svg */ \"./sass/icons/active-symbols/volatility/50 index/ic-50-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_50_index_ic_50_index_svg__WEBPACK_IMPORTED_MODULE_95___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_active_symbols_volatility_50_index_ic_50_index_svg__WEBPACK_IMPORTED_MODULE_95__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_75_index_ic_75_index_svg__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ../../sass/icons/active-symbols/volatility/75 index/ic-75-index.svg */ \"./sass/icons/active-symbols/volatility/75 index/ic-75-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_75_index_ic_75_index_svg__WEBPACK_IMPORTED_MODULE_96___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_active_symbols_volatility_75_index_ic_75_index_svg__WEBPACK_IMPORTED_MODULE_96__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_100_index_ic_100_index_svg__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ../../sass/icons/active-symbols/volatility/100 index/ic-100-index.svg */ \"./sass/icons/active-symbols/volatility/100 index/ic-100-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_100_index_ic_100_index_svg__WEBPACK_IMPORTED_MODULE_97___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_active_symbols_volatility_100_index_ic_100_index_svg__WEBPACK_IMPORTED_MODULE_97__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s10_index_ic_10_1s_index_svg__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ../../sass/icons/active-symbols/volatility/1s10 index/ic-10-1s-index.svg */ \"./sass/icons/active-symbols/volatility/1s10 index/ic-10-1s-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s10_index_ic_10_1s_index_svg__WEBPACK_IMPORTED_MODULE_98___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_active_symbols_volatility_1s10_index_ic_10_1s_index_svg__WEBPACK_IMPORTED_MODULE_98__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s100_index_ic_100_1s_index_svg__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ../../sass/icons/active-symbols/volatility/1s100 index/ic-100-1s-index.svg */ \"./sass/icons/active-symbols/volatility/1s100 index/ic-100-1s-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s100_index_ic_100_1s_index_svg__WEBPACK_IMPORTED_MODULE_99___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_active_symbols_volatility_1s100_index_ic_100_1s_index_svg__WEBPACK_IMPORTED_MODULE_99__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_bear_market_ic_marketbear_svg__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ../../sass/icons/active-symbols/volatility/bear market/ic-marketbear.svg */ \"./sass/icons/active-symbols/volatility/bear market/ic-marketbear.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_bear_market_ic_marketbear_svg__WEBPACK_IMPORTED_MODULE_100___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_active_symbols_volatility_bear_market_ic_marketbear_svg__WEBPACK_IMPORTED_MODULE_100__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_bull_market_ic_marketbull_svg__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ../../sass/icons/active-symbols/volatility/bull market/ic-marketbull.svg */ \"./sass/icons/active-symbols/volatility/bull market/ic-marketbull.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_bull_market_ic_marketbull_svg__WEBPACK_IMPORTED_MODULE_101___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_active_symbols_volatility_bull_market_ic_marketbull_svg__WEBPACK_IMPORTED_MODULE_101__);\n/* harmony import */ var _sass_icons_active_symbols_ic_otcbadge_svg__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ../../sass/icons/active-symbols/ic-otcbadge.svg */ \"./sass/icons/active-symbols/ic-otcbadge.svg\");\n/* harmony import */ var _sass_icons_active_symbols_ic_otcbadge_svg__WEBPACK_IMPORTED_MODULE_102___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_active_symbols_ic_otcbadge_svg__WEBPACK_IMPORTED_MODULE_102__);\n/* harmony import */ var _sass_icons_active_symbols_ic_smartfx_placeholder_svg__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ../../sass/icons/active-symbols/ic-smartfx-placeholder.svg */ \"./sass/icons/active-symbols/ic-smartfx-placeholder.svg\");\n/* harmony import */ var _sass_icons_active_symbols_ic_smartfx_placeholder_svg__WEBPACK_IMPORTED_MODULE_103___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_active_symbols_ic_smartfx_placeholder_svg__WEBPACK_IMPORTED_MODULE_103__);\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n // Chart types:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* Energy */\n\n\n/* Metals */\n\n\n/* Synthetic Indices */\n\n\n\n\n\n\n\n\n\n\n\n\nvar Wrapper = function Wrapper(SvgLogo) {\n  return function (props) {\n    var className = props.className,\n        tooltip = props['tooltip-title'],\n        p = _objectWithoutProperties(props, [\"className\", \"tooltip-title\"]); // eslint-disable-line prefer-const\n\n\n    className = \"ic-icon \".concat(className || '');\n    var vb = SvgLogo.viewBox.split(' ').slice(2);\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", _extends({\n      className: className,\n      \"tooltip-title\": tooltip\n    }, p), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"svg\", {\n      width: vb[0],\n      height: vb[1]\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"use\", {\n      xlinkHref: __webpack_require__.p + SvgLogo.url\n      /* eslint-disable-line no-undef */\n\n    })), tooltip && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"br\", null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n      className: \"ic-subtitle\"\n    }, tooltip)));\n  };\n};\nvar DrawingCursorIcon = Wrapper(_sass_icons_pencil_ic_pencil_svg__WEBPACK_IMPORTED_MODULE_53___default.a); // Chart Types:\n\nvar BaseLineIcon = Wrapper(_sass_icons_chart_settings_chart_types_baseline_ic_baseline_normal_svg__WEBPACK_IMPORTED_MODULE_2___default.a);\nvar CandleIcon = Wrapper(_sass_icons_chart_settings_chart_types_candle_ic_candle_normal_svg__WEBPACK_IMPORTED_MODULE_3___default.a);\nvar DotIcon = Wrapper(_sass_icons_chart_settings_chart_types_dot_ic_dot_normal_svg__WEBPACK_IMPORTED_MODULE_4___default.a);\nvar LineDotIcon = Wrapper(_sass_icons_chart_settings_chart_types_line_dot_ic_linedot_normal_svg__WEBPACK_IMPORTED_MODULE_5___default.a);\nvar HeikinAshiIcon = Wrapper(_sass_icons_chart_settings_chart_types_ic_heikin_ashi_normal_svg__WEBPACK_IMPORTED_MODULE_6___default.a);\nvar HollowCandleIcon = Wrapper(_sass_icons_chart_settings_chart_types_hollow_candle_ic_hollowcandle_normal_svg__WEBPACK_IMPORTED_MODULE_7___default.a);\nvar KagiIcon = Wrapper(_sass_icons_chart_settings_chart_types_ic_kagi_normal_svg__WEBPACK_IMPORTED_MODULE_8___default.a);\nvar LineBreakIcon = Wrapper(_sass_icons_chart_settings_chart_types_ic_linebreak_normal_svg__WEBPACK_IMPORTED_MODULE_10___default.a);\nvar LineIcon = Wrapper(_sass_icons_chart_settings_chart_types_line_ic_line_normal_svg__WEBPACK_IMPORTED_MODULE_9___default.a);\nvar OHLCIcon = Wrapper(_sass_icons_chart_settings_chart_types_ohlc_ic_ohlc_normal_svg__WEBPACK_IMPORTED_MODULE_11___default.a);\nvar PointFigureIcon = Wrapper(_sass_icons_chart_settings_chart_types_ic_pointfigure_normal_svg__WEBPACK_IMPORTED_MODULE_12___default.a);\nvar RangeBarsIcon = Wrapper(_sass_icons_chart_settings_chart_types_ic_rangebars_normal_svg__WEBPACK_IMPORTED_MODULE_13___default.a);\nvar RenkoIcon = Wrapper(_sass_icons_chart_settings_chart_types_ic_renko_normal_svg__WEBPACK_IMPORTED_MODULE_14___default.a);\nvar TableIcon = Wrapper(_sass_icons_chart_settings_chart_types_table_table_svg__WEBPACK_IMPORTED_MODULE_16___default.a);\nvar AddIcon = Wrapper(_sass_icons_chart_settings_zoom_in_ic_zoomin_light_svg__WEBPACK_IMPORTED_MODULE_19___default.a);\nvar ZoomInIcon = Wrapper(_sass_icons_chart_settings_zoom_in_ic_zoomin_light_svg__WEBPACK_IMPORTED_MODULE_19___default.a);\nvar CloseIcon = Wrapper(_sass_icons_common_ic_close_svg__WEBPACK_IMPORTED_MODULE_20___default.a);\nvar InputNumberMinusIcon = Wrapper(_sass_icons_common_ic_input_number_minus_svg__WEBPACK_IMPORTED_MODULE_21___default.a);\nvar InputNumberPlusIcon = Wrapper(_sass_icons_common_ic_input_number_plus_svg__WEBPACK_IMPORTED_MODULE_22___default.a);\nvar CloseCircleIcon = Wrapper(_sass_icons_close_ic_close_circle_svg__WEBPACK_IMPORTED_MODULE_23___default.a);\nvar CloseBoldIcon = Wrapper(_sass_icons_close_ic_close_bold_svg__WEBPACK_IMPORTED_MODULE_24___default.a);\nvar ComparisonIcon = Wrapper(_sass_icons_chart_settings_comparison_ic_comparison_normal_svg__WEBPACK_IMPORTED_MODULE_25___default.a);\nvar CrosshairOffIcon = Wrapper(_sass_icons_chart_settings_crosshair_ic_crosshair_off_svg__WEBPACK_IMPORTED_MODULE_26___default.a);\nvar CrosshairOnIcon = Wrapper(_sass_icons_chart_settings_crosshair_ic_crosshair_on_svg__WEBPACK_IMPORTED_MODULE_27___default.a);\nvar CrosshairTooltipIcon = Wrapper(_sass_icons_chart_settings_crosshair_ic_crosshair_tooltip_svg__WEBPACK_IMPORTED_MODULE_28___default.a);\nvar DeleteIcon = Wrapper(_sass_icons_delete_ic_delete_svg__WEBPACK_IMPORTED_MODULE_29___default.a);\nvar ClearIcon = Wrapper(_sass_icons_clear_ic_clear_svg__WEBPACK_IMPORTED_MODULE_30___default.a);\nvar DrawIcon = Wrapper(_sass_icons_chart_settings_drawing_tools_ic_drawingtools_normal_svg__WEBPACK_IMPORTED_MODULE_31___default.a);\nvar IndicatorIcon = Wrapper(_sass_icons_chart_settings_indicators_ic_indicator_normal_svg__WEBPACK_IMPORTED_MODULE_32___default.a);\nvar MeasureIcon = Wrapper(_sass_icons_measure_ic_measure_svg__WEBPACK_IMPORTED_MODULE_33___default.a);\nvar ZoomOutIcon = Wrapper(_sass_icons_chart_settings_zoom_out_ic_zoomout_light_svg__WEBPACK_IMPORTED_MODULE_34___default.a);\nvar SplineIcon = Wrapper(_sass_icons_chart_settings_chart_types_spline_ic_spline_normal_svg__WEBPACK_IMPORTED_MODULE_15___default.a);\nvar PngIcon = Wrapper(_sass_icons_download_ic_png_svg__WEBPACK_IMPORTED_MODULE_17___default.a);\nvar CsvIcon = Wrapper(_sass_icons_download_ic_csv_svg__WEBPACK_IMPORTED_MODULE_18___default.a);\nvar StarIcon = Wrapper(_sass_icons_favorite_ic_favorite_normal_svg__WEBPACK_IMPORTED_MODULE_35___default.a);\nvar TemplateIcon = Wrapper(_sass_icons_chart_settings_chart_template_ic_charttemplate_normal_svg__WEBPACK_IMPORTED_MODULE_36___default.a);\nvar TickIcon = Wrapper(_sass_icons_tick_ic_tick_svg__WEBPACK_IMPORTED_MODULE_37___default.a);\nvar TimeIcon = Wrapper(_sass_icons_time_ic_time_svg__WEBPACK_IMPORTED_MODULE_38___default.a);\nvar SearchIcon = Wrapper(_sass_icons_search_ic_search_normal_svg__WEBPACK_IMPORTED_MODULE_46___default.a);\nvar EditIcon = Wrapper(_sass_icons_edit_ic_edit_svg__WEBPACK_IMPORTED_MODULE_47___default.a);\nvar SettingIcon = Wrapper(_sass_icons_edit_ic_edit_svg__WEBPACK_IMPORTED_MODULE_47___default.a);\nvar ArrowIcon = Wrapper(_sass_icons_dropdown_ic_dropdown_svg__WEBPACK_IMPORTED_MODULE_48___default.a);\nvar FavoriteIcon = Wrapper(_sass_icons_favorite_ic_favorite_normal_svg__WEBPACK_IMPORTED_MODULE_35___default.a);\nvar DownloadIcon = Wrapper(_sass_icons_download_ic_download_svg__WEBPACK_IMPORTED_MODULE_49___default.a);\nvar PositionLeftIcon = Wrapper(_sass_icons_chart_settings_setting_ic_position_left_svg__WEBPACK_IMPORTED_MODULE_50___default.a);\nvar PositionBottomIcon = Wrapper(_sass_icons_chart_settings_setting_ic_position_bottom_svg__WEBPACK_IMPORTED_MODULE_51___default.a);\nvar BackIcon = Wrapper(_sass_icons_back_ic_back_svg__WEBPACK_IMPORTED_MODULE_52___default.a);\nvar HomeIcon = Wrapper(_sass_icons_navigation_widgets_ic_home_svg__WEBPACK_IMPORTED_MODULE_58___default.a);\nvar ScaleIcon = Wrapper(_sass_icons_navigation_widgets_ic_scale_full_svg__WEBPACK_IMPORTED_MODULE_59___default.a);\nvar ZoominIcon = Wrapper(_sass_icons_navigation_widgets_ic_zoomin_svg__WEBPACK_IMPORTED_MODULE_60___default.a);\nvar ZoomoutIcon = Wrapper(_sass_icons_navigation_widgets_ic_zoomout_svg__WEBPACK_IMPORTED_MODULE_61___default.a);\nvar MetalIcon = Wrapper(_sass_icons_active_symbols_metals_ic_metal_svg__WEBPACK_IMPORTED_MODULE_92___default.a);\nvar ArrowGreenIcon = Wrapper(_sass_icons_arrows_ic_arrow_green_svg__WEBPACK_IMPORTED_MODULE_62___default.a);\nvar ArrowOrangeIcon = Wrapper(_sass_icons_arrows_ic_arrow_orange_svg__WEBPACK_IMPORTED_MODULE_63___default.a);\nvar alertIconMap = {\n  info: Wrapper(_sass_icons_alert_message_info_svg__WEBPACK_IMPORTED_MODULE_57___default.a),\n  success: Wrapper(_sass_icons_alert_message_success_svg__WEBPACK_IMPORTED_MODULE_56___default.a),\n  warning: Wrapper(_sass_icons_alert_message_warning_svg__WEBPACK_IMPORTED_MODULE_54___default.a),\n  error: Wrapper(_sass_icons_alert_message_error_svg__WEBPACK_IMPORTED_MODULE_55___default.a)\n};\nvar SymbolPlaceholderIcon = Wrapper(_sass_icons_placeholder_ic_placeholder_svg__WEBPACK_IMPORTED_MODULE_64___default.a);\nvar CategoryIconMap = {\n  active: Wrapper(_sass_icons_sidebar_active_ic_active_normal_svg__WEBPACK_IMPORTED_MODULE_39___default.a),\n  commodities: Wrapper(_sass_icons_sidebar_commodities_ic_commodities_normal_svg__WEBPACK_IMPORTED_MODULE_40___default.a),\n  favorite: Wrapper(_sass_icons_favorite_ic_favorite_normal_svg__WEBPACK_IMPORTED_MODULE_35___default.a),\n  forex: Wrapper(_sass_icons_sidebar_forex_ic_forex_normal_svg__WEBPACK_IMPORTED_MODULE_41___default.a),\n  indices: Wrapper(_sass_icons_sidebar_indices_ic_indices_normal_svg__WEBPACK_IMPORTED_MODULE_42___default.a),\n  stocks: Wrapper(_sass_icons_sidebar_otc_ic_otc_normal_svg__WEBPACK_IMPORTED_MODULE_43___default.a),\n  volidx: Wrapper(_sass_icons_sidebar_volatility_ic_volatility_normal_svg__WEBPACK_IMPORTED_MODULE_45___default.a),\n  synthetic_index: Wrapper(_sass_icons_sidebar_synth_index_ic_synth_normal_svg__WEBPACK_IMPORTED_MODULE_44___default.a),\n  indicators: Wrapper(_sass_icons_chart_settings_indicators_ic_indicator_normal_svg__WEBPACK_IMPORTED_MODULE_32___default.a)\n};\nvar FlagIconMap = {\n  AUD: Wrapper(_sass_icons_flags_aud_svg__WEBPACK_IMPORTED_MODULE_65___default.a),\n  CAD: Wrapper(_sass_icons_flags_cad_svg__WEBPACK_IMPORTED_MODULE_66___default.a),\n  CHF: Wrapper(_sass_icons_flags_chf_svg__WEBPACK_IMPORTED_MODULE_67___default.a),\n  EUR: Wrapper(_sass_icons_flags_eur_svg__WEBPACK_IMPORTED_MODULE_68___default.a),\n  GBP: Wrapper(_sass_icons_flags_gbp_svg__WEBPACK_IMPORTED_MODULE_69___default.a),\n  JPY: Wrapper(_sass_icons_flags_jpy_svg__WEBPACK_IMPORTED_MODULE_70___default.a),\n  MXN: Wrapper(_sass_icons_flags_mxn_svg__WEBPACK_IMPORTED_MODULE_71___default.a),\n  NOK: Wrapper(_sass_icons_flags_nok_svg__WEBPACK_IMPORTED_MODULE_72___default.a),\n  NZD: Wrapper(_sass_icons_flags_nzd_svg__WEBPACK_IMPORTED_MODULE_73___default.a),\n  PLN: Wrapper(_sass_icons_flags_pln_svg__WEBPACK_IMPORTED_MODULE_74___default.a),\n  SEK: Wrapper(_sass_icons_flags_sek_svg__WEBPACK_IMPORTED_MODULE_75___default.a),\n  USD: Wrapper(_sass_icons_flags_usd_svg__WEBPACK_IMPORTED_MODULE_76___default.a),\n  HongKong: Wrapper(_sass_icons_flags_hong_kong_svg__WEBPACK_IMPORTED_MODULE_86___default.a),\n  Dutch: Wrapper(_sass_icons_flags_dutch_svg__WEBPACK_IMPORTED_MODULE_88___default.a),\n  German: Wrapper(_sass_icons_flags_german_svg__WEBPACK_IMPORTED_MODULE_85___default.a),\n  French: Wrapper(_sass_icons_flags_french_svg__WEBPACK_IMPORTED_MODULE_87___default.a),\n  Spanish: Wrapper(_sass_icons_flags_spanish_svg__WEBPACK_IMPORTED_MODULE_89___default.a),\n  WallStreet: Wrapper(_sass_icons_flags_wallstreet_svg__WEBPACK_IMPORTED_MODULE_90___default.a)\n};\nvar FlagIcons = {\n  USD: Wrapper(_sass_icons_flags_usd_svg__WEBPACK_IMPORTED_MODULE_76___default.a),\n  German: Wrapper(_sass_icons_flags_german_svg__WEBPACK_IMPORTED_MODULE_85___default.a),\n  French: Wrapper(_sass_icons_flags_french_svg__WEBPACK_IMPORTED_MODULE_87___default.a),\n  Portugal: Wrapper(_sass_icons_flags_portugal_svg__WEBPACK_IMPORTED_MODULE_77___default.a),\n  Russia: Wrapper(_sass_icons_flags_russia_svg__WEBPACK_IMPORTED_MODULE_78___default.a),\n  Thailand: Wrapper(_sass_icons_flags_thailand_svg__WEBPACK_IMPORTED_MODULE_79___default.a),\n  Indonesia: Wrapper(_sass_icons_flags_indonesia_svg__WEBPACK_IMPORTED_MODULE_80___default.a),\n  Vietnam: Wrapper(_sass_icons_flags_vietnam_svg__WEBPACK_IMPORTED_MODULE_81___default.a),\n  Italy: Wrapper(_sass_icons_flags_italy_svg__WEBPACK_IMPORTED_MODULE_82___default.a),\n  Chinese: Wrapper(_sass_icons_flags_chinese_svg__WEBPACK_IMPORTED_MODULE_83___default.a),\n  ChineseTraditional: Wrapper(_sass_icons_flags_chinese_traditional_svg__WEBPACK_IMPORTED_MODULE_84___default.a),\n  Poland: Wrapper(_sass_icons_flags_pln_svg__WEBPACK_IMPORTED_MODULE_74___default.a),\n  Spanish: Wrapper(_sass_icons_flags_spanish_svg__WEBPACK_IMPORTED_MODULE_89___default.a)\n};\nvar ItemIconMap = {\n  SPC: FlagIconMap.USD,\n  AS51: FlagIconMap.AUD,\n  HSI: FlagIconMap.HongKong,\n  N225: FlagIconMap.JPY,\n  AEX: FlagIconMap.Dutch,\n  FCHI: FlagIconMap.French,\n  SSMI: FlagIconMap.CHF,\n  GDAXI: FlagIconMap.German,\n\n  /* Commodities */\n  frxBROUSD: Wrapper(_sass_icons_active_symbols_energy_oil_usd_ic_oilusd_svg__WEBPACK_IMPORTED_MODULE_91___default.a),\n  frxXAUUSD: MetalIcon,\n  frxXPDUSD: MetalIcon,\n  frxXPTUSD: MetalIcon,\n  frxXAGUSD: MetalIcon,\n\n  /* Volatility Indices */\n  R_10: Wrapper(_sass_icons_active_symbols_volatility_10_index_ic_10_index_svg__WEBPACK_IMPORTED_MODULE_93___default.a),\n  R_25: Wrapper(_sass_icons_active_symbols_volatility_25_index_ic_25_index_svg__WEBPACK_IMPORTED_MODULE_94___default.a),\n  R_50: Wrapper(_sass_icons_active_symbols_volatility_50_index_ic_50_index_svg__WEBPACK_IMPORTED_MODULE_95___default.a),\n  R_75: Wrapper(_sass_icons_active_symbols_volatility_75_index_ic_75_index_svg__WEBPACK_IMPORTED_MODULE_96___default.a),\n  R_100: Wrapper(_sass_icons_active_symbols_volatility_100_index_ic_100_index_svg__WEBPACK_IMPORTED_MODULE_97___default.a),\n  '1HZ10V': Wrapper(_sass_icons_active_symbols_volatility_1s10_index_ic_10_1s_index_svg__WEBPACK_IMPORTED_MODULE_98___default.a),\n  '1HZ100V': Wrapper(_sass_icons_active_symbols_volatility_1s100_index_ic_100_1s_index_svg__WEBPACK_IMPORTED_MODULE_99___default.a),\n  RDBEAR: Wrapper(_sass_icons_active_symbols_volatility_bear_market_ic_marketbear_svg__WEBPACK_IMPORTED_MODULE_100___default.a),\n  RDBULL: Wrapper(_sass_icons_active_symbols_volatility_bull_market_ic_marketbull_svg__WEBPACK_IMPORTED_MODULE_101___default.a)\n};\n\nfunction createCompositeIcon(A, B, icId) {\n  return function (props) {\n    var className = props.className,\n        p = _objectWithoutProperties(props, [\"className\"]);\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", _extends({\n      className: \"\".concat(icId, \" \").concat(className)\n    }, p), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(A, null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(B, null));\n  };\n}\n\nfunction frx(flagA, flagB) {\n  var A = FlagIconMap[flagA];\n  var B = FlagIconMap[flagB];\n  ItemIconMap[\"frx\".concat(flagA).concat(flagB)] = createCompositeIcon(A, B, 'ic-frx');\n}\n\nvar OTCBadgeIcon = Wrapper(_sass_icons_active_symbols_ic_otcbadge_svg__WEBPACK_IMPORTED_MODULE_102___default.a);\nvar SmartFXIcon = Wrapper(_sass_icons_active_symbols_ic_smartfx_placeholder_svg__WEBPACK_IMPORTED_MODULE_103___default.a);\n\nfunction otc(flag, symbol) {\n  var FlagIcon = FlagIconMap[flag];\n  ItemIconMap[symbol] = createCompositeIcon(FlagIcon, OTCBadgeIcon, 'ic-otc');\n}\n\nfunction wld(flag) {\n  var FlagIcon = FlagIconMap[flag];\n  ItemIconMap[\"WLD\".concat(flag)] = createCompositeIcon(SmartFXIcon, FlagIcon, 'ic-wld');\n}\n/* FOREX */\n\n/* Major Pairs */\n\n\nfrx('AUD', 'JPY');\nfrx('AUD', 'USD');\nfrx('EUR', 'AUD');\nfrx('EUR', 'CHF');\nfrx('EUR', 'JPY');\nfrx('EUR', 'CAD');\nfrx('EUR', 'GBP');\nfrx('EUR', 'USD');\nfrx('GBP', 'AUD');\nfrx('GBP', 'JPY');\nfrx('GBP', 'USD');\nfrx('USD', 'CAD');\nfrx('USD', 'CHF');\nfrx('USD', 'JPY');\n/* Minor Pairs */\n\nfrx('AUD', 'CAD');\nfrx('AUD', 'CHF');\nfrx('AUD', 'NZD');\nfrx('AUD', 'PLN');\nfrx('EUR', 'NZD');\nfrx('GBP', 'CAD');\nfrx('GBP', 'CHF');\nfrx('GBP', 'NOK');\nfrx('GBP', 'NZD');\nfrx('GBP', 'PLN');\nfrx('NZD', 'JPY');\nfrx('NZD', 'USD');\nfrx('USD', 'MXN');\nfrx('USD', 'NOK');\nfrx('USD', 'PLN');\nfrx('USD', 'SEK');\n/* Smart FX */\n\nwld('AUD');\nwld('EUR');\nwld('GBP');\nwld('USD');\n/* OTC Indicies */\n\notc('Dutch', 'OTC_AEX');\notc('GBP', 'OTC_FTSE');\notc('EUR', 'OTC_SX5E');\notc('French', 'OTC_FCHI');\notc('German', 'OTC_GDAXI');\notc('JPY', 'OTC_N225');\notc('Spanish', 'OTC_IBEX35');\notc('USD', 'OTC_SPC');\notc('WallStreet', 'OTC_DJI');\notc('USD', 'OTC_NDX');\notc('CHF', 'OTC_SSMI');\notc('HongKong', 'OTC_HSI');\notc('AUD', 'OTC_AS51');\nvar ActiveOptionsIconMap = {\n  \"delete\": DeleteIcon,\n  edit: EditIcon\n};\n\n/***/ }),\n\n/***/ \"./src/components/LastDigitStats.jsx\":\n/*!*******************************************!*\\\n  !*** ./src/components/LastDigitStats.jsx ***!\n  \\*******************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _sass_components_last_digits_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../sass/components/_last-digits.scss */ \"./sass/components/_last-digits.scss\");\n/* harmony import */ var _sass_components_last_digits_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_sass_components_last_digits_scss__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nvar Bar = function Bar(_ref) {\n  var x = _ref.x,\n      bar = _ref.bar;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-bar \".concat(bar.cName),\n    style: {\n      height: \"\".concat(bar.height * 5, \"%\"),\n      left: x * 35\n    }\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-bar-value \".concat(bar.height && 'show')\n  }, \"\".concat(bar.height.toFixed(1), \"%\")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"cq-bar-title\"\n  }, x));\n};\n\nvar LastDigitStats = function LastDigitStats(_ref2) {\n  var isVisible = _ref2.isVisible,\n      bars = _ref2.bars,\n      marketDisplayName = _ref2.marketDisplayName,\n      shouldMinimiseLastDigits = _ref2.shouldMinimiseLastDigits;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-last-digits \".concat(isVisible ? 'show' : '', \" \").concat(shouldMinimiseLastDigits ? 'minimised' : '')\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-bars\"\n  }, bars.map(function (bar, idx) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Bar, {\n      key: \"bar-\".concat(idx) // eslint-disable-line react/no-array-index-key\n      ,\n      x: idx,\n      bar: bar\n    });\n  })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-bar-footer\"\n  }, t.translate('Last digits stats for latest 1000 ticks on ') + marketDisplayName));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function (_ref3) {\n  var l = _ref3.lastDigitStats;\n  return {\n    isVisible: l.isVisible,\n    bars: l.bars,\n    marketDisplayName: l.marketDisplayName,\n    changeSymbol: l.changeSymbol,\n    shouldMinimiseLastDigits: l.shouldMinimiseLastDigits\n  };\n})(LastDigitStats));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/List.jsx\":\n/*!*********************************!*\\\n  !*** ./src/components/List.jsx ***!\n  \\*********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tt-react-custom-scrollbars */ \"./node_modules/tt-react-custom-scrollbars/lib/index.js\");\n/* harmony import */ var tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _sass_components_ciq_list_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../sass/components/_ciq-list.scss */ \"./sass/components/_ciq-list.scss\");\n/* harmony import */ var _sass_components_ciq_list_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_sass_components_ciq_list_scss__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nvar List = function List(_ref) {\n  var height = _ref.height,\n      items = _ref.items,\n      onItemClick = _ref.onItemClick,\n      children = _ref.children;\n  var hasFunctionAsChildren = typeof children === 'function';\n  var renderRow = hasFunctionAsChildren ? children : function (item) {\n    return item.text;\n  };\n\n  var itemClassName = function itemClassName(it) {\n    return 'ciq-list-item' + \" \".concat(it.disabled ? 'disabled' : '') + \" \".concat(it.active ? 'active' : '');\n  };\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_1___default.a, {\n    className: \"ciq-list\",\n    autoHeight: true,\n    autoHide: true,\n    style: height && {\n      height: \"\".concat(height, \"px\")\n    }\n  }, items.map(function (it, idx) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      key: it.id,\n      className: itemClassName(it),\n      onClick: function onClick() {\n        return onItemClick(idx, it);\n      }\n    }, renderRow(it));\n  }));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (List);\n\n/***/ }),\n\n/***/ \"./src/components/Loader.jsx\":\n/*!***********************************!*\\\n  !*** ./src/components/Loader.jsx ***!\n  \\***********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n\n\n\nvar Loader = function Loader(_ref) {\n  var isActive = _ref.isActive,\n      currentState = _ref.currentState;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-loader \".concat(isActive ? 'show' : '')\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-loader-spin\"\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-loader-status\"\n  }, currentState));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function (_ref2) {\n  var l = _ref2.loader;\n  return {\n    isActive: l.isActive,\n    currentState: l.currentState\n  };\n})(Loader));\n\n/***/ }),\n\n/***/ \"./src/components/MarketOpeningTimeCounter.jsx\":\n/*!*****************************************************!*\\\n  !*** ./src/components/MarketOpeningTimeCounter.jsx ***!\n  \\*****************************************************/\n/*! exports provided: MarketOpeningTimeCounter */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarketOpeningTimeCounter\", function() { return MarketOpeningTimeCounter; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/index */ \"./src/utils/index.js\");\n/* harmony import */ var _utils_ServerTime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/ServerTime */ \"./src/utils/ServerTime.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\nvar MarketOpeningTimeCounter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MarketOpeningTimeCounter, _React$Component);\n\n  function MarketOpeningTimeCounter(props) {\n    var _this;\n\n    _classCallCheck(this, MarketOpeningTimeCounter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarketOpeningTimeCounter).call(this, props));\n    _this.serverTime = _utils_ServerTime__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n    _this.state = {\n      time: _this.serverTime.getLocalDate().getTime()\n    };\n    return _this;\n  }\n\n  _createClass(MarketOpeningTimeCounter, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.timerInterval = setInterval(function () {\n        return _this2.tick();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timerInterval);\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      this.setState({\n        time: this.serverTime.getLocalDate().getTime()\n      });\n    } // 86400000 = 24 hour * 60 min * 60s * 1000ms\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var timeUntilOpenTime = null;\n      var symbolOpenTime = this.props.symbolOpenTime.symbolOpenTime || {};\n      var openTime = symbolOpenTime.openTime || null;\n\n      if (openTime) {\n        timeUntilOpenTime = Object(_utils_index__WEBPACK_IMPORTED_MODULE_1__[\"displayMilliseconds\"])(openTime.getTime() - this.state.time);\n      }\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, timeUntilOpenTime);\n    }\n  }]);\n\n  return MarketOpeningTimeCounter;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n/***/ }),\n\n/***/ \"./src/components/Menu.jsx\":\n/*!*********************************!*\\\n  !*** ./src/components/Menu.jsx ***!\n  \\*********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_transition_group__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-transition-group */ \"react-transition-group\");\n/* harmony import */ var react_transition_group__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_transition_group__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _MenuMobile_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MenuMobile.jsx */ \"./src/components/MenuMobile.jsx\");\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Menu, _Component);\n\n  function Menu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Menu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onOverlayClick = function (e) {\n      if (e.target.className === 'cq-menu-overlay') {\n        _this.props.setOpen(false);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          className = _this$props.className,\n          children = _this$props.children,\n          title = _this$props.title,\n          onTitleClick = _this$props.onTitleClick,\n          DropdownDialog = _this$props.DropdownDialog,\n          isMobile = _this$props.isMobile,\n          isFullscreen = _this$props.isFullscreen,\n          modalNode = _this$props.modalNode,\n          portalNodeId = _this$props.portalNodeId,\n          _this$props$enabled = _this$props.enabled,\n          enabled = _this$props$enabled === void 0 ? true : _this$props$enabled,\n          shouldRenderDialogs = _this$props.shouldRenderDialogs,\n          onMouseEnter = _this$props.onMouseEnter,\n          onMouseLeave = _this$props.onMouseLeave,\n          newStyle = _this$props.newStyle;\n      var first = react__WEBPACK_IMPORTED_MODULE_0___default.a.Children.map(children, function (child, i) {\n        return i === 0 ? child : null;\n      });\n      var rest = react__WEBPACK_IMPORTED_MODULE_0___default.a.Children.map(children, function (child, i) {\n        return i !== 0 ? child : null;\n      });\n\n      if (newStyle) {\n        var newDropdown = shouldRenderDialogs && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(DropdownDialog, {\n          className: \"cq-dialog\",\n          isMobile: isMobile,\n          isFullscreen: isFullscreen,\n          title: title,\n          enableOverlay: true\n        }, rest);\n        var newDialog = isMobile && modalNode && react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.createPortal(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"cq-modal-dropdown \".concat(className || '', \" \").concat(open ? 'stxMenuActive' : '')\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"cq-menu-overlay\",\n          onClick: this.onOverlayClick\n        }, newDropdown)), modalNode) || newDropdown;\n        return enabled && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"ciq-menu ciq-enabled \".concat(className || '', \" \").concat(open ? 'stxMenuActive' : '')\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"cq-menu-btn\",\n          onMouseEnter: onMouseEnter,\n          onMouseLeave: onMouseLeave,\n          onClick: onTitleClick\n        }, first), open ? newDialog : '') || react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"ciq-menu ciq-disabled \".concat(className || '')\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"cq-menu-btn\",\n          onMouseEnter: onMouseEnter,\n          onMouseLeave: onMouseLeave\n        }, first));\n      }\n\n      var oldDropdown = shouldRenderDialogs && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_transition_group__WEBPACK_IMPORTED_MODULE_2__[\"CSSTransition\"], {\n        \"in\": open,\n        timeout: 150,\n        classNames: \"cq-menu-dropdown\",\n        unmountOnExit: true\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(DropdownDialog, {\n        className: \"cq-menu-dropdown\",\n        isMobile: isMobile,\n        isFullscreen: isFullscreen\n      }, title && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"title\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"title-text\"\n      }, title), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_4__[\"CloseIcon\"], {\n        className: \"icon-close-menu\",\n        onClick: onTitleClick\n      })), rest));\n      return enabled && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"ciq-menu ciq-enabled \".concat(className || '', \" \").concat(open ? 'stxMenuActive' : '')\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"cq-menu-btn\",\n        onMouseEnter: onMouseEnter,\n        onMouseLeave: onMouseLeave,\n        onClick: onTitleClick\n      }, first), isMobile && (portalNodeId || modalNode) && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_MenuMobile_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        className: className,\n        open: open,\n        menu_element: oldDropdown,\n        portalNodeId: portalNodeId,\n        onClick: this.onOverlayClick\n      }) || oldDropdown) || react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"ciq-menu ciq-disabled \".concat(className || '')\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"cq-menu-btn\",\n        onMouseEnter: onMouseEnter,\n        onMouseLeave: onMouseLeave\n      }, first));\n    }\n  }]);\n\n  return Menu;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\nMenu.Title = function (_ref) {\n  var children = _ref.children;\n  return children;\n};\n\nMenu.Body = function (_ref2) {\n  var children = _ref2.children;\n  return children;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Menu);\n\n/***/ }),\n\n/***/ \"./src/components/MenuMobile.jsx\":\n/*!***************************************!*\\\n  !*** ./src/components/MenuMobile.jsx ***!\n  \\***************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _sass_components_menu_dropdown_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../sass/components/_menu-dropdown.scss */ \"./sass/components/_menu-dropdown.scss\");\n/* harmony import */ var _sass_components_menu_dropdown_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_sass_components_menu_dropdown_scss__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nvar MenuMobile = function MenuMobile(_ref) {\n  var className = _ref.className,\n      menu_element = _ref.menu_element,\n      portalNodeId = _ref.portalNodeId,\n      open = _ref.open,\n      onClick = _ref.onClick,\n      theme = _ref.theme;\n\n  // fix to remove body background scrolling when scrolling on absolute element\n  var disableBodyScroll = function disableBodyScroll() {\n    if (open) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = null;\n    }\n  };\n\n  disableBodyScroll();\n  if (!portalNodeId) return menu_element;\n  return react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.createPortal(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"smartcharts-portal \".concat(open ? 'smartcharts-portal--open' : '')\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"smartcharts smartcharts-\".concat(theme)\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"smartcharts-mobile\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-modal-dropdown \".concat(className || '', \" \").concat(open ? 'stxMenuActive' : '')\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-menu-overlay\",\n    onClick: onClick\n  }, menu_element))))), document.getElementById(portalNodeId));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function (_ref2) {\n  var chartSetting = _ref2.chartSetting;\n  return {\n    theme: chartSetting.theme\n  };\n})(MenuMobile));\n\n/***/ }),\n\n/***/ \"./src/components/NavigationWidget.jsx\":\n/*!*********************************************!*\\\n  !*** ./src/components/NavigationWidget.jsx ***!\n  \\*********************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _sass_components_ciq_navigation_widget_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../sass/components/_ciq-navigation-widget.scss */ \"./sass/components/_ciq-navigation-widget.scss\");\n/* harmony import */ var _sass_components_ciq_navigation_widget_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_sass_components_ciq_navigation_widget_scss__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n\n\n\n\n\nvar NavigationWidget = function NavigationWidget(_ref) {\n  var zoomIn = _ref.zoomIn,\n      zoomOut = _ref.zoomOut,\n      home = _ref.home,\n      onScale = _ref.onScale,\n      isHomeEnabled = _ref.isHomeEnabled,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseLeave = _ref.onMouseLeave;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-navigation-widget\",\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-navigation-widget__item \".concat(!isHomeEnabled ? 'ciq-navigation-widget__item--hidden' : ''),\n    onClick: home\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"HomeIcon\"], null)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-navigation-widget__item\",\n    onClick: onScale\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"ScaleIcon\"], null)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-navigation-widget__item ciq-navigation-widget__item--zoom\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"ZoominIcon\"], {\n    onClick: zoomIn\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"ZoomoutIcon\"], {\n    onClick: zoomOut\n  })));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function (_ref2) {\n  var chartSize = _ref2.chartSize,\n      navigationWidget = _ref2.navigationWidget;\n  return {\n    zoomIn: chartSize.zoomIn,\n    zoomOut: chartSize.zoomOut,\n    home: navigationWidget.onHome,\n    onScale: navigationWidget.onScale,\n    isHomeEnabled: navigationWidget.isHomeEnabled,\n    onMouseEnter: navigationWidget.onMouseEnter,\n    onMouseLeave: navigationWidget.onMouseLeave\n  };\n})(NavigationWidget));\n\n/***/ }),\n\n/***/ \"./src/components/NotificationBadge.jsx\":\n/*!**********************************************!*\\\n  !*** ./src/components/NotificationBadge.jsx ***!\n  \\**********************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar NotificationBadge = function NotificationBadge(_ref) {\n  var notificationCount = _ref.notificationCount;\n  if (!notificationCount) return null;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"notification-badge \".concat(notificationCount > 9 ? 'x2' : '')\n  }, notificationCount);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (NotificationBadge);\n\n/***/ }),\n\n/***/ \"./src/components/PaginationLoader.jsx\":\n/*!*********************************************!*\\\n  !*** ./src/components/PaginationLoader.jsx ***!\n  \\*********************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _FastMarker_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FastMarker.jsx */ \"./src/components/FastMarker.jsx\");\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _sass_components_pagination_loader_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../sass/components/_pagination-loader.scss */ \"./sass/components/_pagination-loader.scss\");\n/* harmony import */ var _sass_components_pagination_loader_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_sass_components_pagination_loader_scss__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nvar PaginationLoader = function PaginationLoader(_ref) {\n  var isOnPagination = _ref.isOnPagination,\n      setRef = _ref.setRef;\n  return isOnPagination ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_FastMarker_jsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n    markerRef: setRef,\n    className: \"pagination\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"pagination__loader\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"pagination__loader-background\"\n  }))) : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function (_ref2) {\n  var s = _ref2.paginationLoader;\n  return {\n    isOnPagination: s.isOnPagination,\n    setRef: s.setRef\n  };\n})(PaginationLoader));\n\n/***/ }),\n\n/***/ \"./src/components/PriceLine.jsx\":\n/*!**************************************!*\\\n  !*** ./src/components/PriceLine.jsx ***!\n  \\**************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _PriceLineArrow_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PriceLineArrow.jsx */ \"./src/components/PriceLineArrow.jsx\");\n/* harmony import */ var _PriceLineTitle_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PriceLineTitle.jsx */ \"./src/components/PriceLineTitle.jsx\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\nvar PriceLine =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PriceLine, _Component);\n\n  function PriceLine() {\n    _classCallCheck(this, PriceLine);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PriceLine).apply(this, arguments));\n  }\n\n  _createClass(PriceLine, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.init();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          draggable = _this$props.draggable,\n          isDragging = _this$props.isDragging,\n          priceDisplay = _this$props.priceDisplay,\n          setDragLine = _this$props.setDragLine,\n          visible = _this$props.visible,\n          lineStyle = _this$props.lineStyle,\n          color = _this$props.color,\n          foregroundColor = _this$props.foregroundColor,\n          width = _this$props.width,\n          title = _this$props.title,\n          yAxiswidth = _this$props.yAxiswidth,\n          offScreen = _this$props.offScreen,\n          hideBarrierLine = _this$props.hideBarrierLine,\n          hideOffscreenBarrier = _this$props.hideOffscreenBarrier,\n          hideOffscreenLine = _this$props.hideOffscreenLine,\n          offScreenDirection = _this$props.offScreenDirection,\n          opacityOnOverlap = _this$props.opacityOnOverlap,\n          isOverlapping = _this$props.isOverlapping;\n      var showBarrier = !(hideOffscreenBarrier && offScreen);\n      var showBarrierDragLine = !hideBarrierLine && (!hideOffscreenLine || !offScreen) && !isOverlapping;\n      var opacity = isOverlapping && opacityOnOverlap;\n      return showBarrier && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"chart-line horizontal \".concat(draggable ? 'draggable' : '', \" \").concat(isDragging ? 'dragging' : '', \" \").concat(className || ''),\n        style: {\n          top: 0,\n          color: foregroundColor,\n          borderColor: color\n        },\n        ref: setDragLine,\n        hidden: !visible\n      }, showBarrierDragLine && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"drag-line\",\n        style: {\n          borderTopStyle: lineStyle\n        }\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"draggable-area\"\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"drag-price\",\n        style: {\n          backgroundColor: color,\n          width: width,\n          opacity: opacity\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"price\"\n      }, priceDisplay), offScreen && offScreenDirection && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_PriceLineArrow_jsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        offScreenDirection: offScreenDirection,\n        color: color\n      })), title && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_PriceLineTitle_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        color: color,\n        title: title,\n        yAxiswidth: yAxiswidth,\n        opacity: opacity\n      }));\n    }\n  }]);\n\n  return PriceLine;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (PriceLine);\n\n/***/ }),\n\n/***/ \"./src/components/PriceLineArrow.jsx\":\n/*!*******************************************!*\\\n  !*** ./src/components/PriceLineArrow.jsx ***!\n  \\*******************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\n\n\n\n\nvar PriceLineArrow = function PriceLineArrow(_ref) {\n  var offScreenDirection = _ref.offScreenDirection,\n      color = _ref.color;\n  var top = offScreenDirection === _utils__WEBPACK_IMPORTED_MODULE_2__[\"DIRECTIONS\"].UP && \"\".concat(-_utils__WEBPACK_IMPORTED_MODULE_2__[\"ARROW_HEIGHT\"], \"px\");\n  var transform = offScreenDirection === _utils__WEBPACK_IMPORTED_MODULE_2__[\"DIRECTIONS\"].DOWN && 'rotate(180deg)';\n  return color === _utils__WEBPACK_IMPORTED_MODULE_2__[\"ARROW_COLORS\"].GREEN ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"ArrowGreenIcon\"], {\n    className: \"arrow-icon\",\n    style: {\n      top: top,\n      transform: transform\n    }\n  }) : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"ArrowOrangeIcon\"], {\n    className: \"arrow-icon\",\n    style: {\n      top: top,\n      transform: transform\n    }\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (PriceLineArrow);\n\n/***/ }),\n\n/***/ \"./src/components/PriceLineTitle.jsx\":\n/*!*******************************************!*\\\n  !*** ./src/components/PriceLineTitle.jsx ***!\n  \\*******************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar PriceLineTitle = function PriceLineTitle(_ref) {\n  var color = _ref.color,\n      yAxiswidth = _ref.yAxiswidth,\n      title = _ref.title,\n      opacity = _ref.opacity;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"title-wrapper\",\n    style: {\n      color: color,\n      right: yAxiswidth,\n      opacity: opacity\n    }\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"title\"\n  }, title));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (PriceLineTitle);\n\n/***/ }),\n\n/***/ \"./src/components/RawMarker.jsx\":\n/*!**************************************!*\\\n  !*** ./src/components/RawMarker.jsx ***!\n  \\**************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\nvar RawMarker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RawMarker, _React$Component);\n\n  function RawMarker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RawMarker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RawMarker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.price = null;\n    _this.date = null;\n    _this.elem = null;\n    _this.ctx = null;\n    _this.stx = null;\n    _this.injectionId = null;\n    _this.hasUnmountedBeforeInjection = false;\n    _this.canvas_height = 0;\n\n    _this.draw = function () {\n      if (!_this.ctx) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          _this$props$threshold = _this$props.threshold,\n          threshold = _this$props$threshold === void 0 ? 0 : _this$props$threshold,\n          epoch_array = _this$props.epoch_array,\n          draw_callback = _this$props.draw_callback,\n          _this$props$price_arr = _this$props.price_array,\n          price_array = _this$props$price_arr === void 0 ? [] : _this$props$price_arr;\n\n      if (!_this.last_epoch_array || _this.last_epoch_array.toString() !== epoch_array.toString()) {\n        _this.date_array = epoch_array.map(function (epoch) {\n          return {\n            date: CIQ.strToDateTime(Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"getUTCDate\"])(epoch)),\n            epoch: epoch\n          };\n        });\n        _this.last_epoch_array = epoch_array;\n      }\n\n      var stx = _this.stx;\n      var chart = stx.chart;\n      var show = !threshold || stx.layout.candleWidth >= threshold;\n\n      if (show && chart.dataSet && chart.dataSet.length && stx.mainSeriesRenderer) {\n        var points = [];\n\n        _this.date_array.forEach(function (_ref) {\n          var date = _ref.date,\n              epoch = _ref.epoch;\n          var tick_idx = stx.tickFromDate(date, chart); // ChartIQ doesn't support placing markers in the middle of ticks.\n\n          var bar = chart.dataSet[tick_idx];\n          var bar_next = chart.dataSet[tick_idx + 1];\n          var bar_prev = tick_idx > 0 ? chart.dataSet[tick_idx - 1] : null;\n          var x = stx.pixelFromTick(tick_idx, chart); // let x = pixelFromTick(stx, tick_idx);\n\n          var price = bar ? bar.Close : null; // const price = (bar || bar_prev || bar_next || {}).Close;\n          // Here we interpolate the pixel distance between two adjacent ticks.\n\n          if (bar && bar.DT < date) {\n            if (bar_next && bar_next.Close && bar_next.DT > date) {\n              var delta_x = stx.pixelFromTick(tick_idx + 1, chart) - x; // const delta_x = pixelFromTick(stx, tick_idx + 1) - x;\n\n              var delta_y = bar_next.Close - price;\n              var ratio = (date - bar.DT) / (bar_next.DT - bar.DT);\n              price += ratio * delta_y;\n              x += ratio * delta_x;\n            } else if (bar_prev && bar_prev.Close) {\n              var _delta_x = x - stx.pixelFromTick(tick_idx - 1, chart); // const delta_x = x - pixelFromTick(stx, tick_idx - 1);\n\n\n              var _delta_y = price - bar_prev.Close;\n\n              var _ratio = (date - bar.DT) / (bar.DT - bar_prev.DT);\n\n              x += _ratio * _delta_x;\n              price += _ratio * _delta_y;\n            }\n          }\n\n          var y = price ? stx.pixelFromPrice(price, chart.panel) : 0;\n          var visible = x >= 0 && chart.yAxis.left > x && chart.yAxis.top <= y && chart.yAxis.bottom >= y;\n          var yAxis = chart.yAxis;\n          var top = Math.min(Math.max(+y, yAxis.top), yAxis.bottom);\n          var left = Math.min(Math.max(x, 0), yAxis.left);\n          var zoom = stx.layout.candleWidth;\n          points.push({\n            epoch: epoch,\n            visible: visible,\n            top: top,\n            left: left,\n            zoom: zoom,\n            max_left: yAxis.left\n          });\n        });\n\n        var prices = price_array.map(function (price) {\n          return stx.pixelFromPrice(price * 1, chart.panel);\n        });\n        var canvas = stx.chart.context.canvas;\n\n        if (\"\".concat(canvas.height) !== canvas.style.height.replace('px', '')) {\n          _this.canvas_height = canvas.height;\n        }\n\n        draw_callback({\n          ctx: stx.chart.context,\n          canvas_height: _this.canvas_height,\n          points: points,\n          prices: prices\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(RawMarker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var contextPromise = this.props.contextPromise;\n      contextPromise.then(function (ctx) {\n        if (_this2.hasUnmountedBeforeInjection) {\n          return;\n        }\n\n        _this2.ctx = ctx;\n        _this2.stx = _this2.ctx.stx;\n        _this2.injectionId = _this2.stx.append('draw', _this2.draw);\n\n        _this2.draw();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.injectionId) {\n        // remove the injection on unmount\n        this.stx.removeInjection(this.injectionId);\n        this.ctx = null;\n        this.stx = null;\n      } else {\n        this.hasUnmountedBeforeInjection = true;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return RawMarker;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function (_ref2) {\n  var chart = _ref2.chart;\n  return {\n    contextPromise: chart.contextPromise\n  };\n})(RawMarker));\n\n/***/ }),\n\n/***/ \"./src/components/RenderInsideChart.jsx\":\n/*!**********************************************!*\\\n  !*** ./src/components/RenderInsideChart.jsx ***!\n  \\**********************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui/utils */ \"./src/components/ui/utils.js\");\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\nvar inChartPrefix = 'cq-inchart-'; // Render given Components under stx-holder to position it relative to the active symbol chart.\n\nvar RenderInsideChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RenderInsideChart, _Component);\n\n  function RenderInsideChart(props) {\n    var _this;\n\n    _classCallCheck(this, RenderInsideChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RenderInsideChart).call(this, props));\n    var _props$at = props.at,\n        at = _props$at === void 0 ? 'holder' : _props$at,\n        contextPromise = props.contextPromise;\n    contextPromise.then(function (context) {\n      var nodeName = \"\".concat(inChartPrefix).concat(at); // reuse existing node when possible:\n\n      var elem = context.topNode.querySelector(\".\".concat(nodeName));\n\n      if (!elem) {\n        elem = Object(_ui_utils__WEBPACK_IMPORTED_MODULE_2__[\"createElement\"])(\"<div class=\\\"\".concat(nodeName, \"\\\"></div>\"));\n        context.stx.chart.panel[at].appendChild(elem);\n      }\n\n      _this.container = elem;\n\n      _this.forceUpdate(); // force render to be called after getting the container\n\n    });\n    return _this;\n  }\n\n  _createClass(RenderInsideChart, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.isChartReady) return null;\n      if (this.props.hideInScrollToEpoch && this.props.isChartScrollingToEpoch) return null;\n\n      if (this.container) {\n        return react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.createPortal(this.props.children, this.container);\n      }\n\n      return null;\n    }\n  }]);\n\n  return RenderInsideChart;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(function (_ref) {\n  var chart = _ref.chart,\n      state = _ref.state;\n  return {\n    contextPromise: chart.contextPromise,\n    isChartReady: state.isChartReady,\n    isChartScrollingToEpoch: state.isChartScrollingToEpoch\n  };\n})(RenderInsideChart));\n\n/***/ }),\n\n/***/ \"./src/components/SearchInput.jsx\":\n/*!****************************************!*\\\n  !*** ./src/components/SearchInput.jsx ***!\n  \\****************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\nvar SearchInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchInput, _Component);\n\n  function SearchInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.clearFilterText = function () {\n      _this.props.onChange('');\n    };\n\n    _this.onChange = function (e) {\n      _this.props.onChange(e.target.value);\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          value = _this$props.value,\n          searchInput = _this$props.searchInput,\n          searchInputClassName = _this$props.searchInputClassName;\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"cq-lookup-input \".concat(value.trim() !== '' ? 'active' : '')\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n        className: searchInputClassName,\n        value: value,\n        ref: searchInput,\n        onChange: this.onChange,\n        type: \"text\",\n        spellCheck: \"off\",\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        autoCapitalize: \"off\",\n        placeholder: placeholder\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"SearchIcon\"], null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"CloseCircleIcon\"], {\n        className: \"icon-reset\",\n        onClick: this.clearFilterText\n      }));\n    }\n  }]);\n\n  return SearchInput;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function (_ref) {\n  var c = _ref.chart;\n  return {\n    isMobile: c.isMobile\n  };\n})(SearchInput));\n\n/***/ }),\n\n/***/ \"./src/components/SettingsDialog.jsx\":\n/*!*******************************************!*\\\n  !*** ./src/components/SettingsDialog.jsx ***!\n  \\*******************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_tabs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-tabs */ \"./node_modules/react-tabs/esm/index.js\");\n/* harmony import */ var tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tt-react-custom-scrollbars */ \"./node_modules/tt-react-custom-scrollbars/lib/index.js\");\n/* harmony import */ var tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Form_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Form.jsx */ \"./src/components/Form.jsx\");\n/* harmony import */ var _sass_components_ciq_settings_dialog_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../sass/components/_ciq-settings-dialog.scss */ \"./sass/components/_ciq-settings-dialog.scss\");\n/* harmony import */ var _sass_components_ciq_settings_dialog_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_sass_components_ciq_settings_dialog_scss__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react_tabs_style_react_tabs_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-tabs/style/react-tabs.css */ \"./node_modules/react-tabs/style/react-tabs.css\");\n/* harmony import */ var react_tabs_style_react_tabs_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_tabs_style_react_tabs_css__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\n\nvar SettingsPanelItem = function SettingsPanelItem(_ref) {\n  var group = _ref.group,\n      title = _ref.title,\n      type = _ref.type,\n      Field = _ref.Field;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"form__group form__group--\".concat(type)\n  }, type === 'select' || type === 'colorpicker' || group === 'OverBought' || group === 'OverSold' ? '' : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"form__label\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, \" \", title, \" \")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"form__control\"\n  }, Field));\n};\n\nvar SettingsPanelGroup = function SettingsPanelGroup(_ref2) {\n  var title = _ref2.title,\n      items = _ref2.items,\n      theme = _ref2.theme,\n      onItemChange = _ref2.onItemChange;\n  var renderMap = {\n    \"switch\": function _switch(item) {\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Form_jsx__WEBPACK_IMPORTED_MODULE_3__[\"Switch\"], {\n        value: item.value,\n        onChange: function onChange(v) {\n          return onItemChange(item.id, v);\n        }\n      });\n    },\n    colorpicker: function colorpicker(item) {\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Form_jsx__WEBPACK_IMPORTED_MODULE_3__[\"ColorPicker\"], {\n        theme: theme,\n        color: item.value,\n        subtitle: item.title,\n        setColor: function setColor(value) {\n          return onItemChange(item.id, value);\n        }\n      });\n    },\n    pattern: function pattern(item) {\n      var lineWidth = items.find(function (it) {\n        return it.id === 'lineWidth';\n      }).value;\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Form_jsx__WEBPACK_IMPORTED_MODULE_3__[\"Pattern\"], {\n        pattern: item.value,\n        lineWidth: lineWidth,\n        onChange: function onChange(v) {\n          onItemChange('pattern', v.pattern);\n          onItemChange('lineWidth', v.width);\n        }\n      });\n    },\n    select: function select(item) {\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Form_jsx__WEBPACK_IMPORTED_MODULE_3__[\"DropDown\"], {\n        rows: Object.keys(item.options),\n        value: item.value,\n        subtitle: item.title,\n        onRowClick: function onRowClick(value) {\n          return onItemChange(item.id, value);\n        }\n      }, function (row) {\n        return row;\n      });\n    },\n    number: function number(item) {\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Form_jsx__WEBPACK_IMPORTED_MODULE_3__[\"Slider\"], {\n        min: item.min || 1,\n        step: item.step || 1,\n        max: item.max || 100,\n        value: item.value,\n        onChange: function onChange(val) {\n          return onItemChange(item.id, val);\n        }\n      });\n    },\n    numericinput: function numericinput(item) {\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n        className: \"ciq-num-input\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Form_jsx__WEBPACK_IMPORTED_MODULE_3__[\"NumericInput\"], {\n        value: item.value,\n        onChange: function onChange(val) {\n          return onItemChange(item.id, val);\n        },\n        min: item.min,\n        step: item.step,\n        max: item.max\n      }));\n    },\n    numbercolorpicker: function numbercolorpicker(item) {\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Form_jsx__WEBPACK_IMPORTED_MODULE_3__[\"NumberColorPicker\"], {\n        value: item.value,\n        theme: theme,\n        onChange: function onChange(val) {\n          return onItemChange(item.id, val);\n        }\n      });\n    },\n    font: function font(item) {\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Form_jsx__WEBPACK_IMPORTED_MODULE_3__[\"FontSetting\"], {\n        value: item.value,\n        onChange: function onChange(val) {\n          return onItemChange(item.id, val);\n        }\n      });\n    }\n  };\n  var input_group_name = \"form__input-group--\".concat(title.toLowerCase().replace(' ', '-'));\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"form__input-group \".concat(input_group_name)\n  }, title === 'Show Zones' ? '' : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h4\", null, title), items.map(function (item) {\n    return renderMap[item.type] && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SettingsPanelItem, {\n      key: item.id,\n      group: title,\n      type: item.type,\n      active: item.active,\n      title: item.title,\n      Field: renderMap[item.type](item)\n    });\n  }));\n};\n\nvar SettingsPanel = function SettingsPanel(_ref3) {\n  var itemGroups = _ref3.itemGroups,\n      theme = _ref3.theme,\n      onItemChange = _ref3.onItemChange,\n      setScrollPanel = _ref3.setScrollPanel;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_2___default.a, {\n    className: \"form form--indicator-setting\",\n    ref: setScrollPanel,\n    autoHide: true\n  }, itemGroups.map(function (group) {\n    return group.fields.length ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SettingsPanelGroup, {\n      key: group.key,\n      title: group.key,\n      items: group.fields,\n      theme: theme,\n      onItemChange: onItemChange\n    }) : '';\n  }));\n};\n\nvar ResetButton = function ResetButton(_ref4) {\n  var onResetClick = _ref4.onResetClick;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n    type: \"button\",\n    className: \"reset\",\n    onClick: onResetClick\n  }, t.translate('Reset'));\n};\n\nvar DoneButton = function DoneButton(_ref5) {\n  var setOpen = _ref5.setOpen;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n    type: \"button\",\n    className: \"done\",\n    onClick: function onClick() {\n      return setOpen(false);\n    }\n  }, t.translate('Save'));\n};\n\nvar CancelButton = function CancelButton(_ref6) {\n  var setOpen = _ref6.setOpen;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n    type: \"button\",\n    className: \"cancel\",\n    onClick: function onClick() {\n      return setOpen(false);\n    }\n  }, t.translate('Cancel'));\n};\n\nvar SettingsDialog = function SettingsDialog(_ref7) {\n  var itemGroups = _ref7.itemGroups,\n      title = _ref7.title,\n      description = _ref7.description,\n      setOpen = _ref7.setOpen,\n      showTabs = _ref7.showTabs,\n      onResetClick = _ref7.onResetClick,\n      onItemChange = _ref7.onItemChange,\n      Dialog = _ref7.Dialog,\n      theme = _ref7.theme,\n      setScrollPanel = _ref7.setScrollPanel;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Dialog, {\n    className: \"cq-dialog cq-settings-dialog\",\n    title: title,\n    enableTabular: showTabs,\n    enableOverlay: true // this temprary, we remove it when all menus convert to modal\n\n  }, showTabs ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_tabs__WEBPACK_IMPORTED_MODULE_1__[\"Tabs\"], {\n    className: \"tabs--vertical\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_tabs__WEBPACK_IMPORTED_MODULE_1__[\"TabList\"], null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_tabs__WEBPACK_IMPORTED_MODULE_1__[\"Tab\"], null, \"Settings\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_tabs__WEBPACK_IMPORTED_MODULE_1__[\"Tab\"], null, \"Description\")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_tabs__WEBPACK_IMPORTED_MODULE_1__[\"TabPanel\"], null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SettingsPanel, {\n    itemGroups: itemGroups,\n    theme: theme,\n    onItemChange: onItemChange,\n    setScrollPanel: setScrollPanel\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"buttons\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ResetButton, {\n    onResetClick: onResetClick\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(DoneButton, {\n    setOpen: setOpen\n  }))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_tabs__WEBPACK_IMPORTED_MODULE_1__[\"TabPanel\"], null, description)) : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SettingsPanel, {\n    itemGroups: itemGroups,\n    theme: theme,\n    onItemChange: onItemChange,\n    setScrollPanel: setScrollPanel\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"buttons\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ResetButton, {\n    onResetClick: onResetClick\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(CancelButton, {\n    setOpen: setOpen\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(DoneButton, {\n    setOpen: setOpen\n  })))));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SettingsDialog);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/Shade.jsx\":\n/*!**********************************!*\\\n  !*** ./src/components/Shade.jsx ***!\n  \\**********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar Shade = function Shade(_ref) {\n  var visible = _ref.visible,\n      className = _ref.className,\n      setShadeRef = _ref.setShadeRef;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"shade \".concat(className || '', \" \").concat(visible ? '' : 'hidden'),\n    ref: setShadeRef,\n    style: {\n      top: -120\n    }\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Shade);\n\n/***/ }),\n\n/***/ \"./src/components/Share.jsx\":\n/*!**********************************!*\\\n  !*** ./src/components/Share.jsx ***!\n  \\**********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _sass_components_ciq_download_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../sass/components/_ciq-download.scss */ \"./sass/components/_ciq-download.scss\");\n/* harmony import */ var _sass_components_ciq_download_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_sass_components_ciq_download_scss__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nvar Loading = function Loading() {\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"loading\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"loading__bullet\"\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"loading__bullet\"\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"loading__bullet\"\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"loading__bullet\"\n  }));\n};\n\nvar Share = function Share(_ref) {\n  var Dialog = _ref.Dialog,\n      menuOpen = _ref.menuOpen,\n      downloadCSV = _ref.downloadCSV,\n      downloadPNG = _ref.downloadPNG,\n      isLoadingPNG = _ref.isLoadingPNG;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Dialog, {\n    className: \"cq-download-menu\",\n    title: t.translate('Download'),\n    newStyle: true\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Dialog.Title, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_2__[\"DownloadIcon\"], {\n    className: \"ic-icon-with-sub \".concat(menuOpen ? 'active' : ''),\n    \"tooltip-title\": t.translate('Download')\n  })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Dialog.Body, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-download\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-download__item \".concat(isLoadingPNG ? 'cq-download__item--loading' : ''),\n    onClick: downloadPNG\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_2__[\"PngIcon\"], null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"cq-download__item__label\"\n  }, \" \", t.translate('PNG'), \" \"), isLoadingPNG && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Loading, null)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-download__item\",\n    onClick: downloadCSV\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_2__[\"CsvIcon\"], null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"cq-download__item__label\"\n  }, \" \", t.translate('CSV'))))));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function (_ref2) {\n  var d = _ref2.share;\n  return {\n    Dialog: d.Dialog,\n    menuOpen: d.menu.dialog.open,\n    downloadPNG: d.downloadPNG,\n    downloadCSV: d.downloadCSV,\n    isLoadingPNG: d.isLoadingPNG\n  };\n})(Share));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/SmartChart.jsx\":\n/*!***************************************!*\\\n  !*** ./src/components/SmartChart.jsx ***!\n  \\***************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mobx-react */ \"mobx-react\");\n/* harmony import */ var mobx_react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mobx_react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store */ \"./src/store/index.js\");\n/* harmony import */ var _Chart_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Chart.jsx */ \"./src/components/Chart.jsx\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\nvar SmartChart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SmartChart, _React$Component);\n\n  function SmartChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SmartChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SmartChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.mainStore = new _store__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    return _this;\n  }\n\n  _createClass(SmartChart, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          props = _objectWithoutProperties(_this$props, [\"children\"]);\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(mobx_react__WEBPACK_IMPORTED_MODULE_1__[\"Provider\"], this.mainStore, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Chart_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"], props, children));\n    }\n  }, {\n    key: \"chart\",\n    get: function get() {\n      return this.mainStore.chart;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.chart.stxx;\n    }\n  }]);\n\n  return SmartChart;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SmartChart);\n\n/***/ }),\n\n/***/ \"./src/components/StudyLegend.jsx\":\n/*!****************************************!*\\\n  !*** ./src/components/StudyLegend.jsx ***!\n  \\****************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _NotificationBadge_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./NotificationBadge.jsx */ \"./src/components/NotificationBadge.jsx\");\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n\n\n\n\n\nvar StudyLegend = function StudyLegend(_ref) {\n  var isOpened = _ref.isOpened,\n      setOpen = _ref.setOpen,\n      StudyMenu = _ref.StudyMenu,\n      menuOpen = _ref.menuOpen,\n      StudyCategoricalDisplay = _ref.StudyCategoricalDisplay,\n      isMobile = _ref.isMobile,\n      activeStudiesNo = _ref.activeStudiesNo,\n      searchInputClassName = _ref.searchInputClassName,\n      disableAll = _ref.disableAll;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(StudyMenu, {\n    className: \"ciq-studies\",\n    isOpened: isOpened,\n    setOpen: setOpen,\n    isMobile: isMobile,\n    title: isMobile ? t.translate('Indicators') : ''\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(StudyMenu.Title, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"IndicatorIcon\"], {\n    className: \"ic-icon-with-sub \".concat(menuOpen ? 'active' : ''),\n    \"tooltip-title\": t.translate('Indicators')\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_NotificationBadge_jsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n    notificationCount: activeStudiesNo\n  })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(StudyMenu.Body, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(StudyCategoricalDisplay, {\n    searchInputClassName: searchInputClassName,\n    disableAll: disableAll\n  })));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function (_ref2) {\n  var st = _ref2.studies,\n      chart = _ref2.chart;\n  return {\n    isOpened: st.open,\n    setOpen: st.setOpen,\n    StudyMenu: st.StudyMenu,\n    menuOpen: st.menu.open,\n    StudyCategoricalDisplay: st.StudyCategoricalDisplay,\n    isMobile: chart.isMobile,\n    activeStudiesNo: st.activeStudies.data.length,\n    disableAll: st.hasReachedLimits\n  };\n})(StudyLegend));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/SymbolSelectButton.jsx\":\n/*!***********************************************!*\\\n  !*** ./src/components/SymbolSelectButton.jsx ***!\n  \\***********************************************/\n/*! exports provided: SymbolInfo, SymbolSelectButton, ChartPrice */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SymbolInfo\", function() { return SymbolInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SymbolSelectButton\", function() { return SymbolSelectButton; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChartPrice\", function() { return ChartPrice; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _MarketOpeningTimeCounter_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MarketOpeningTimeCounter.jsx */ \"./src/components/MarketOpeningTimeCounter.jsx\");\n\n\n\nvar SymbolInfo = function SymbolInfo(_ref) {\n  var symbol = _ref.symbol,\n      ChartPrice = _ref.ChartPrice,\n      isSymbolOpen = _ref.isSymbolOpen,\n      symbolOpenTime = _ref.symbolOpenTime;\n  var SymbolIcon = _Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"ItemIconMap\"][symbol.symbol] || _Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"SymbolPlaceholderIcon\"];\n  var hasOpenTime = !isSymbolOpen && symbolOpenTime.openTime;\n  var hasNoOpenTime = !isSymbolOpen && !symbolOpenTime.openTime;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, SymbolIcon && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SymbolIcon, {\n    className: \"ic-\".concat(symbol.symbol)\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-symbol-info\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-symbol \".concat(hasNoOpenTime ? 'closed-no-opentime' : '')\n  }, symbol.name), isSymbolOpen && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChartPrice, null), hasOpenTime && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ClosedSymbol, {\n    symbolOpenTime: symbolOpenTime\n  })));\n};\nvar SymbolSelectButton = function SymbolSelectButton(_ref2) {\n  var symbol = _ref2.symbol,\n      ChartPrice = _ref2.ChartPrice,\n      isSymbolOpen = _ref2.isSymbolOpen,\n      symbolOpenTime = _ref2.symbolOpenTime;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-symbol-select-btn\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SymbolInfo, {\n    symbol: symbol,\n    ChartPrice: ChartPrice,\n    symbolOpenTime: symbolOpenTime,\n    isSymbolOpen: isSymbolOpen\n  }), !isSymbolOpen && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-symbol-closed-text\"\n  }, t.translate('CLOSED')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"ArrowIcon\"], {\n    className: \"cq-symbol-dropdown\"\n  }));\n};\nvar ChartPrice = function ChartPrice(_ref3) {\n  var isVisible = _ref3.isVisible,\n      status = _ref3.status,\n      todayChange = _ref3.todayChange,\n      todayChangePercent = _ref3.todayChangePercent,\n      SpotPrice = _ref3.SpotPrice;\n  return isVisible && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-chart-price\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SpotPrice, {\n    className: \"cq-current-price\"\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"divider\"\n  }, \"-\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-change \".concat(status)\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"cq-todays-change\"\n  }, todayChange || 0), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"cq-todays-change-percent\"\n  }, \"(\", todayChangePercent, \"%)\"), \"\\xA0\"));\n};\n\nvar ClosedSymbol = function ClosedSymbol(symbolOpenTime) {\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-chart-closed\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"TimeIcon\"], {\n    className: \"cq-closed-icon\"\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-closed-opening\"\n  }, t.translate('Opens in:'), \" \\xA0\", react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"cq-closed-opening-time\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_MarketOpeningTimeCounter_jsx__WEBPACK_IMPORTED_MODULE_2__[\"MarketOpeningTimeCounter\"], {\n    symbolOpenTime: symbolOpenTime\n  }))));\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/Timeperiod.jsx\":\n/*!***************************************!*\\\n  !*** ./src/components/Timeperiod.jsx ***!\n  \\***************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _sass_components_timeperiod_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../sass/components/_timeperiod.scss */ \"./sass/components/_timeperiod.scss\");\n/* harmony import */ var _sass_components_timeperiod_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_sass_components_timeperiod_scss__WEBPACK_IMPORTED_MODULE_2__);\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n\n\n\nvar Timeperiod = function Timeperiod(_ref) {\n  var chartId = _ref.chartId,\n      enabled = _ref.enabled,\n      interval = _ref.interval,\n      timeUnit = _ref.timeUnit,\n      interval_display = _ref.interval_display,\n      isMobile = _ref.isMobile,\n      onChange = _ref.onChange,\n      setOpen = _ref.setOpen,\n      TimePeriodMenu = _ref.TimePeriodMenu,\n      timeUnit_display = _ref.timeUnit_display,\n      updateProps = _ref.updateProps;\n\n  var onGranularityClick = function onGranularityClick(granularity) {\n    onChange(granularity, chartId);\n    setOpen(false);\n  };\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    return updateProps(onChange);\n  });\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(TimePeriodMenu, {\n    className: \"ciq-period\",\n    enabled: enabled,\n    title: isMobile ? t.translate('Interval') : ''\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(TimePeriodMenu.Title, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"bt-priod\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"ic-priod\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"interval_display\"\n  }, interval_display), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"unit_display\"\n  }, timeUnit_display)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"br\", null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"ic-subtitle\"\n  }, t.translate('Interval')))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(TimePeriodMenu.Body, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-interval\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"timeUnit\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: timeUnit === 'tick' ? 'selected' : ''\n  }, t.translate('Tick')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: timeUnit === 'minute' ? 'selected' : ''\n  }, t.translate('Minute')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: timeUnit === 'hour' ? 'selected' : ''\n  }, t.translate('Hour')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: timeUnit === 'day' ? 'selected' : ''\n  }, t.translate('Day'))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"interval\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"row\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    onClick: function onClick() {\n      return onGranularityClick(0);\n    },\n    className: timeUnit === 'tick' && interval === 1 ? 'selected' : ''\n  }, \"1\")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"row\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    onClick: function onClick() {\n      return onGranularityClick(60);\n    },\n    className: timeUnit === 'minute' && interval === 1 ? 'selected' : ''\n  }, \"1\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    onClick: function onClick() {\n      return onGranularityClick(120);\n    },\n    className: interval === 2 ? 'selected' : ''\n  }, \"2\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    onClick: function onClick() {\n      return onGranularityClick(180);\n    },\n    className: interval === 3 ? 'selected' : ''\n  }, \"3\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    onClick: function onClick() {\n      return onGranularityClick(300);\n    },\n    className: interval === 5 ? 'selected' : ''\n  }, \"5\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    onClick: function onClick() {\n      return onGranularityClick(600);\n    },\n    className: interval === 10 ? 'selected' : ''\n  }, \"10\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    onClick: function onClick() {\n      return onGranularityClick(900);\n    },\n    className: interval === 15 ? 'selected' : ''\n  }, \"15\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    onClick: function onClick() {\n      return onGranularityClick(1800);\n    },\n    className: interval === 30 ? 'selected' : ''\n  }, \"30\")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"row\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    onClick: function onClick() {\n      return onGranularityClick(3600);\n    },\n    className: interval === 60 ? 'selected' : ''\n  }, \"1\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    onClick: function onClick() {\n      return onGranularityClick(7200);\n    },\n    className: interval === 120 ? 'selected' : ''\n  }, \"2\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    onClick: function onClick() {\n      return onGranularityClick(14400);\n    },\n    className: interval === 240 ? 'selected' : ''\n  }, \"4\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    onClick: function onClick() {\n      return onGranularityClick(28800);\n    },\n    className: interval === 480 ? 'selected' : ''\n  }, \"8\")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"row\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    onClick: function onClick() {\n      return onGranularityClick(86400);\n    },\n    className: timeUnit === 'day' ? 'selected' : ''\n  }, \"1\"))))));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function (_ref2) {\n  var s = _ref2.timeperiod,\n      state = _ref2.state;\n  return {\n    chartId: state.chartId,\n    timeUnit: s.timeUnit,\n    interval: s.interval,\n    interval_display: s.interval_display,\n    isMobile: s.mainStore.chart.isMobile,\n    onChange: s.setGranularity,\n    setOpen: s.menu.setOpen,\n    TimePeriodMenu: s.TimePeriodMenu,\n    timeUnit_display: s.timeUnit_display,\n    updateProps: s.updateProps\n  };\n})(Timeperiod));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/Views.jsx\":\n/*!**********************************!*\\\n  !*** ./src/components/Views.jsx ***!\n  \\**********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tt-react-custom-scrollbars */ \"./node_modules/tt-react-custom-scrollbars/lib/index.js\");\n/* harmony import */ var tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _store_Connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store/Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _store_ViewStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../store/ViewStore */ \"./src/store/ViewStore.js\");\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _sass_components_view_scss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../sass/components/_view.scss */ \"./sass/components/_view.scss\");\n/* harmony import */ var _sass_components_view_scss__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_sass_components_view_scss__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\n\nvar ViewItem = function ViewItem(_ref) {\n  var view = _ref.view,\n      remove = _ref.remove,\n      onClick = _ref.onClick;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ciq-list-item\",\n    onClick: onClick\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"ciq-list-item-text\"\n  }, view.name), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_4__[\"DeleteIcon\"], {\n    onClick: remove\n  }));\n};\n\nvar Views = function Views(_ref2) {\n  var ViewsMenu = _ref2.ViewsMenu,\n      menuOpen = _ref2.menuOpen,\n      views = _ref2.views,\n      currentRoute = _ref2.currentRoute,\n      _ref2$routes = _ref2.routes,\n      add = _ref2$routes.add,\n      main = _ref2$routes.main,\n      overwrite = _ref2$routes.overwrite,\n      cancel = _ref2$routes.cancel,\n      onChange = _ref2.onChange,\n      onSubmit = _ref2.onSubmit,\n      applyLayout = _ref2.applyLayout,\n      _remove = _ref2.remove,\n      inputRef = _ref2.inputRef,\n      templateName = _ref2.templateName,\n      searchInputClassName = _ref2.searchInputClassName;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ViewsMenu, {\n    className: \"ciq-views\",\n    title: t.translate('Templates')\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ViewsMenu.Title, {\n    className: \"cq-menu-btn\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_4__[\"TemplateIcon\"], {\n    className: \"ic-icon-with-sub \".concat(menuOpen ? 'active' : ''),\n    \"tooltip-title\": t.translate('Templates')\n  })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ViewsMenu.Body, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"content\"\n  }, currentRoute !== 'overwrite' ? '' : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ovrwrit-alrt\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ovrwrit-alrt-title\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_4__[\"alertIconMap\"].warning, null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, templateName + t.translate(' already exists.')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, t.translate('Would you like to overwrite it?'))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"ovrwrit-alrt-buttons\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    onClick: main\n  }, t.translate('CANCEL')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    onClick: overwrite\n  }, t.translate('OVERWRITE')))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"template-name\"\n  }, currentRoute === 'add' ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"add\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_4__[\"BackIcon\"], {\n    onClick: cancel\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n    ref: inputRef,\n    className: \"view-input \".concat(searchInputClassName || ''),\n    value: templateName,\n    placeholder: t.translate('Template name'),\n    maxLength: 20,\n    onChange: onChange,\n    onKeyUp: onSubmit\n  })) : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"add-new\",\n    onClick: main\n  }, \" \", t.translate('Add new'), \" \"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"icon\"\n  }, currentRoute === 'add' ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_4__[\"TickIcon\"], {\n    className: \"tick-icon\",\n    onClick: add\n  }) : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_4__[\"AddIcon\"], {\n    className: \"add-icon\",\n    onClick: main\n  }))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_1___default.a, {\n    className: \"ciq-list\"\n  }, views.map(function (view, i) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ViewItem, {\n      view: view,\n      key: view.name,\n      onClick: function onClick(e) {\n        return applyLayout(i, e);\n      },\n      remove: function remove(e) {\n        return _remove(i, e);\n      }\n    });\n  })))));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_store_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function (_ref3) {\n  var s = _ref3.view;\n  return {\n    ViewsMenu: s.ViewsMenu,\n    views: _store_ViewStore__WEBPACK_IMPORTED_MODULE_3__[\"default\"].views,\n    routes: s.routes,\n    onOverwrite: s.onOverwrite,\n    onCancel: s.onCancel,\n    onChange: s.onChange,\n    remove: s.remove,\n    onSubmit: s.onSubmit,\n    applyLayout: s.applyLayout,\n    menuOpen: s.menu.dialog.open,\n    inputRef: s.inputRef,\n    currentRoute: s.currentRoute,\n    templateName: s.templateName\n  };\n})(Views));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/categoricaldisplay/CategoricalDisplay.jsx\":\n/*!******************************************************************!*\\\n  !*** ./src/components/categoricaldisplay/CategoricalDisplay.jsx ***!\n  \\******************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _sass_components_categorical_display_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../sass/components/_categorical-display.scss */ \"./sass/components/_categorical-display.scss\");\n/* harmony import */ var _sass_components_categorical_display_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_sass_components_categorical_display_scss__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tt-react-custom-scrollbars */ \"./node_modules/tt-react-custom-scrollbars/lib/index.js\");\n/* harmony import */ var tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nvar CategoricalDisplay = react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(function (_ref) {\n  var onSelectItem = _ref.onSelectItem,\n      updateScrollSpy = _ref.updateScrollSpy,\n      setScrollPanel = _ref.setScrollPanel,\n      ResultsPanel = _ref.ResultsPanel,\n      FilterPanel = _ref.FilterPanel,\n      SearchInput = _ref.SearchInput,\n      isMobile = _ref.isMobile,\n      height = _ref.height,\n      id = _ref.id,\n      searchInputClassName = _ref.searchInputClassName,\n      disableAll = _ref.disableAll,\n      isNestedList = _ref.isNestedList;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-categorical-display \".concat(isNestedList ? 'cq-categorical-display--nested' : ''),\n    style: {\n      height: height\n    },\n    id: id\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-lookup-filters\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SearchInput, {\n    searchInputClassName: searchInputClassName\n  }), isNestedList ? '' : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(FilterPanel, null)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(tt_react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_2___default.a, {\n    className: \"cq-scroll-panel\",\n    onScroll: updateScrollSpy,\n    ref: setScrollPanel,\n    style: {\n      width: isMobile ? '100%' : '312px'\n    }\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ResultsPanel, {\n    onSelectItem: onSelectItem,\n    id: id,\n    disableAll: disableAll,\n    isNestedList: isNestedList\n  })));\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (CategoricalDisplay);\n\n/***/ }),\n\n/***/ \"./src/components/categoricaldisplay/FilterPanel.jsx\":\n/*!***********************************************************!*\\\n  !*** ./src/components/categoricaldisplay/FilterPanel.jsx ***!\n  \\***********************************************************/\n/*! exports provided: FilterPanel */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FilterPanel\", function() { return FilterPanel; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Icons.jsx */ \"./src/components/Icons.jsx\");\n\n\nvar Filter = react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(function (_ref) {\n  var focusedCategoryKey = _ref.focusedCategoryKey,\n      activeCategoryKey = _ref.activeCategoryKey,\n      handleFilterClick = _ref.handleFilterClick,\n      category = _ref.category;\n  var CategoryIcon = _Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"CategoryIconMap\"][category.categoryId];\n  var isActive = focusedCategoryKey && focusedCategoryKey.length ? focusedCategoryKey === category.categoryId : activeCategoryKey === category.categoryId;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-filter \".concat(isActive ? 'cq-active-filter' : ''),\n    onClick: function onClick(e) {\n      return handleFilterClick(category, e);\n    }\n  }, CategoryIcon && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(CategoryIcon, {\n    className: \"ic-\".concat(category.categoryId)\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"cq-filter-text\"\n  }, t.translate(category.categoryName)));\n});\nvar FilterPanel = function FilterPanel(_ref2) {\n  var filteredItems = _ref2.filteredItems,\n      handleFilterClick = _ref2.handleFilterClick,\n      focusedCategoryKey = _ref2.focusedCategoryKey,\n      activeCategoryKey = _ref2.activeCategoryKey;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-filter-panel\"\n  }, filteredItems.map(function (category) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Filter, {\n      key: category.categoryId,\n      category: category,\n      handleFilterClick: handleFilterClick,\n      activeCategoryKey: activeCategoryKey,\n      focusedCategoryKey: focusedCategoryKey\n    });\n  }));\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/categoricaldisplay/Item.jsx\":\n/*!****************************************************!*\\\n  !*** ./src/components/categoricaldisplay/Item.jsx ***!\n  \\****************************************************/\n/*! exports provided: NormalItem, ActiveItem */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NormalItem\", function() { return NormalItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActiveItem\", function() { return ActiveItem; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _Favorite_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Favorite.jsx */ \"./src/components/Favorite.jsx\");\n\n\n\nvar Icon = react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(function (_ref) {\n  var id = _ref.id;\n\n  if (!id || !_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"ItemIconMap\"][id]) {\n    return '';\n  }\n\n  var ItemIcon = _Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"ItemIconMap\"][id];\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ItemIcon, {\n    className: \"ic-\".concat(id)\n  });\n});\nvar ItemLeft = react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(function (_ref2) {\n  var _ref2$item = _ref2.item,\n      itemId = _ref2$item.itemId,\n      display = _ref2$item.display;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"left\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Icon, {\n    id: itemId\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"ciq-item-display\"\n  }, display));\n});\nvar ItemRight = react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(function (_ref3) {\n  var favoritesId = _ref3.favoritesId,\n      _ref3$item = _ref3.item,\n      dataObject = _ref3$item.dataObject,\n      itemId = _ref3$item.itemId;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"right\"\n  }, dataObject && (dataObject.exchange_is_open === undefined || dataObject.exchange_is_open) ? '' : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"closed-market\"\n  }, t.translate('CLOSED')), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Favorite_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n    category: favoritesId,\n    id: itemId\n  }));\n});\n\nvar ActiveOption = function ActiveOption(_ref4) {\n  var opt = _ref4.opt,\n      item = _ref4.item;\n  var ActiveOptionIcon = _Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"ActiveOptionsIconMap\"][opt.id];\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"ic-\".concat(opt.id),\n    onClick: function onClick(e) {\n      return opt.onClick && opt.onClick(item.dataObject, e);\n    }\n  }, ActiveOptionIcon && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ActiveOptionIcon, null), opt.renderChild && opt.renderChild(item));\n};\n\nvar ActiveOptions = function ActiveOptions(_ref5) {\n  var activeOptions = _ref5.activeOptions,\n      item = _ref5.item;\n  return activeOptions && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"cq-active-options\"\n  }, activeOptions.map(function (opt) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ActiveOption, {\n      key: opt.id,\n      opt: opt,\n      item: item\n    });\n  }));\n};\n\nvar NormalItem = react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(function (_ref6) {\n  var onSelectItem = _ref6.onSelectItem,\n      item = _ref6.item,\n      disableAll = _ref6.disableAll,\n      favoritesId = _ref6.favoritesId,\n      id = _ref6.id;\n  var itemClass = id ? \"\".concat(id, \"-subcategory-item-\").concat(item.itemId) : \"subcategory-item-\".concat(item.itemId);\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-item \".concat(item.selected ? 'selected ' : '', \" \").concat(itemClass),\n    onClick: function onClick(e) {\n      return item.enabled && onSelectItem(item.dataObject, e);\n    },\n    disabled: !item.enabled || disableAll\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ItemLeft, {\n    item: item\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ItemRight, {\n    item: item,\n    favoritesId: favoritesId\n  }));\n});\nvar ActiveItem = function ActiveItem(_ref7) {\n  var item = _ref7.item,\n      favoritesId = _ref7.favoritesId,\n      activeOptions = _ref7.activeOptions;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"cq-active-item\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ItemLeft, {\n    item: item\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"right\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ActiveOptions, {\n    activeOptions: activeOptions,\n    item: item\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Favorite_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n    category: favoritesId,\n    id: item.itemId\n  })));\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/categoricaldisplay/ResultsPanel.jsx\":\n/*!************************************************************!*\\\n  !*** ./src/components/categoricaldisplay/ResultsPanel.jsx ***!\n  \\************************************************************/\n/*! exports provided: ResultsPanel */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResultsPanel\", function() { return ResultsPanel; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Icons_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Icons.jsx */ \"./src/components/Icons.jsx\");\n\n\n\nfunction getItemCount(category) {\n  var count = 0;\n\n  if (category.hasSubcategory) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = category.data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var sub = _step.value;\n        count += sub.data.length;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  } else {\n    count += category.data.length;\n  }\n\n  return count;\n}\n\nvar EmptyCategory = function EmptyCategory(_ref) {\n  var category = _ref.category;\n  return getItemCount(category) === 0 && category.emptyDescription && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"category-content\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"empty-category\"\n  }, t.translate(category.emptyDescription)));\n};\n\nvar CategoryTitleClassName = function CategoryTitleClassName(categoryId, activeHeadKey, activeHeadTop, categorySubtitle, active) {\n  var TitleClassName = '';\n\n  if (activeHeadKey === categoryId) {\n    TitleClassName = activeHeadTop < 0 ? 'sticky-bottom' : 'sticky-top';\n  }\n\n  return \"category-title \".concat(TitleClassName, \" \").concat(categorySubtitle ? 'has-subtitle' : '', \" \").concat(active ? 'active' : '');\n};\n\nvar CategoryTitle = function CategoryTitle(_ref2) {\n  var category = _ref2.category,\n      activeHeadKey = _ref2.activeHeadKey,\n      activeHeadTop = _ref2.activeHeadTop,\n      activeHeadOffset = _ref2.activeHeadOffset,\n      isNestedList = _ref2.isNestedList,\n      handleTitleClick = _ref2.handleTitleClick;\n  var CategoryIcon = _Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"CategoryIconMap\"][category.categoryId];\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: CategoryTitleClassName(category.categoryId, activeHeadKey, activeHeadTop, category.categorySubtitle, category.active),\n    style: {\n      top: activeHeadKey === category.categoryId ? activeHeadOffset : null\n    },\n    onClick: function onClick() {\n      return handleTitleClick(category.categoryId);\n    }\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"category-title-left\"\n  }, isNestedList ? CategoryIcon && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(CategoryIcon, {\n    className: \"ic-\".concat(category.categoryId)\n  }) : '', t.translate(category.categoryName)), (category.categoryNamePostfixShowIfActive && activeHeadKey === category.categoryId || !category.categoryNamePostfixShowIfActive) && category.categoryNamePostfix && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    className: \"category-name-postfix\"\n  }, category.categoryNamePostfix), category.categorySubtitle && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"category-subtitle\"\n  }, t.translate(category.categorySubtitle)), isNestedList ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Icons_jsx__WEBPACK_IMPORTED_MODULE_1__[\"ArrowIcon\"], null) : '');\n};\n\nvar Category = function Category(_ref3) {\n  var category = _ref3.category,\n      Item = _ref3.Item,\n      setCategoryElement = _ref3.setCategoryElement,\n      onSelectItem = _ref3.onSelectItem,\n      activeHeadKey = _ref3.activeHeadKey,\n      activeHeadTop = _ref3.activeHeadTop,\n      activeHeadOffset = _ref3.activeHeadOffset,\n      disableAll = _ref3.disableAll,\n      isNestedList = _ref3.isNestedList,\n      handleTitleClick = _ref3.handleTitleClick;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"category category-\".concat(category.categoryId, \" \").concat(category.categorySubtitle ? 'category-has-subtitle' : '', \" \").concat(category.active ? 'active' : ''),\n    ref: function ref(el) {\n      return setCategoryElement(el, category.categoryId);\n    }\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(CategoryTitle, {\n    category: category,\n    activeHeadKey: activeHeadKey,\n    activeHeadTop: activeHeadTop,\n    activeHeadOffset: activeHeadOffset,\n    isNestedList: isNestedList,\n    handleTitleClick: handleTitleClick\n  }), category.hasSubcategory ? category.data.map(function (subcategory) {\n    return getItemCount(subcategory) > 0 && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"category-content has-subcategory\",\n      key: subcategory.subcategoryName\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"subcategory\"\n    }, t.translate(subcategory.subcategoryName)), subcategory.data.map(function (item) {\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Item, {\n        key: item.display,\n        item: item,\n        onSelectItem: onSelectItem,\n        disableAll: disableAll\n      });\n    }));\n  }) : category.data.length > 0 && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"category-content\"\n  }, category.data.map(function (item, idx) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Item, {\n      key: \"\".concat(item.display, \"-\").concat(idx) // eslint-disable-line react/no-array-index-key\n      ,\n      item: item,\n      onSelectItem: onSelectItem,\n      disableAll: disableAll\n    });\n  })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(EmptyCategory, {\n    category: category\n  }));\n};\n\nvar ResultsPanel = react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(function (_ref4) {\n  var filteredItems = _ref4.filteredItems,\n      onSelectItem = _ref4.onSelectItem,\n      getItemType = _ref4.getItemType,\n      setCategoryElement = _ref4.setCategoryElement,\n      activeHeadKey = _ref4.activeHeadKey,\n      activeHeadTop = _ref4.activeHeadTop,\n      activeHeadOffset = _ref4.activeHeadOffset,\n      disableAll = _ref4.disableAll,\n      isNestedList = _ref4.isNestedList,\n      handleTitleClick = _ref4.handleTitleClick;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"results-panel\"\n  }, filteredItems.map(function (category) {\n    return (getItemCount(category) > 0 || category.emptyDescription) && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Category, {\n      key: category.categoryId,\n      Item: getItemType(category.categoryId),\n      category: category,\n      setCategoryElement: setCategoryElement,\n      onSelectItem: onSelectItem,\n      activeHeadKey: activeHeadKey,\n      activeHeadTop: activeHeadTop,\n      activeHeadOffset: activeHeadOffset,\n      disableAll: disableAll,\n      isNestedList: isNestedList,\n      handleTitleClick: handleTitleClick\n    });\n  }));\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/components/categoricaldisplay/index.js\":\n/*!****************************************************!*\\\n  !*** ./src/components/categoricaldisplay/index.js ***!\n  \\****************************************************/\n/*! exports provided: CategoricalDisplay, FilterPanel, NormalItem, ActiveItem, ResultsPanel */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _CategoricalDisplay_jsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CategoricalDisplay.jsx */ \"./src/components/categoricaldisplay/CategoricalDisplay.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CategoricalDisplay\", function() { return _CategoricalDisplay_jsx__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _FilterPanel_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FilterPanel.jsx */ \"./src/components/categoricaldisplay/FilterPanel.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FilterPanel\", function() { return _FilterPanel_jsx__WEBPACK_IMPORTED_MODULE_1__[\"FilterPanel\"]; });\n\n/* harmony import */ var _Item_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Item.jsx */ \"./src/components/categoricaldisplay/Item.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NormalItem\", function() { return _Item_jsx__WEBPACK_IMPORTED_MODULE_2__[\"NormalItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ActiveItem\", function() { return _Item_jsx__WEBPACK_IMPORTED_MODULE_2__[\"ActiveItem\"]; });\n\n/* harmony import */ var _ResultsPanel_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ResultsPanel.jsx */ \"./src/components/categoricaldisplay/ResultsPanel.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ResultsPanel\", function() { return _ResultsPanel_jsx__WEBPACK_IMPORTED_MODULE_3__[\"ResultsPanel\"]; });\n\n\n\n\n\n\n\n/***/ }),\n\n/***/ \"./src/components/ui/Animation.js\":\n/*!****************************************!*\\\n  !*** ./src/components/ui/Animation.js ***!\n  \\****************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return animateChart; });\n/* TAKEN OUT OF ADDONS.JS */\n\n/* eslint-disable no-unused-vars,eqeqeq,no-shadow,no-alert,no-restricted-globals,prefer-const,prefer-destructuring */\n\n/**\n * Add-On that animates the chart.\n *\n * Requires `addOns.js`\n *\n * The chart is animated in three ways:\n * 1.  The current price pulsates\n * 2.  The current price appears to move smoothly from the previous price\n * 3.  The chart's y-axis smoothly expands/contracts when a new high or low is reached\n *\n * The following chart types are supported: line, mountain, baseline_delta.\n *\n * Chart aggregations such as Kagi, Renko, Range Bars, etc. are not supported.\n *\n * **Animation displays more gracefully when updates are sent into the chart one at a time using {@link CIQ.ChartEngine#updateChartData}\n * instead of in batches using a [QuoteFeed]{@link CIQ.ChartEngine#attachQuoteFeed}. Sending data in batches will produce a ‘jumping’ effect.**\n *\n * By default there will be a flashing beacon created using a canvas circles. If instead you want to use a custom animation beacon, you will be able to extend the functionality yourself as follows:\n * - In js/addOns.js, at the bottom of the CIQ.Animation function, there is an stx.append(\"draw\") function.\n * - Make a copy of this function so you can override the behavior.\n * - In there you will see it determine var x and y, which are the coordinates for the center of the beacon.\n * - At the bottom of this append function, where we draw the beacon by using the Canvas arc() function to draw a circle and then fill() to make the circle solid.\n * - You can replace this circle and fill instructions with an image using [CanvasRenderingContext2D.drawImage()](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D#Drawing_images) .\n *\n * Animation Example <iframe width=\"800\" height=\"500\" scrolling=\"no\" seamless=\"seamless\" align=\"top\" style=\"float:top\" src=\"https://jsfiddle.net/chartiq/6fqw652z/embedded/result,js,html/\" allowfullscreen=\"allowfullscreen\" frameborder=\"1\"></iframe>\n *\n * @param {CIQ.ChartEngine} stx The chart object\n * @param {object} animationParameters Configuration parameters\n * @param {boolean} [animationParameters.stayPut=false] Set to true for last tick to stay in position it was scrolled and have rest of the chart move backwards as new ticks are added instead of having new ticks advance forward and leave the rest of the chart in place.\n * @param {number} [animationParameters.ticksFromEdgeOfScreen=5] Number of ticks from the right edge the chart should stop moving forward so the last tick never goes off screen (only applicable if stayPut=false)\n * @param {number} [animationParameters.granularity=1000000] Set to a value that will give enough granularity for the animation.  The larger the number the smaller the price jump between frames, which is good for charts that need a very slow smooth animation either because the price jumps between ticks are very small, or because the animation was set up to run over a large number of frames when instantiating the CIQ.EaseMachine.\n * @param {number} [animationParameters.tension=null] Splining tension for smooth curves around data points (range 0-1).  Must include splines.js for this to be effective.\n * @param {CIQ.EaseMachine} easeMachine Override the default easeMachine.  Default is `new CIQ.EaseMachine(Math.easeOutCubic, 1000);`\n * @constructor\n * @name  CIQ.Animation\n * @since\n * <br>&bull; 3.0.0 Now part of addOns.js. Previously provided as a standalone animation.js file\n * <br>&bull; 4.0.0 beacon only flashes for line charts. On Candles or bars it is suppressed as it produces an unnatural effect.\n * @example\n *    new CIQ.Animation(stxx, {tension:0.3});  //Default animation with splining tension of 0.3\n *\n */\nfunction animateChart(stx, animationParameters) {\n  var params = {\n    stayPut: false,\n    ticksFromEdgeOfScreen: 5,\n    granularity: 1000000\n  };\n  animationParameters = CIQ.extend(params, animationParameters);\n  if (params.tension) stx.chart.tension = animationParameters.tension;\n  stx.tickAnimator = new CIQ.EaseMachine(Math.easeInOutCubic, 320);\n  var filterSession = false;\n  var nextBoundary = null;\n\n  function initMarketSessionFlags() {\n    filterSession = false;\n    nextBoundary = null;\n  }\n\n  stx.addEventListener(['symbolChange', 'layout'], function (obj) {\n    initMarketSessionFlags();\n  });\n  stx.prepend('updateCurrentMarketData', function (data, chart, symbol, params) {\n    if (!chart) chart = this.chart;\n\n    if (params && params.fromTrade && (chart.closePendingAnimation || chart.closePendingAnimation === 0)) {\n      params.finalClose = chart.closePendingAnimation;\n    }\n  });\n  stx.append('updateChartData', function (appendQuotes, chart, params) {\n    // These chart types are the only types supported by animation\n    var supportedChartType = this.mainSeriesRenderer && this.mainSeriesRenderer.supportsAnimation; // This injection is just for charts which are not supported by animation.\n\n    if (supportedChartType) {\n      return false;\n    }\n\n    chart = chart || this.chart;\n\n    if (chart.lockScroll) {\n      var lastAppendQuote = appendQuotes[appendQuotes.length - 1];\n      var lastDataSegmentItem = chart.dataSegment[chart.dataSegment.length - 1];\n\n      if (!lastAppendQuote || !lastDataSegmentItem) {\n        return;\n      }\n\n      if (lastAppendQuote.DT > lastDataSegmentItem.DT && chart.scroll <= chart.dataSegment.length) {\n        chart.scroll++;\n      }\n    }\n  });\n  stx.prepend('updateChartData', function (appendQuotes, chart, params) {\n    var self = this;\n\n    if (!chart) {\n      chart = self.chart;\n    }\n\n    if (!chart || !chart.defaultChartStyleConfig || chart.defaultChartStyleConfig == 'none') return;\n\n    if (params !== undefined) {\n      if (params.animationEntry || params.secondarySeries) return;\n    }\n\n    function completeLastBar(record) {\n      if (!chart.masterData) {\n        return;\n      }\n\n      for (var md = chart.masterData.length - 1; md >= 0; md--) {\n        var bar = chart.masterData[md];\n\n        if (bar.Close || bar.Close === 0) {\n          bar.Close = record.Close;\n          if (record.LastSize) bar.LastSize = record.LastSize;\n          if (record.LastTime) bar.LastTime = record.LastTime;\n          self.updateCurrentMarketData({\n            Close: bar.Close,\n            DT: bar.DT,\n            LastSize: bar.LastSize,\n            LastTime: bar.LastTime\n          });\n          self.createDataSet(null, null, {\n            appending: true\n          });\n          return;\n        }\n      }\n    }\n\n    function unanimateScroll() {\n      if (chart.animatingHorizontalScroll) {\n        chart.animatingHorizontalScroll = false;\n        self.micropixels = self.nextMicroPixels = self.previousMicroPixels; // <-- Reset self.nextMicroPixels here\n\n        chart.lastTickOffset = 0;\n      }\n\n      if (chart.closePendingAnimation !== null) {\n        var close = chart.closePendingAnimation;\n        chart.closePendingAnimation = null;\n        completeLastBar({\n          Close: close\n        });\n      }\n    }\n\n    var tickAnimator = self.tickAnimator; // These chart types are the only types supported by animation\n\n    var supportedChartType = this.mainSeriesRenderer && this.mainSeriesRenderer.supportsAnimation;\n\n    if (supportedChartType) {\n      if (!tickAnimator) {\n        console.warn('Animation plug-in can not run because the tickAnimator has not been declared. See instructions in animation.js');\n        return;\n      } // If symbol changes then reset all of our variables\n\n\n      if (this.prevSymbol != chart.symbol) {\n        this.prevQuote = 0;\n        chart.closePendingAnimation = null;\n        this.prevSymbol = chart.symbol;\n      }\n\n      unanimateScroll();\n      tickAnimator.stop();\n\n      if (appendQuotes.length > 2) {\n        return;\n      }\n    }\n\n    var newParams = CIQ.clone(params);\n    if (!newParams) newParams = {};\n    newParams.animationEntry = true;\n    newParams.bypassGovernor = true;\n    newParams.noCreateDataSet = false; // newParams.allowReplaceOHL = true;\n\n    newParams.firstLoop = true;\n    var symbol = this.chart.symbol;\n    var period = this.layout.periodicity;\n    var interval = this.layout.interval;\n    var timeUnit = this.layout.timeUnit;\n\n    function cb(quote, prevQuote, chartJustAdvanced) {\n      return function (newData) {\n        var newClose = newData.Close;\n\n        if (!chart.dataSet.length || symbol != chart.symbol || period != self.layout.periodicity || interval != self.layout.interval || timeUnit != self.layout.timeUnit) {\n          // console.log (\"---- STOP animating: Old\",symbol,' New : ',chart.symbol, Date())\n          tickAnimator.stop();\n          unanimateScroll();\n          return; // changed symbols mid animation\n        }\n\n        var q = CIQ.clone(quote);\n        q.Close = Math.round(newClose * animationParameters.granularity) / animationParameters.granularity; // <<------ IMPORTANT! Use 1000000 for small price increments, otherwise animation will be in increments of .0001\n        // q.Close = Math.round(newClose*chart.roundit)/chart.roundit; // to ensure decimal points don't go out too far for interim values\n        // if (chartJustAdvanced) {\n        //     if (!q.Open && q.Open !== 0) q.Open = q.Close;\n        //     if (!q.High && q.High !== 0) q.High = Math.max(q.Open, q.Close);\n        //     if (!q.Low && q.Low !== 0) q.Low = Math.min(q.Open, q.Close);\n        // } else {\n        //     if (quote.Close > prevQuote.High) q.High = q.Close;\n        //     if (quote.Close < prevQuote.Low) q.Low = q.Close;\n        // }\n\n        if (chart.animatingHorizontalScroll) {\n          self.micropixels = newData.micropixels;\n          chart.lastTickOffset = newData.lineOffset;\n        }\n\n        newParams.updateDataSegmentInPlace = !tickAnimator.hasCompleted; // console.log(\"animating: Old\",symbol,' New : ',chart.symbol);\n\n        var progress = tickAnimator.fc(Date.now() - tickAnimator.startTime, // delta time\n        0, // start value\n        1, // end value\n        tickAnimator.ms // duration\n        ); // the progress value will be used in \"CurrentSpotStore.drawSpot\" method.\n        // it's used to properly applow glow effect and position the current spot.\n\n        q.tickAnimationProgress = Math.min(progress, 1);\n        q.chartJustAdvanced = chartJustAdvanced;\n        var updateQuotes = [q];\n        if (chartJustAdvanced) updateQuotes.unshift(prevQuote);\n        self.updateChartData(updateQuotes, chart, newParams);\n        newParams.firstLoop = false;\n\n        if (tickAnimator.hasCompleted) {\n          unanimateScroll();\n        }\n      };\n    }\n    /* end function */\n\n\n    if (supportedChartType) {\n      var quote = appendQuotes[appendQuotes.length - 1];\n      this.prevQuote = this.currentQuote(); // <---- prevQuote logic has been changed to prevent forward/back jitter when more than one tick comes in between animations\n\n      var chartJustAdvanced = false; // When advancing, we need special logic to deal with the open\n\n      if (period == 1 && appendQuotes.length == 2) {\n        // Don't do this if consolidating\n        this.prevQuote = appendQuotes[0];\n        completeLastBar(this.prevQuote);\n      }\n\n      if (!quote || !quote.Close || !this.prevQuote\n      /* || !this.prevQuote.Close */\n      ) {\n          if (this.prevQuote\n          /* && quote && quote.Close === null <] [> && !this.prevQuote.Close */\n          ) {\n              if (chart.lockScroll\n              /* && quote.DT >= this.prevQuote.DT */\n              ) {\n                  if (quote.Close === null) {\n                    tickAnimator.stop();\n                    unanimateScroll();\n                  }\n\n                  if (chart.entryTick !== null && chart.entryTick !== undefined) {\n                    var visibleTicks = chart.dataSet.length - chart.entryTick + 1;\n                    this.setMaxTicks(visibleTicks + 3);\n                    chart.scroll = visibleTicks + 1;\n                  }\n                }\n            }\n\n          return false;\n        }\n\n      if (this.prevQuote.Close === null) {\n        var beforeCurrentQuote = this.chart.dataSet[this.chart.dataSet.length - 2];\n\n        if (beforeCurrentQuote && beforeCurrentQuote.Close) {\n          this.prevQuote = beforeCurrentQuote;\n        } else {\n          return false;\n        }\n      }\n\n      if (this.extendedHours && chart.market.market_def) {\n        // Filter out unwanted sessions\n        var dtToFilter = quote.DT;\n\n        if (CIQ.ChartEngine.isDailyInterval(interval)) {\n          filterSession = !chart.market.isMarketDate(dtToFilter);\n        } else if (!nextBoundary || nextBoundary <= dtToFilter) {\n          var session = chart.market.getSession(dtToFilter);\n          filterSession = session !== '' && (!this.layout.marketSessions || !this.layout.marketSessions[session]);\n          nextBoundary = chart.market[filterSession ? 'getNextOpen' : 'getNextClose'](dtToFilter);\n        }\n\n        if (filterSession) {\n          this.draw();\n          return false;\n        }\n      }\n\n      var barSpan = period;\n      if (interval == 'second' || timeUnit == 'second') barSpan *= 1000;else if (interval == 'minute' || timeUnit == 'minute') barSpan *= 60000;\n      if (!isNaN(interval)) barSpan *= interval;\n      if (interval == 'day' || timeUnit == 'day') chartJustAdvanced = quote.DT.getDate() != this.prevQuote.DT.getDate();else if (interval == 'week' || timeUnit == 'week') chartJustAdvanced = quote.DT.getDate() >= this.prevQuote.DT.getDate() + 7;else if (interval == 'month' || timeUnit == 'month') chartJustAdvanced = quote.DT.getMonth() != this.prevQuote.DT.getMonth();else chartJustAdvanced = quote.DT.getTime() >= this.prevQuote.DT.getTime() + barSpan;\n      var linearChart = (!this.mainSeriesRenderer || !this.mainSeriesRenderer.standaloneBars) && !this.standaloneBars[this.layout.chartType];\n      var beginningOffset = 0;\n\n      if (chartJustAdvanced) {\n        if (this.animations.zoom.hasCompleted) {\n          var candleWidth = this.layout.candleWidth;\n\n          if (chart.scroll <= chart.maxTicks && !chart.lockScroll) {\n            if (this.micropixels > 0) {\n              // If micropixels is larger than a candle then scroll back further\n              var count = Math.ceil(this.micropixels / candleWidth);\n              this.scroll += count;\n              this.micropixels -= count * candleWidth;\n            }\n          }\n\n          if (chart.scroll <= chart.maxTicks && !chart.lockScroll) {\n            this.previousMicroPixels = this.micropixels;\n            this.nextMicroPixels = this.micropixels + candleWidth;\n            beginningOffset = candleWidth * -1;\n\n            if (chart.dataSegment && chart.dataSegment.length < chart.maxTicks - animationParameters.ticksFromEdgeOfScreen && !animationParameters.stayPut) {\n              chart.scroll++;\n              this.nextMicroPixels = this.micropixels;\n            }\n\n            chart.animatingHorizontalScroll = linearChart && !chart.lockScroll; // When the chart advances we also animate the horizontal scroll by incrementing micropixels\n\n            chart.previousDataSetLength = chart.dataSet.length;\n          } else if (chart.lockScroll) {\n            if (chart.entryTick !== undefined && chart.entryTick !== null) {\n              var dataLen = chart.dataSet.length;\n\n              var _visibleTicks = dataLen - chart.entryTick + 1;\n\n              this.setMaxTicks(_visibleTicks + 3);\n              chart.scroll = _visibleTicks + 1;\n            } else {\n              this.setMaxTicks(chart.dataSet.length + (Math.floor(chart.dataSet.length / 5) || 2));\n              chart.scroll = chart.dataSet.length;\n            }\n          } else {\n            chart.scroll += 1;\n          }\n        } else {\n          return false;\n        }\n      }\n\n      chart.closePendingAnimation = quote.Close;\n      var start = chartJustAdvanced && !linearChart ? quote.Open : this.prevQuote.Close;\n      tickAnimator.run(cb(quote, CIQ.clone(this.prevQuote), chartJustAdvanced), {\n        Close: start,\n        micropixels: chart.lockScroll ? 0 : this.nextMicroPixels,\n        lineOffset: beginningOffset\n      }, {\n        Close: quote.Close,\n        micropixels: this.micropixels,\n        lineOffset: 0\n      });\n      return true; // bypass default behavior if the animation is on\n    }\n  });\n}\n\n/***/ }),\n\n/***/ \"./src/components/ui/Context.js\":\n/*!**************************************!*\\\n  !*** ./src/components/ui/Context.js ***!\n  \\**************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * UI context helper class. Construct with an {@link CIQ.ChartEngine} object\n * @param {CIQ.ChartEngine} stx The chart object to associate this UI\n * @param {HTMLElement} topNode The top node of the DOM tree for this context. That node should contain\n * all of the UI elements associated with the CIQ.ChartEngine\n * @param {object} [params] Optional parameters\n * @name CIQ.UI.Context\n * @constructor\n */\nvar Context =\n/*#__PURE__*/\nfunction () {\n  function Context(stx, topNode, params) {\n    _classCallCheck(this, Context);\n\n    this.params = params || {};\n    this.stx = stx;\n    this.topNode = topNode;\n    var storage = Context.assembleContext(topNode);\n    this.advertised = {};\n    topNode.CIQ.UI.context = this; // Search through all of the components that have registered themselves. Call setContext() on each\n    // so that they can get their context. This usually initializes and makes the component active.\n\n    for (var i = 0; i < storage.Components.length; i++) {\n      storage.Components[i].setContextPrivate(this);\n    }\n  }\n  /**\n   * The DOM tag for a context needs some storage. ContextTag components register\n   * themselves by placing themselves in this storage. This method creates that\n   * storage, if it hasn't already been created.\n   * @param  {HTMLElement} contextElement The context node\n   * @returns {object} The storage object\n   * @private\n   */\n\n\n  _createClass(Context, [{\n    key: \"advertiseAs\",\n\n    /**\n     * Attaches a Helper to the context, so that it can be found later on.\n     * @param {CIQ.UI.Helper} uiHelper A UI Helper to attach\n     * @param {string} helperName The helperName of the element. For instance \"Loader\"\n     * @memberof CIQ.UI.Context\n     */\n    value: function advertiseAs(uiHelper, helperName) {\n      this.advertised[helperName] = uiHelper;\n    }\n    /**\n     * Finds the nearest (parent) node that contains the class (CIQ.UI.Element type) referenced\n     * by an stxtap attribute. Returns null if none found.\n     * @param  {string} helperName The type of UI Helper to look for\n     * @return {Array.CIQ.UI.Helper} The associated array of helpers or null if none found\n     * @memberof CIQ.UI.Context\n     * @private\n     */\n\n  }, {\n    key: \"getAdvertised\",\n    value: function getAdvertised(helperName) {\n      return this.advertised[helperName];\n    }\n    /**\n     * Attaches a loader to a UI context\n     * @param {CIQ.UI.Loader} loader Loader instance\n     * @memberof CIQ.UI.Context\n     */\n\n  }, {\n    key: \"setLoader\",\n    value: function setLoader(loader) {\n      this.loader = loader;\n    }\n    /**\n     * Is the context in modal mode?\n     * @return {Boolean} true if in modal mode\n     * @memberof CIQ.UI.Context\n     */\n\n  }, {\n    key: \"isModal\",\n    value: function isModal() {\n      return this.stx.openDialog !== '';\n    }\n  }], [{\n    key: \"assembleContext\",\n    value: function assembleContext(contextElement) {\n      if (!contextElement.CIQ) {\n        contextElement.CIQ = {};\n      } // claim our namespace\n\n\n      if (!contextElement.CIQ.UI) {\n        contextElement.CIQ.UI = {};\n      }\n\n      if (!contextElement.CIQ.UI.Components) {\n        contextElement.CIQ.UI.Components = [];\n      }\n\n      return contextElement.CIQ.UI;\n    }\n  }]);\n\n  return Context;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Context);\n\n/***/ }),\n\n/***/ \"./src/components/ui/Helper.js\":\n/*!*************************************!*\\\n  !*** ./src/components/ui/Helper.js ***!\n  \\*************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Abstract class for UI Helpers\n * @name CIQ.UI.Helper\n * @constructor\n */\nvar Helper =\n/*#__PURE__*/\nfunction () {\n  function Helper(node, context) {\n    _classCallCheck(this, Helper);\n\n    this.node = node;\n    this.context = context;\n    this.injections = []; // To keep track of injections for later removal\n  }\n  /**\n   * Adds an injection. These will be automatically destroyed if the helper object is destroyed\n   * @param {string} position  \"prepend\" or \"append\"\n   * @param {string} injection The injection name. i.e. \"draw\"\n   * @param {Function} code      The code to be run\n   * @memberof CIQ.UI.Helper\n   */\n\n\n  _createClass(Helper, [{\n    key: \"addInjection\",\n    value: function addInjection(position, injection, code) {\n      this.injections.push(this.context.stx[position](injection, code));\n    }\n    /**\n     * Removes injections from the ChartEngine\n     * @memberof CIQ.UI.Helper\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      for (var i = 0; i < this.injections.length; i++) {\n        this.context.stx.removeInjection(this.injections[i]);\n      }\n\n      this.injections = [];\n    }\n  }]);\n\n  return Helper;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Helper);\n\n/***/ }),\n\n/***/ \"./src/components/ui/Keystroke.js\":\n/*!****************************************!*\\\n  !*** ./src/components/ui/Keystroke.js ***!\n  \\****************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * UI Helper for capturing and handling keystrokes. cb to capture the key. Developer is responsible\n * for calling e.preventDefault() and/or e.stopPropagation();\n *\n * @name CIQ.UI.Keystroke\n * @param {HTMLElement} [node] The node to which to attach, generally the chart container\n * @param {Function} [cb] Callback when key pressed\n * @constructor\n */\nvar Keystroke =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Set this to true to bypass key capture. Shift, CTRL, CMD will still be toggled however\n   * @memberof CIQ.UI.Keystroke\n   * @type {Boolean}\n   */\n  function Keystroke(node, cb) {\n    var _this = this;\n\n    _classCallCheck(this, Keystroke);\n\n    this.keyup = function (e) {\n      var key = e.which;\n\n      if (_this.implementAndroidWorkaround) {\n        _this.androidWorkaroundKeyup(e);\n\n        _this.implementAndroidWorkaround = false;\n        return;\n      }\n\n      switch (key) {\n        case 16:\n          _this.shift = false;\n\n          _this.cb({\n            key: key,\n            e: e,\n            keystroke: _this\n          });\n\n          return;\n\n        case 17:\n        case 18:\n          _this.ctrl = false;\n\n          _this.cb({\n            key: key,\n            e: e,\n            keystroke: _this\n          });\n\n          return;\n\n        case 91:\n          _this.cmd = false;\n\n          _this.cb({\n            key: key,\n            e: e,\n            keystroke: _this\n          });\n\n          return;\n\n        default:\n          break;\n      } // This is where we handle the keystroke, regardless of whether we captured the key with a down or press event\n      // The exception to this is the arrow keys, which are processed in keydown\n\n\n      if (_this.key) {\n        _this.cb({\n          key: _this.key,\n          e: e,\n          keystroke: _this\n        });\n      }\n    };\n\n    this.keydown = function (e) {\n      _this.downValue = e.target.value;\n\n      if (_this.noKeyCapture) {\n        return;\n      }\n\n      var key = e.which;\n\n      if (key === 229 && CIQ.isAndroid) {\n        _this.implementAndroidWorkaround = true;\n        return;\n      }\n\n      if (!_this.ctrl) {\n        if (key !== 91 && key >= 48 && key <= 222 || key === 32) {\n          return;\n        }\n      } // handled by keypress\n\n\n      switch (key) {\n        // eslint-disable-line default-case\n        case 91:\n          _this.cmd = true;\n          return;\n\n        case 16:\n          _this.shift = true;\n          return;\n\n        case 17:\n        case 18:\n          _this.ctrl = true;\n          return;\n\n        case 20:\n          _this.capsLock = !_this.capsLock;\n          return;\n      }\n\n      if (key === 8) {\n        key = 'backspace';\n      } // delete on mac\n\n\n      if (key === 9) {\n        key = 'tab';\n      }\n\n      if (key === 13) {\n        key = 'enter';\n      }\n\n      if (key === 27) {\n        key = 'escape';\n      }\n\n      if (key === 33) {\n        key = 'page up';\n      }\n\n      if (key === 34) {\n        key = 'page down';\n      }\n\n      if (key === 35) {\n        key = 'end';\n      }\n\n      if (key === 36) {\n        key = 'home';\n      }\n\n      if (key === 45) {\n        key = 'insert';\n      }\n\n      if (key === 46) {\n        key = 'delete';\n      }\n\n      _this.key = key; // If you hold a key down, then keydown will repeat. These are the keys\n      // that we want to capture repeat action.\n\n      if (key === 37 || key === 38 || key === 39 || key === 40) {\n        if (key === 37) {\n          key = 'left';\n        }\n\n        if (key === 38) {\n          key = 'up';\n        }\n\n        if (key === 39) {\n          key = 'right';\n        }\n\n        if (key === 40) {\n          key = 'down';\n        }\n\n        _this.key = null;\n\n        _this.cb({\n          key: key,\n          e: e,\n          keystroke: _this\n        });\n      }\n    };\n\n    this.keypress = function (e) {\n      if (_this.noKeyCapture) {\n        return;\n      }\n\n      var key = e.which;\n\n      if (key < 32 || key > 222) {\n        return;\n      } // handled by keydown\n\n\n      _this.key = key;\n    };\n\n    this.onblur = function (e) {\n      _this.ctrl = false;\n\n      _this.cb({\n        key: 17,\n        e: e,\n        keystroke: _this\n      });\n    };\n\n    this.node = node;\n    this.cb = cb;\n    this.initialize();\n    this.shift = false;\n    this.ctrl = false;\n    this.cmd = false;\n    this.capsLock = false;\n    this.downValue = ''; // Android Chrome bug requires a workaround for keyup.\n  } // http://stackoverflow.com/questions/30743490/capture-keys-typed-on-android-virtual-keyboard-using-javascript\n  // On Chrome Android, the keydown/keyup events are broken. We have to figure out the key that was pressed by\n  // examining the value of an input box before (keydown) and after (keyup) and identifying what changed\n  // Note that CIQ.isAndroid is false when the user requests \"desktop site\" and so some input boxes won't work\n  // in that situation. There is no workaround other than to always treat 229 as a false value (it is a swedish character)\n\n\n  _createClass(Keystroke, [{\n    key: \"androidWorkaroundKeyup\",\n    value: function androidWorkaroundKeyup(e) {\n      var newValue = e.target.value;\n      var key;\n\n      if (newValue.length > this.downValue.length) {\n        key = newValue.charCodeAt(newValue.length - 1);\n      } else {\n        key = 'delete';\n      }\n\n      this.cb({\n        key: key,\n        e: e,\n        keystroke: this\n      });\n    } // Managing keystroke events. We will get three key events from the browser: keydown, keyup, keypress\n    // These come in a specific order: http://www.quirksmode.org/dom/events/keys.html\n    // keypress gives you the capitalized or uncapitalized key, unlike keyup/keydown\n    // which only give you the actual physical key that was pressed on the keyboard\n    // keypress is triggered *before* the action modifies the input field\n    //\n    // We can capture keystrokes on the body, or on an input field. What we want to make sure is that\n    // the input field is actually updated when we process the stroke. Since keypress and keydown occur\n    // before the input field is updated, we save any key that has been handled by these in this.key\n    // but we don't process the stroke until the keyup event is fired. This ensures that our handlers\n    // will always have the right key (capitalized) and that input field value will be up to date.\n\n  }, {\n    key: \"initialize\",\n\n    /**\n     * initializes member funcitons\n     * @memberof CIQ.UI.Keystroke\n     */\n    value: function initialize() {\n      this.node.addEventListener('keyup', this.keyup);\n      this.node.addEventListener('keydown', this.keydown);\n      this.node.addEventListener('keypress', this.keypress); // otherwise ctrl-t to switch tabs causes ctrl to get stuck\n\n      window.addEventListener('blur', this.onblur);\n    }\n  }]);\n\n  return Keystroke;\n}();\n\nKeystroke.noKeyCapture = false;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Keystroke);\n\n/***/ }),\n\n/***/ \"./src/components/ui/KeystrokeHub.js\":\n/*!*******************************************!*\\\n  !*** ./src/components/ui/KeystrokeHub.js ***!\n  \\*******************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Helper */ \"./src/components/ui/Helper.js\");\n/* harmony import */ var _Keystroke__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Keystroke */ \"./src/components/ui/Keystroke.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! . */ \"./src/components/ui/index.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/* eslint-disable prefer-destructuring */\n\n\n\n/**\n * UI Helper for capturing and handling keystrokes. A helper or ContextTag can\n * \"claim\" keystrokes and intercept them, otherwise the keystrokes will be handled\n * by keyup and keydown.\n *\n * @param {HTMLElement} [node] The node to which to attach, generally the chart container\n * @param {CIQ.UI.Context} context The context for the chart\n * @param {Object} [params] Parameters to drive the helper\n * @param {Function} [params.cb] Callback to handle hot keys.\n * @name CIQ.UI.KeyboardShortcuts\n * @constructor\n */\n\nvar KeystrokeHub =\n/*#__PURE__*/\nfunction (_Helper) {\n  _inherits(KeystrokeHub, _Helper);\n\n  function KeystrokeHub(node, context, params) {\n    var _this;\n\n    _classCallCheck(this, KeystrokeHub);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(KeystrokeHub).call(this, node, context, params));\n    _this.node = node;\n    _this.context = context;\n    _this.params = params || {};\n    KeystrokeHub.instance = _assertThisInitialized(_this);\n\n    var self = _assertThisInitialized(_this);\n\n    function handler() {\n      return function () {\n        self.handler.apply(self, arguments);\n      };\n    }\n\n    _this.keystroke = new _Keystroke__WEBPACK_IMPORTED_MODULE_1__[\"default\"](node, handler());\n    return _this;\n  }\n  /**\n   * Global default hotkey method. Pass this or your own metho in to CIQ.UI.KeystrokeHub\n   * @memberof CIQ.UI.KeyboardShortcuts\n   * @param  {number} key The pressed key\n   * @param  {CIQ.UI.KeystrokeHub} hub The hub that processed the key\n   * @return {boolean}     Return true if you captured the key\n   */\n\n\n  _createClass(KeystrokeHub, [{\n    key: \"setActiveContext\",\n\n    /**\n     * Change the active context for the hub, for instance when dealing with multiple charts\n     * @param {CIQ.UI.Context} context The context\n     * @memberof CIQ.UI.KeystrokeHub\n     */\n    value: function setActiveContext(context) {\n      this.context = context;\n    }\n    /**\n     * @param hub\n     * @param key\n     * @param e Event\n     * @param keystroke\n     * @memberof CIQ.UI.KeystrokeHub\n     * @private\n     */\n\n  }, {\n    key: \"processKeyStrokeClaims\",\n    value: function processKeyStrokeClaims(hub, key, e, keystroke) {\n      for (var i = ___WEBPACK_IMPORTED_MODULE_2__[\"claims\"].length - 1; i > -1; i--) {\n        var helper = ___WEBPACK_IMPORTED_MODULE_2__[\"claims\"][i].helper;\n        var response = helper.keyStroke(hub, key, e, keystroke);\n\n        if (response) {\n          if (!response.allowDefault) {\n            e.preventDefault();\n          }\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"addClaim\",\n    value: function addClaim(helper) {\n      ___WEBPACK_IMPORTED_MODULE_2__[\"claims\"].push({\n        helper: helper\n      });\n    }\n  }, {\n    key: \"removeClaim\",\n    value: function removeClaim(helper) {\n      for (var i = 0; i < ___WEBPACK_IMPORTED_MODULE_2__[\"claims\"].length; i++) {\n        if (___WEBPACK_IMPORTED_MODULE_2__[\"claims\"][i].helper === helper) {\n          ___WEBPACK_IMPORTED_MODULE_2__[\"claims\"].splice(i, 1);\n          return;\n        }\n      }\n    }\n    /**\n     * Handles keystrokes\n     * @param  {object} obj Event object\n     * @memberof CIQ.UI.KeystrokeHub\n     * @private\n     */\n\n  }, {\n    key: \"handler\",\n    value: function handler(obj) {\n      if (!this.context) {\n        return;\n      }\n\n      var stx = this.context.stx;\n\n      if (stx.editingAnnotation) {\n        return;\n      }\n\n      var e = obj.e,\n          key = obj.key,\n          keystroke = obj.keystroke,\n          targetTagName = obj.e.target.tagName;\n\n      switch (key) {\n        case 16:\n          stx.shift = keystroke.shift;\n          break;\n\n        case 17:\n        case 18:\n          stx.ctrl = keystroke.ctrl;\n          break;\n\n        case 91:\n          stx.cmd = keystroke.cmd;\n          break;\n\n        case 20:\n          this.capsLock = !this.capsLock;\n          break;\n\n        default:\n          break;\n      }\n\n      if (!CIQ.ChartEngine.drawingLine) {\n        if (this.processKeyStrokeClaims(this, key, e, keystroke)) {\n          return;\n        }\n      }\n\n      if (key !== 'escape') {\n        if (this.context.isModal()) {\n          return;\n        }\n      }\n\n      if (targetTagName === 'INPUT' || targetTagName === 'TEXTAREA') {\n        return;\n      } // target is not the chart\n\n\n      if (this.params.cb) {\n        if (this.params.cb(key, this)) {\n          e.preventDefault();\n        }\n      }\n    }\n  }], [{\n    key: \"defaultHotKeys\",\n    value: function defaultHotKeys(key, hub) {\n      var stx = hub.context.stx;\n      var push = 1;\n\n      switch (key) {\n        case 'up':\n          stx.zoomIn();\n          break;\n\n        case 'down':\n          stx.zoomOut();\n          break;\n\n        case 'home':\n          stx.home();\n          stx.headsUpHR();\n          break;\n\n        case 'end':\n          stx.chart.scroll = stx.chart.dataSet.length;\n          stx.draw();\n          stx.headsUpHR();\n          break;\n\n        case 'left':\n          if (stx.ctrl) {\n            stx.zoomOut();\n          } else {\n            push = 1;\n\n            if (stx.shift || hub.capsLock) {\n              push = Math.max(5, 5 * (8 - Math.round(stx.layout.candleWidth)));\n            }\n\n            if (stx.chart.scroll + push >= stx.chart.dataSet.length) {\n              push = stx.chart.dataSet.length - stx.chart.scroll;\n            }\n\n            stx.chart.scroll += push;\n            stx.draw();\n            stx.headsUpHR();\n          }\n\n          break;\n\n        case 'right':\n          if (stx.ctrl) {\n            stx.zoomIn();\n          } else {\n            push = 1;\n\n            if (stx.shift || hub.capsLock) {\n              push = Math.max(5, 5 * (8 - Math.round(stx.layout.candleWidth)));\n            }\n\n            stx.chart.scroll -= push;\n            stx.draw();\n            stx.headsUpHR();\n          }\n\n          break;\n\n        case 'delete':\n        case 'backspace':\n          if (CIQ.ChartEngine.drawingLine) {\n            stx.undo();\n          } else if (stx.anyHighlighted) {\n            stx.deleteHighlighted();\n          } else {\n            return false;\n          }\n\n          break;\n\n        case 'escape':\n          if (CIQ.ChartEngine.drawingLine) {\n            stx.undo();\n          }\n\n          break;\n\n        default:\n          return false;\n        // not captured\n      }\n\n      return true;\n    }\n  }]);\n\n  return KeystrokeHub;\n}(_Helper__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\nKeystrokeHub.instance = null;\n/* harmony default export */ __webpack_exports__[\"default\"] = (KeystrokeHub);\n\n/***/ }),\n\n/***/ \"./src/components/ui/index.js\":\n/*!************************************!*\\\n  !*** ./src/components/ui/index.js ***!\n  \\************************************/\n/*! exports provided: claims */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"claims\", function() { return claims; });\n/**\n * Set this flag to true to bypass bindings when adding a component to the DOM.\n * For instance when components are created by html2canvas we don't want them to do any heavy lifting.\n * @type {Boolean}\n */\nvar claims = [];\n\n/***/ }),\n\n/***/ \"./src/components/ui/utils.js\":\n/*!************************************!*\\\n  !*** ./src/components/ui/utils.js ***!\n  \\************************************/\n/*! exports provided: getParents, createElement, aggregation, setHidden, downloadURI */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getParents\", function() { return getParents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createElement\", function() { return createElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"aggregation\", function() { return aggregation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setHidden\", function() { return setHidden; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"downloadURI\", function() { return downloadURI; });\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// jQuery parents() vanilla alternative: https://stackoverflow.com/a/12981248/1471258\nfunction getParents(el) {\n  var parentSelector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';\n  var parentElement = document.querySelector(parentSelector);\n\n  if (!parentElement) {\n    return [];\n  }\n\n  var parents = [];\n  var p = el.parentNode;\n\n  while (p !== parentElement) {\n    // if parentElement is not in hierarchy\n    if (p === null) {\n      return [];\n    }\n\n    parents.push(p);\n    p = p.parentNode;\n  } // Include parent element in parents\n\n\n  parents.push(parentElement);\n  return parents;\n}\nfunction createElement(html) {\n  var wrapper = document.createElement('div');\n  wrapper.innerHTML = html;\n  return wrapper.firstChild;\n} // Auxiliary function that enables multiple inheritence with es6 classes: https://stackoverflow.com/a/45332959/1471258\n\nfunction aggregation(baseClass) {\n  for (var _len = arguments.length, mixins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    mixins[_key - 1] = arguments[_key];\n  }\n\n  var copyProps = function copyProps(target, source) {\n    // this function copies all properties and symbols, filtering out some special ones\n    Object.getOwnPropertyNames(source).concat(Object.getOwnPropertySymbols(source)).forEach(function (prop) {\n      if (!prop.match(/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/)) {\n        Object.defineProperty(target, prop, Object.getOwnPropertyDescriptor(source, prop));\n      }\n    });\n  };\n\n  var base =\n  /*#__PURE__*/\n  function (_baseClass) {\n    _inherits(base, _baseClass);\n\n    function base() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, base);\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(base)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      mixins.forEach(function (mixin) {\n        copyProps(_assertThisInitialized(_this), new mixin()); // eslint-disable-line new-cap\n      });\n      return _this;\n    }\n\n    return base;\n  }(baseClass);\n\n  mixins.forEach(function (mixin) {\n    // outside contructor() to allow aggregation(A,B,C).staticFunction() to be called etc.\n    copyProps(base.prototype, mixin.prototype);\n    copyProps(base, mixin);\n  });\n  return base;\n}\nfunction setHidden(element, isHidden) {\n  if (isHidden) {\n    element.setAttribute('hidden', true);\n  } else {\n    element.removeAttribute('hidden');\n  }\n}\nfunction downloadURI(uri, name) {\n  var link = document.createElement('a');\n  link.download = name;\n  link.href = uri;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n\n/***/ }),\n\n/***/ \"./src/feed/Feed.js\":\n/*!**************************!*\\\n  !*** ./src/feed/Feed.js ***!\n  \\**************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! event-emitter-es6 */ \"./node_modules/event-emitter-es6/index.js\");\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _TickHistoryFormatter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TickHistoryFormatter */ \"./src/feed/TickHistoryFormatter.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\n/* harmony import */ var _subscription__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./subscription */ \"./src/feed/subscription/index.js\");\n/* harmony import */ var _utils_ServerTime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/ServerTime */ \"./src/utils/ServerTime.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\nvar Feed =\n/*#__PURE__*/\nfunction () {\n  _createClass(Feed, [{\n    key: \"startEpoch\",\n    get: function get() {\n      return this._mainStore.state.startEpoch;\n    }\n  }, {\n    key: \"endEpoch\",\n    get: function get() {\n      return this._mainStore.state.endEpoch;\n    }\n  }, {\n    key: \"granularity\",\n    get: function get() {\n      return this._mainStore.chart.granularity;\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this._mainStore.chart.context;\n    }\n  }, {\n    key: \"loader\",\n    get: function get() {\n      return this._mainStore.loader;\n    }\n  }, {\n    key: \"margin\",\n    get: function get() {\n      return this._mainStore.state.margin;\n    }\n  }], [{\n    key: \"EVENT_MASTER_DATA_UPDATE\",\n    get: function get() {\n      return 'EVENT_MASTER_DATA_UPDATE';\n    }\n  }, {\n    key: \"EVENT_MASTER_DATA_REINITIALIZE\",\n    get: function get() {\n      return 'EVENT_MASTER_DATA_REASSIGN';\n    }\n  }, {\n    key: \"EVENT_COMPARISON_DATA_UPDATE\",\n    get: function get() {\n      return 'EVENT_COMPARISON_DATA_UPDATE';\n    }\n  }, {\n    key: \"EVENT_START_PAGINATION\",\n    get: function get() {\n      return 'EVENT_START_PAGINATION';\n    }\n  }, {\n    key: \"EVENT_ON_PAGINATION\",\n    get: function get() {\n      return 'EVENT_ON_PAGINATION';\n    }\n  }]);\n\n  function Feed(binaryApi, stx, mainStore, tradingTimes) {\n    var _this = this;\n\n    _classCallCheck(this, Feed);\n\n    this._activeStreams = {};\n    this._isConnectionOpened = true;\n\n    this.onRangeChanged = function (forceLoad) {\n      var periodicity = Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"calculateTimeUnitInterval\"])(_this.granularity);\n      var rangeTime = (_this.granularity || 1) * _this._stx.chart.maxTicks;\n      var dtLeft = null;\n      var dtRight = null;\n\n      _this._mainStore.state.setChartIsReady(false);\n\n      if (!_this.endEpoch) {\n        if (_this.startEpoch) {\n          dtLeft = _this.startEpoch ? CIQ.strToDateTime(Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"getUTCDate\"])(_this.startEpoch)) : undefined;\n        }\n      } else {\n        dtLeft = CIQ.strToDateTime(Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"getUTCDate\"])(_this.startEpoch || _this.endEpoch - rangeTime));\n        dtRight = CIQ.strToDateTime(Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"getUTCDate\"])(_this.endEpoch));\n      }\n\n      _this._stx.setRange({\n        dtLeft: dtLeft,\n        dtRight: dtRight,\n        periodicity: periodicity,\n        forceLoad: forceLoad\n      }, function () {\n        if (!_this.endEpoch && !_this.startEpoch) {\n          _this._stx.home();\n\n          delete _this._stx.layout.range;\n        } else {\n          _this.scaleChart();\n        }\n\n        _this._mainStore.state.saveLayout();\n\n        _this._mainStore.state.setChartIsReady(true);\n      });\n    };\n\n    this._stx = stx;\n    this._binaryApi = binaryApi;\n    this._mainStore = mainStore;\n    this._serverTime = _utils_ServerTime__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getInstance();\n    this._tradingTimes = tradingTimes;\n    Object(mobx__WEBPACK_IMPORTED_MODULE_1__[\"reaction\"])(function () {\n      return mainStore.state.isConnectionOpened;\n    }, this.onConnectionChanged.bind(this));\n    this._emitter = new event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default.a({\n      emitDelay: 0\n    });\n  }\n\n  _createClass(Feed, [{\n    key: \"scaleChart\",\n    value: function scaleChart() {\n      if (this.startEpoch) {\n        if (this._stx.animations.liveScroll && this._stx.animations.liveScroll.running) {\n          this._stx.animations.liveScroll.stop();\n        }\n\n        if (!this.endEpoch) {\n          this._stx.maxMasterDataSize = 0;\n          this._stx.chart.lockScroll = true;\n        } else {\n          this._stx.chart.isDisplayFullMode = false;\n          this._stx.chart.lockScroll = false;\n        }\n\n        this._stx.setMaxTicks(this._stx.chart.dataSet.length + (Math.floor(this._stx.chart.dataSet.length / 5) || 2));\n\n        this._stx.chart.scroll = this._stx.chart.dataSet.length;\n        this._stx.chart.isScrollLocationChanged = true;\n\n        this._stx.draw();\n      }\n    } // although not used, subscribe is overridden so that unsubscribe will be called by ChartIQ\n\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {} // Do not call explicitly! Method below is called by ChartIQ when unsubscribing symbols.\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(_ref) {\n      var symbol = _ref.symbol,\n          period = _ref.period,\n          interval = _ref.interval;\n      // the chart forgets the ticks_history of the main chart symbol before sending a new request in fetchInitialData function.\n      if (this._stx.chart.symbol === symbol) return;\n      var granularity = Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"calculateGranularity\"])(period, interval);\n\n      var key = this._getKey({\n        symbol: symbol,\n        granularity: granularity\n      });\n\n      this._forgetStream(key);\n    }\n  }, {\n    key: \"_forgetStream\",\n    value: function _forgetStream(key) {\n      if (this._activeStreams[key]) {\n        this._activeStreams[key].forget();\n\n        delete this._activeStreams[key];\n      }\n    }\n  }, {\n    key: \"fetchInitialData\",\n    value: function () {\n      var _fetchInitialData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(symbol, suggestedStartDate, suggestedEndDate, params, callback) {\n        var _this2 = this;\n\n        var period, interval, symbolObject, granularity, key, localDate, isComparisonChart, start, end, comparisonChartSymbol, symbolName, dataCallback, tickHistoryRequest, getHistoryOnly, quotes, subscription, delay, text, response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setHasReachedEndOfData(false);\n                period = params.period, interval = params.interval, symbolObject = params.symbolObject;\n                granularity = Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"calculateGranularity\"])(period, interval);\n                key = this._getKey({\n                  symbol: symbol,\n                  granularity: granularity\n                });\n                localDate = this._serverTime.getLocalDate();\n                suggestedStartDate = suggestedStartDate > localDate ? localDate : suggestedStartDate;\n                isComparisonChart = this._stx.chart.symbol !== symbol;\n                start = this.startEpoch || Math.floor(suggestedStartDate / 1000 | 0);\n                start = this.margin && this.startEpoch ? start - this.margin : start;\n                end = this.margin && this.endEpoch ? this.endEpoch + this.margin : this.endEpoch;\n\n                if (isComparisonChart) {\n                  // Strange issue where comparison series is offset by timezone...\n                  start -= suggestedStartDate.getTimezoneOffset() * 60;\n                }\n\n                comparisonChartSymbol = isComparisonChart ? symbol : undefined;\n                symbolName = symbolObject.name;\n                this.loader.setState('chart-data');\n\n                if (!this._tradingTimes.isFeedUnavailable(symbol)) {\n                  _context.next = 20;\n                  break;\n                }\n\n                this._mainStore.notifier.notifyFeedUnavailable(symbolName);\n\n                dataCallback = {\n                  quotes: []\n                };\n\n                if (isComparisonChart) {\n                  // Passing error will prevent the chart from being shown; for\n                  // main chart we still want the chart to be shown, just disabled\n                  dataCallback = _objectSpread({\n                    error: 'StreamingNotAllowed',\n                    suppressAlert: true\n                  }, dataCallback);\n                } else {\n                  this._mainStore.chart.setChartAvailability(false);\n                }\n\n                callback(dataCallback);\n                return _context.abrupt(\"return\");\n\n              case 20:\n                tickHistoryRequest = {\n                  start: start,\n                  symbol: symbol,\n                  granularity: granularity\n                };\n                getHistoryOnly = false;\n\n                if (!end) {\n                  _context.next = 27;\n                  break;\n                }\n\n                // When there is end; no streaming required\n                tickHistoryRequest.end = end;\n                getHistoryOnly = true;\n                _context.next = 53;\n                break;\n\n              case 27:\n                if (!this._tradingTimes.isMarketOpened(symbol)) {\n                  _context.next = 51;\n                  break;\n                }\n\n                delay = this._tradingTimes.getDelayedMinutes(symbol);\n\n                if (delay > 0) {\n                  this._mainStore.notifier.notifyDelayedMarket(symbolName, delay);\n\n                  subscription = new _subscription__WEBPACK_IMPORTED_MODULE_4__[\"DelayedSubscription\"](tickHistoryRequest, this._binaryApi, this._stx, delay);\n                } else {\n                  subscription = new _subscription__WEBPACK_IMPORTED_MODULE_4__[\"RealtimeSubscription\"](tickHistoryRequest, this._binaryApi, this._stx);\n                }\n\n                _context.prev = 30;\n\n                // The chart should forget all ticks_history subscriptions when the symbol/granularity of the main chart is changed before sending the new request.\n                if (!isComparisonChart) {\n                  this.unsubscribeAll();\n                }\n\n                _context.next = 34;\n                return subscription.initialFetch();\n\n              case 34:\n                quotes = _context.sent;\n                _context.next = 43;\n                break;\n\n              case 37:\n                _context.prev = 37;\n                _context.t0 = _context[\"catch\"](30);\n                text = _context.t0.message;\n\n                this._mainStore.notifier.notify({\n                  text: text,\n                  type: 'error',\n                  category: 'activesymbol'\n                });\n\n                callback({\n                  quotes: []\n                });\n                return _context.abrupt(\"return\");\n\n              case 43:\n                subscription.onChartData(function (tickResponse) {\n                  // Append comming ticks to chart only if it belongs to selected symbol after symbol changes\n                  if (isComparisonChart || symbol === _this2._stx.chart.symbol) {\n                    if (_this2._stx.isDestroyed) return;\n\n                    _this2._appendChartData(tickResponse, key, comparisonChartSymbol);\n                  }\n                }); // if symbol is changed before request is completed, past request needs to be forgotten:\n\n                if (!(!isComparisonChart && this._stx.chart.symbol !== symbol)) {\n                  _context.next = 48;\n                  break;\n                }\n\n                callback({\n                  quotes: []\n                });\n                subscription.forget();\n                return _context.abrupt(\"return\");\n\n              case 48:\n                this._activeStreams[key] = subscription;\n                _context.next = 53;\n                break;\n\n              case 51:\n                this._mainStore.notifier.notifyMarketClose(symbolName); // Although market is closed, we display the past tick history data\n\n\n                getHistoryOnly = true;\n\n              case 53:\n                if (!getHistoryOnly) {\n                  _context.next = 58;\n                  break;\n                }\n\n                _context.next = 56;\n                return this._binaryApi.getTickHistory(tickHistoryRequest);\n\n              case 56:\n                response = _context.sent;\n                quotes = _TickHistoryFormatter__WEBPACK_IMPORTED_MODULE_2__[\"TickHistoryFormatter\"].formatHistory(response);\n\n              case 58:\n                if (quotes) {\n                  _context.next = 62;\n                  break;\n                }\n\n                console.error('No quotes found!!');\n                callback({\n                  quotes: []\n                });\n                return _context.abrupt(\"return\");\n\n              case 62:\n                quotes = this._trimQuotes(quotes);\n                callback({\n                  quotes: quotes\n                });\n\n                this._mainStore.chart.updateYaxisWidth();\n\n                this.scaleChart();\n\n                this._emitDataUpdate(quotes, comparisonChartSymbol, true);\n\n                this._mainStore.state.setMaxtTick();\n\n              case 68:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[30, 37]]);\n      }));\n\n      function fetchInitialData(_x, _x2, _x3, _x4, _x5) {\n        return _fetchInitialData.apply(this, arguments);\n      }\n\n      return fetchInitialData;\n    }()\n  }, {\n    key: \"fetchPaginationData\",\n    value: function () {\n      var _fetchPaginationData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(symbol, suggestedStartDate, endDate, params, callback) {\n        var end, start, period, interval, granularity, isMainChart;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                end = Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"getUTCEpoch\"])(endDate);\n                start = Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"getUTCEpoch\"])(suggestedStartDate);\n                period = params.period, interval = params.interval;\n                granularity = Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"calculateGranularity\"])(period, interval);\n                isMainChart = this._stx.chart.symbol === symbol;\n\n                if (isMainChart) {\n                  // ignore comparisons\n                  this._emitter.emit(Feed.EVENT_START_PAGINATION, {\n                    start: start,\n                    end: end\n                  });\n                }\n\n                _context2.next = 8;\n                return this._getPaginationData(symbol, granularity, start, end, callback);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function fetchPaginationData(_x6, _x7, _x8, _x9, _x10) {\n        return _fetchPaginationData.apply(this, arguments);\n      }\n\n      return fetchPaginationData;\n    }()\n  }, {\n    key: \"_getPaginationData\",\n    value: function () {\n      var _getPaginationData2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(symbol, granularity, start, end, callback) {\n        var isMainChart, now, startLimit, result, firstEpoch, response, text, newStart, paginationEnd;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                isMainChart = this._stx.chart.symbol === symbol; // TODO There is no need to get historical data before startTime\n\n                if (!(this.startEpoch\n                /* && start < this.startEpoch */\n                || this.endEpoch && end > this.endEpoch)) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                callback({\n                  moreAvailable: false,\n                  quotes: []\n                });\n\n                if (isMainChart) {\n                  // ignore comparisons\n                  this._emitter.emit(Feed.EVENT_ON_PAGINATION, {\n                    start: start,\n                    end: end\n                  });\n\n                  this.setHasReachedEndOfData(true);\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 5:\n                now = this._serverTime.getEpoch(); // Tick history data only goes as far back as 3 years:\n\n                startLimit = now - Math.ceil(2.8 * 365 * 24 * 60 * 60);\n                /* == 3 Years */\n\n                result = {\n                  quotes: []\n                };\n\n                if (!(end > startLimit)) {\n                  _context3.next = 37;\n                  break;\n                }\n\n                _context3.prev = 9;\n                _context3.next = 12;\n                return this._binaryApi.getTickHistory({\n                  symbol: symbol,\n                  granularity: granularity,\n                  start: Math.floor(Math.max(start, startLimit)),\n                  end: end\n                });\n\n              case 12:\n                response = _context3.sent;\n\n                if (!response.error) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                text = response.error.message;\n                this.loader.hide();\n\n                this._mainStore.notifier.notify({\n                  text: text,\n                  type: 'error',\n                  category: 'activesymbol'\n                });\n\n                callback({\n                  error: response.error\n                });\n                return _context3.abrupt(\"return\");\n\n              case 19:\n                firstEpoch = Feed.getFirstEpoch(response);\n\n                if (!(firstEpoch === undefined || firstEpoch === end)) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                newStart = start - (end - start);\n\n                if (!(newStart <= startLimit)) {\n                  _context3.next = 26;\n                  break;\n                }\n\n                // Passed available range. Prevent anymore pagination requests:\n                callback({\n                  moreAvailable: false,\n                  quotes: []\n                });\n                this.setHasReachedEndOfData(true);\n                return _context3.abrupt(\"return\");\n\n              case 26:\n                _context3.next = 28;\n                return this._getPaginationData(symbol, granularity, newStart, end, callback);\n\n              case 28:\n                return _context3.abrupt(\"return\");\n\n              case 29:\n                result.quotes = _TickHistoryFormatter__WEBPACK_IMPORTED_MODULE_2__[\"TickHistoryFormatter\"].formatHistory(response);\n\n                if (firstEpoch <= startLimit) {\n                  callback({\n                    moreAvailable: false,\n                    quotes: []\n                  });\n                  this.setHasReachedEndOfData(true);\n                }\n\n                _context3.next = 37;\n                break;\n\n              case 33:\n                _context3.prev = 33;\n                _context3.t0 = _context3[\"catch\"](9);\n                console.error(_context3.t0);\n                result = {\n                  error: _context3.t0\n                };\n\n              case 37:\n                callback(result);\n\n                if (isMainChart) {\n                  // ignore comparisons\n                  // prevent overlapping by setting pagination end as firstEpoch\n                  // if 'end' is greater than firstEpoch from feed\n                  paginationEnd = end > firstEpoch ? firstEpoch : end;\n\n                  this._emitter.emit(Feed.EVENT_ON_PAGINATION, {\n                    start: start,\n                    end: paginationEnd\n                  });\n                }\n\n              case 39:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[9, 33]]);\n      }));\n\n      function _getPaginationData(_x11, _x12, _x13, _x14, _x15) {\n        return _getPaginationData2.apply(this, arguments);\n      }\n\n      return _getPaginationData;\n    }()\n  }, {\n    key: \"setHasReachedEndOfData\",\n    value: function setHasReachedEndOfData(hasReachedEndOfData) {\n      if (this._mainStore.state.hasReachedEndOfData !== hasReachedEndOfData) {\n        this._mainStore.state.hasReachedEndOfData = hasReachedEndOfData;\n      }\n    }\n  }, {\n    key: \"unsubscribeAll\",\n    value: function unsubscribeAll() {\n      for (var _i = 0, _Object$keys = Object.keys(this._activeStreams); _i < _Object$keys.length; _i++) {\n        var key = _Object$keys[_i];\n\n        this._forgetStream(key);\n      }\n    }\n  }, {\n    key: \"_forgetIfEndEpoch\",\n    value: function _forgetIfEndEpoch(key) {\n      var subscription = this._activeStreams[key];\n      var result = true;\n\n      if (!subscription) {\n        return;\n      }\n\n      var lastEpoch = subscription.lastStreamEpoch;\n\n      if (this.endEpoch && lastEpoch + this.granularity > this.endEpoch) {\n        if (this._activeStreams[key] && this.granularity === 0 && !this._mainStore.state.isStaticChart && CIQ.strToDateTime(Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"getUTCDate\"])(this.endEpoch)).valueOf() >= this._stx.chart.dataSet.slice(-1)[0].DT.valueOf()) {\n          result = false;\n        }\n\n        this._forgetStream(key);\n      } else {\n        result = false;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_appendChartData\",\n    value: function _appendChartData(quotes, key, comparisonChartSymbol) {\n      if (this._forgetIfEndEpoch(key) && !this._activeStreams[key]) {\n        quotes = [];\n        return;\n      }\n\n      if (this.endEpoch && CIQ.strToDateTime(Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"getUTCDate\"])(this.endEpoch)).valueOf() !== this._stx.chart.dataSet.slice(-1)[0].DT.valueOf()) {\n        this._stx.updateChartData([{\n          DT: CIQ.strToDateTime(Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"getUTCDate\"])(this.endEpoch)),\n          Close: null\n        }], null, {\n          fillGaps: true\n        });\n\n        this._stx.createDataSet();\n      }\n\n      if (comparisonChartSymbol) {\n        this._stx.updateChartData(quotes, null, {\n          secondarySeries: comparisonChartSymbol,\n          noCreateDataSet: true\n        });\n      } else {\n        this._stx.updateChartData(quotes, null, {\n          allowReplaceOHL: true\n        });\n\n        this._stx.createDataSet();\n      }\n\n      this._emitDataUpdate(quotes, comparisonChartSymbol);\n    }\n  }, {\n    key: \"_emitDataUpdate\",\n    value: function _emitDataUpdate(quotes, comparisonChartSymbol) {\n      var isChartReinitialized = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var prev = quotes[quotes.length - 2];\n      var prevClose = prev !== undefined ? prev.Close : undefined;\n\n      var dataUpdate = _objectSpread({}, quotes[quotes.length - 1], {\n        prevClose: prevClose\n      });\n\n      if (!comparisonChartSymbol) {\n        if (isChartReinitialized) {\n          this._emitter.emit(Feed.EVENT_MASTER_DATA_REINITIALIZE);\n\n          this._mainStore.chart.setChartAvailability(true);\n        } else {\n          this._emitter.emit(Feed.EVENT_MASTER_DATA_UPDATE, dataUpdate);\n        }\n      } else {\n        this._emitter.emit(Feed.EVENT_COMPARISON_DATA_UPDATE, _objectSpread({\n          symbol: comparisonChartSymbol\n        }, dataUpdate));\n      }\n    }\n  }, {\n    key: \"onMasterDataUpdate\",\n    value: function onMasterDataUpdate(callback) {\n      this._emitter.on(Feed.EVENT_MASTER_DATA_UPDATE, callback);\n    }\n  }, {\n    key: \"offMasterDataUpdate\",\n    value: function offMasterDataUpdate(callback) {\n      this._emitter.off(Feed.EVENT_MASTER_DATA_UPDATE, callback);\n    }\n  }, {\n    key: \"onMasterDataReinitialize\",\n    value: function onMasterDataReinitialize(callback) {\n      this._emitter.on(Feed.EVENT_MASTER_DATA_REINITIALIZE, callback);\n    }\n  }, {\n    key: \"offMasterDataReinitialize\",\n    value: function offMasterDataReinitialize(callback) {\n      this._emitter.off(Feed.EVENT_MASTER_DATA_REINITIALIZE, callback);\n    }\n  }, {\n    key: \"onComparisonDataUpdate\",\n    value: function onComparisonDataUpdate(callback) {\n      this._emitter.on(Feed.EVENT_COMPARISON_DATA_UPDATE, callback);\n    }\n  }, {\n    key: \"onPagination\",\n    value: function onPagination(callback) {\n      this._emitter.on(Feed.EVENT_ON_PAGINATION, callback);\n    }\n  }, {\n    key: \"offPagination\",\n    value: function offPagination(callback) {\n      this._emitter.off(Feed.EVENT_ON_PAGINATION, callback);\n    }\n  }, {\n    key: \"onStartPagination\",\n    value: function onStartPagination(callback) {\n      this._emitter.on(Feed.EVENT_START_PAGINATION, callback);\n    }\n  }, {\n    key: \"offStartPagination\",\n    value: function offStartPagination(callback) {\n      this._emitter.off(Feed.EVENT_START_PAGINATION, callback);\n    }\n  }, {\n    key: \"onConnectionChanged\",\n    value: function onConnectionChanged() {\n      var isOpened = this._mainStore.state.isConnectionOpened;\n\n      if (isOpened === undefined || isOpened === this._isConnectionOpened) {\n        return;\n      }\n\n      this._isConnectionOpened = isOpened;\n\n      if (isOpened) {\n        this._onConnectionReopened();\n      } else {\n        this._onConnectionClosed();\n      }\n    }\n  }, {\n    key: \"_onConnectionClosed\",\n    value: function _onConnectionClosed() {\n      for (var key in this._activeStreams) {\n        this._activeStreams[key].pause();\n      }\n\n      this._connectionClosedDate = new Date();\n    }\n  }, {\n    key: \"_onConnectionReopened\",\n    value: function _onConnectionReopened() {\n      var keys = Object.keys(this._activeStreams);\n\n      if (keys.length === 0) {\n        return;\n      }\n\n      var _this$_unpackKey = this._unpackKey(keys[0]),\n          granularity = _this$_unpackKey.granularity;\n\n      var elapsedSeconds = (new Date() - this._connectionClosedDate) / 1000 | 0;\n      var maxIdleSeconds = (granularity || 1) * this._stx.chart.maxTicks;\n\n      if (elapsedSeconds >= maxIdleSeconds) {\n        this._mainStore.chart.refreshChart();\n      } else {\n        for (var _i2 = 0, _keys = keys; _i2 < _keys.length; _i2++) {\n          var key = _keys[_i2];\n\n          this._resumeStream(key);\n        }\n      }\n\n      this._connectionClosedDate = undefined;\n    }\n  }, {\n    key: \"_resumeStream\",\n    value: function _resumeStream(key) {\n      var _this3 = this;\n\n      var _this$_unpackKey2 = this._unpackKey(key),\n          symbol = _this$_unpackKey2.symbol;\n\n      var comparisonChartSymbol = this._stx.chart.symbol !== symbol ? symbol : undefined;\n\n      this._activeStreams[key].resume().then(function (quotes) {\n        if (_this3._stx.isDestroyed) return;\n\n        _this3._appendChartData(quotes, key, comparisonChartSymbol);\n      });\n    }\n  }, {\n    key: \"_getKey\",\n    value: function _getKey(_ref2) {\n      var symbol = _ref2.symbol,\n          granularity = _ref2.granularity;\n      return \"\".concat(symbol, \"-\").concat(granularity);\n    }\n  }, {\n    key: \"_unpackKey\",\n    value: function _unpackKey(key) {\n      var _key$split = key.split('-'),\n          _key$split2 = _slicedToArray(_key$split, 2),\n          symbol = _key$split2[0],\n          granularity = _key$split2[1];\n\n      return {\n        symbol: symbol,\n        granularity: +granularity\n      };\n    }\n  }, {\n    key: \"_trimQuotes\",\n    value: function _trimQuotes() {\n      var _this4 = this;\n\n      var quotes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var startTickIndex = null;\n      var endTickIndex = null;\n      var trimmedQuotes = quotes;\n      if (!trimmedQuotes.length) return [];\n\n      if (this.startEpoch && this.margin) {\n        startTickIndex = trimmedQuotes.findIndex(function (tick) {\n          return CIQ.strToDateTime(tick.Date) >= CIQ.strToDateTime(Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"getUTCDate\"])(_this4.startEpoch));\n        });\n\n        if (startTickIndex > -1) {\n          trimmedQuotes = trimmedQuotes.slice(startTickIndex - 1);\n        }\n      }\n\n      if (this.endEpoch && this.margin) {\n        endTickIndex = trimmedQuotes.findIndex(function (tick) {\n          return CIQ.strToDateTime(tick.Date) >= CIQ.strToDateTime(Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"getUTCDate\"])(_this4.endEpoch));\n        });\n\n        if (endTickIndex > -1) {\n          var addon = trimmedQuotes[endTickIndex].Date === Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"getUTCDate\"])(this.endEpoch) ? 2 : 1;\n          trimmedQuotes = trimmedQuotes.slice(0, endTickIndex + addon);\n        }\n      }\n\n      return trimmedQuotes;\n    }\n  }], [{\n    key: \"getFirstEpoch\",\n    value: function getFirstEpoch(_ref3) {\n      var candles = _ref3.candles,\n          history = _ref3.history;\n\n      if (candles && candles.length > 0) {\n        return candles[0].epoch;\n      }\n\n      if (history && history.times.length > 0) {\n        var times = history.times;\n        return +times[0];\n      }\n    }\n  }]);\n\n  return Feed;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Feed);\n\n/***/ }),\n\n/***/ \"./src/feed/TickHistoryFormatter.js\":\n/*!******************************************!*\\\n  !*** ./src/feed/TickHistoryFormatter.js ***!\n  \\******************************************/\n/*! exports provided: TickHistoryFormatter */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TickHistoryFormatter\", function() { return TickHistoryFormatter; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\nvar TickHistoryFormatter =\n/*#__PURE__*/\nfunction () {\n  function TickHistoryFormatter() {\n    _classCallCheck(this, TickHistoryFormatter);\n  }\n\n  _createClass(TickHistoryFormatter, null, [{\n    key: \"formatHistory\",\n    value: function formatHistory(response) {\n      var history = response.history,\n          candles = response.candles;\n\n      if (history) {\n        var times = history.times,\n            prices = history.prices;\n        var quotes = prices.map(function (p, idx) {\n          return {\n            Date: Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getUTCDate\"])(+times[idx]),\n            Close: +p\n          };\n        });\n        return quotes;\n      }\n\n      if (candles) {\n        var _quotes = candles.map(function (c) {\n          return {\n            Date: Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getUTCDate\"])(+c.epoch),\n            Open: +c.open,\n            High: +c.high,\n            Low: +c.low,\n            Close: +c.close\n          };\n        });\n\n        return _quotes;\n      }\n    }\n  }, {\n    key: \"formatTick\",\n    value: function formatTick(response) {\n      var tick = response.tick,\n          ohlc = response.ohlc;\n\n      if (tick) {\n        return {\n          Date: Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getUTCDate\"])(+tick.epoch),\n          Close: +tick.quote,\n          // Keep the origial value.\n          // It'll be used to pass down to deriv.app in BottomWidgets.\n          // TODO: use tick.epoch in RawMarker.jsx to speed up calculations.\n          tick: tick\n        };\n      }\n\n      if (ohlc) {\n        return {\n          Date: Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getUTCDate\"])(+ohlc.open_time),\n          Open: +ohlc.open,\n          High: +ohlc.high,\n          Low: +ohlc.low,\n          Close: +ohlc.close,\n          ohlc: ohlc\n        };\n      }\n    }\n  }]);\n\n  return TickHistoryFormatter;\n}();\n\n/***/ }),\n\n/***/ \"./src/feed/index.js\":\n/*!***************************!*\\\n  !*** ./src/feed/index.js ***!\n  \\***************************/\n/*! exports provided: Feed */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Feed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Feed */ \"./src/feed/Feed.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Feed\", function() { return _Feed__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n\n\n\n/***/ }),\n\n/***/ \"./src/feed/subscription/DelayedSubscription.js\":\n/*!******************************************************!*\\\n  !*** ./src/feed/subscription/DelayedSubscription.js ***!\n  \\******************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Subscription */ \"./src/feed/subscription/Subscription.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\nvar DelayedSubscription =\n/*#__PURE__*/\nfunction (_Subscription) {\n  _inherits(DelayedSubscription, _Subscription);\n\n  function DelayedSubscription(request, api, stx, delay) {\n    var _this;\n\n    _classCallCheck(this, DelayedSubscription);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DelayedSubscription).call(this, request, api, stx));\n    _this._timerId = void 0;\n    _this.UPDATE_INTERVAL = 3000;\n    _this.onUpdateDelayedFeed =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var tickHistoryRequest, response, quotes;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_this.lastStreamEpoch) {\n                _context.next = 9;\n                break;\n              }\n\n              tickHistoryRequest = _objectSpread({}, _this._request, {\n                start: _this.lastStreamEpoch,\n                // When updating delayed feeds, we don't want the\n                // start time to be offset by the delayed amount:\n                adjust_start_time: 0\n              });\n              _context.next = 4;\n              return _this._binaryApi.getTickHistory(tickHistoryRequest);\n\n            case 4:\n              response = _context.sent;\n              quotes = _this._processHistoryResponse(response);\n\n              _this._emitter.emit(_Subscription__WEBPACK_IMPORTED_MODULE_0__[\"default\"].EVENT_CHART_DATA, quotes);\n\n              _context.next = 11;\n              break;\n\n            case 9:\n              console.error('Unable to update delayed feed without epoch from last tick');\n\n              _this._endTimer();\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this._request = _objectSpread({}, _this._request, {\n      // start times must be offset with delay because\n      // there is no data within delay intervals\n      start: _this._request.start - delay * 60\n    });\n    return _this;\n  }\n\n  _createClass(DelayedSubscription, [{\n    key: \"pause\",\n    value: function pause() {\n      this._endTimer();\n    }\n  }, {\n    key: \"_startSubscribe\",\n    value: function () {\n      var _startSubscribe2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(tickHistoryRequest) {\n        var response, quotes;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this._binaryApi.getTickHistory(tickHistoryRequest);\n\n              case 2:\n                response = _context2.sent;\n                quotes = this._processHistoryResponse(response);\n\n                this._startTimer();\n\n                return _context2.abrupt(\"return\", quotes);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _startSubscribe(_x) {\n        return _startSubscribe2.apply(this, arguments);\n      }\n\n      return _startSubscribe;\n    }()\n  }, {\n    key: \"forget\",\n    value: function forget() {\n      this._endTimer();\n\n      _get(_getPrototypeOf(DelayedSubscription.prototype), \"forget\", this).call(this);\n    }\n  }, {\n    key: \"_startTimer\",\n    value: function _startTimer() {\n      if (!this._timerId) {\n        this._timerId = setInterval(this.onUpdateDelayedFeed, this.UPDATE_INTERVAL);\n      }\n    }\n  }, {\n    key: \"_endTimer\",\n    value: function _endTimer() {\n      if (this._timerId) {\n        clearInterval(this._timerId);\n        this._timerId = undefined;\n      }\n    }\n  }]);\n\n  return DelayedSubscription;\n}(_Subscription__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (DelayedSubscription);\n\n/***/ }),\n\n/***/ \"./src/feed/subscription/RealtimeSubscription.js\":\n/*!*******************************************************!*\\\n  !*** ./src/feed/subscription/RealtimeSubscription.js ***!\n  \\*******************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/PendingPromise */ \"./src/utils/PendingPromise.js\");\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subscription */ \"./src/feed/subscription/Subscription.js\");\n/* harmony import */ var _TickHistoryFormatter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../TickHistoryFormatter */ \"./src/feed/TickHistoryFormatter.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\nvar RealtimeSubscription =\n/*#__PURE__*/\nfunction (_Subscription) {\n  _inherits(RealtimeSubscription, _Subscription);\n\n  function RealtimeSubscription() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RealtimeSubscription);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RealtimeSubscription)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this._tickCallback = void 0;\n    return _this;\n  }\n\n  _createClass(RealtimeSubscription, [{\n    key: \"pause\",\n    value: function pause() {\n      // prevent forget requests; active streams are invalid when connection closed\n      this._tickCallback = undefined;\n    }\n  }, {\n    key: \"resume\",\n    value: function () {\n      var _resume = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this._tickCallback) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error('You cannot resume an active stream!');\n\n              case 2:\n                return _context.abrupt(\"return\", _get(_getPrototypeOf(RealtimeSubscription.prototype), \"resume\", this).call(this));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function resume() {\n        return _resume.apply(this, arguments);\n      }\n\n      return resume;\n    }()\n  }, {\n    key: \"_startSubscribe\",\n    value: function () {\n      var _startSubscribe2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(tickHistoryRequest) {\n        var _this$_getProcessTick, _this$_getProcessTick2, tickHistoryPromise, processTickHistory, response, quotes;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$_getProcessTick = this._getProcessTickHistoryClosure(), _this$_getProcessTick2 = _slicedToArray(_this$_getProcessTick, 2), tickHistoryPromise = _this$_getProcessTick2[0], processTickHistory = _this$_getProcessTick2[1];\n\n                this._binaryApi.subscribeTickHistory(tickHistoryRequest, processTickHistory);\n\n                _context2.next = 4;\n                return tickHistoryPromise;\n\n              case 4:\n                response = _context2.sent;\n                quotes = this._processHistoryResponse(response);\n                this._tickCallback = processTickHistory;\n                return _context2.abrupt(\"return\", quotes);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _startSubscribe(_x) {\n        return _startSubscribe2.apply(this, arguments);\n      }\n\n      return _startSubscribe;\n    }()\n  }, {\n    key: \"forget\",\n    value: function forget() {\n      if (this._tickCallback) {\n        var _this$_request = this._request,\n            symbol = _this$_request.symbol,\n            granularity = _this$_request.granularity;\n\n        this._binaryApi.forget({\n          symbol: symbol,\n          granularity: granularity\n        });\n\n        this._tickCallback = undefined;\n      }\n\n      _get(_getPrototypeOf(RealtimeSubscription.prototype), \"forget\", this).call(this);\n    }\n  }, {\n    key: \"_getProcessTickHistoryClosure\",\n    value: function _getProcessTickHistoryClosure() {\n      var _this2 = this;\n\n      var hasHistory = false;\n      var tickHistoryPromise = new _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n\n      var processTickHistory = function processTickHistory(resp) {\n        if (_this2._stx.isDestroyed) {\n          var subscriptionId = resp.subscription.id;\n\n          _this2._binaryApi.forgetStream(subscriptionId);\n\n          return;\n        } // We assume that 1st response is the history, and subsequent\n        // responses are tick stream data.\n\n\n        if (hasHistory) {\n          _this2._onTick(resp);\n\n          return;\n        }\n\n        tickHistoryPromise.resolve(resp);\n        hasHistory = true;\n      };\n\n      return [tickHistoryPromise, processTickHistory];\n    }\n  }, {\n    key: \"_onTick\",\n    value: function _onTick(response) {\n      this.lastStreamEpoch = +_Subscription__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getEpochFromTick(response);\n      var quotes = [_TickHistoryFormatter__WEBPACK_IMPORTED_MODULE_2__[\"TickHistoryFormatter\"].formatTick(response)];\n\n      this._emitter.emit(_Subscription__WEBPACK_IMPORTED_MODULE_1__[\"default\"].EVENT_CHART_DATA, quotes);\n    }\n  }]);\n\n  return RealtimeSubscription;\n}(_Subscription__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (RealtimeSubscription);\n\n/***/ }),\n\n/***/ \"./src/feed/subscription/Subscription.js\":\n/*!***********************************************!*\\\n  !*** ./src/feed/subscription/Subscription.js ***!\n  \\***********************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! event-emitter-es6 */ \"./node_modules/event-emitter-es6/index.js\");\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _TickHistoryFormatter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../TickHistoryFormatter */ \"./src/feed/TickHistoryFormatter.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  _createClass(Subscription, null, [{\n    key: \"EVENT_CHART_DATA\",\n    get: function get() {\n      return 'EVENT_CHART_DATA';\n    }\n  }]);\n\n  function Subscription(request, api, stx) {\n    _classCallCheck(this, Subscription);\n\n    this.lastStreamEpoch = void 0;\n    this._binaryApi = api;\n    this._stx = stx;\n    this._request = request;\n    this._emitter = new event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default.a({\n      emitDelay: 0\n    });\n  }\n\n  _createClass(Subscription, [{\n    key: \"initialFetch\",\n    value: function () {\n      var _initialFetch = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var quotes;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this._startSubscribe(this._request);\n\n              case 2:\n                quotes = _context.sent;\n                return _context.abrupt(\"return\", quotes);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function initialFetch() {\n        return _initialFetch.apply(this, arguments);\n      }\n\n      return initialFetch;\n    }()\n  }, {\n    key: \"pause\",\n    value: function pause() {}\n  }, {\n    key: \"resume\",\n    value: function () {\n      var _resume = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var tickHistoryRequest, quotes;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.lastStreamEpoch) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                tickHistoryRequest = _objectSpread({}, this._request, {\n                  start: this.lastStreamEpoch\n                });\n                _context2.next = 4;\n                return this._startSubscribe(tickHistoryRequest);\n\n              case 4:\n                quotes = _context2.sent;\n                return _context2.abrupt(\"return\", quotes);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function resume() {\n        return _resume.apply(this, arguments);\n      }\n\n      return resume;\n    }()\n  }, {\n    key: \"forget\",\n    value: function forget() {\n      this.lastStreamEpoch = undefined;\n\n      this._emitter.off(Subscription.EVENT_CHART_DATA);\n    }\n  }, {\n    key: \"_startSubscribe\",\n    value: function () {\n      var _startSubscribe2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                throw new Error('Please override!');\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function _startSubscribe() {\n        return _startSubscribe2.apply(this, arguments);\n      }\n\n      return _startSubscribe;\n    }()\n  }, {\n    key: \"_processHistoryResponse\",\n    value: function _processHistoryResponse(response) {\n      if (response.error) {\n        throw response.error;\n      }\n\n      var quotes = _TickHistoryFormatter__WEBPACK_IMPORTED_MODULE_1__[\"TickHistoryFormatter\"].formatHistory(response);\n\n      if (!quotes) {\n        var message = \"Unexpected response: \".concat(response);\n        throw new Error({\n          message: message\n        });\n      }\n\n      this.lastStreamEpoch = Subscription.getLatestEpoch(response);\n      return quotes;\n    }\n  }, {\n    key: \"onChartData\",\n    value: function onChartData(callback) {\n      this._emitter.on(Subscription.EVENT_CHART_DATA, callback);\n    }\n  }], [{\n    key: \"getLatestEpoch\",\n    value: function getLatestEpoch(_ref) {\n      var candles = _ref.candles,\n          history = _ref.history;\n\n      if (candles) {\n        return candles[candles.length - 1].epoch;\n      }\n\n      if (history) {\n        var times = history.times;\n        return times[times.length - 1];\n      }\n    }\n  }, {\n    key: \"getEpochFromTick\",\n    value: function getEpochFromTick(_ref2) {\n      var tick = _ref2.tick,\n          ohlc = _ref2.ohlc;\n      return tick ? tick.epoch : ohlc.open_time;\n    }\n  }]);\n\n  return Subscription;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Subscription);\n\n/***/ }),\n\n/***/ \"./src/feed/subscription/index.js\":\n/*!****************************************!*\\\n  !*** ./src/feed/subscription/index.js ***!\n  \\****************************************/\n/*! exports provided: DelayedSubscription, RealtimeSubscription */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _DelayedSubscription__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DelayedSubscription */ \"./src/feed/subscription/DelayedSubscription.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DelayedSubscription\", function() { return _DelayedSubscription__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _RealtimeSubscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RealtimeSubscription */ \"./src/feed/subscription/RealtimeSubscription.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RealtimeSubscription\", function() { return _RealtimeSubscription__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n\n\n\n\n/***/ }),\n\n/***/ \"./src/index.js\":\n/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/\n/*! exports provided: AssetInformation, Barrier, ChartSetting, ChartSize, ChartTitle, ChartTypes, Comparison, ComparisonList, createObjectFromLocalStorage, CrosshairToggle, DrawTools, Marker, PendingPromise, setSmartChartsPublicPath, Share, SmartChart, StudyLegend, Timeperiod, Views, logEvent, LogCategories, LogActions, default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Marker\", function() { return Marker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSmartChartsPublicPath\", function() { return setSmartChartsPublicPath; });\n/* harmony import */ var _components_Barrier_jsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Barrier.jsx */ \"./src/components/Barrier.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Barrier\", function() { return _components_Barrier_jsx__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/PendingPromise */ \"./src/utils/PendingPromise.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PendingPromise\", function() { return _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony import */ var _components_ChartTypes_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/ChartTypes.jsx */ \"./src/components/ChartTypes.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ChartTypes\", function() { return _components_ChartTypes_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n/* harmony import */ var _components_StudyLegend_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/StudyLegend.jsx */ \"./src/components/StudyLegend.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"StudyLegend\", function() { return _components_StudyLegend_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n/* harmony import */ var _components_Comparison_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Comparison.jsx */ \"./src/components/Comparison.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Comparison\", function() { return _components_Comparison_jsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; });\n\n/* harmony import */ var _components_Views_jsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/Views.jsx */ \"./src/components/Views.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Views\", function() { return _components_Views_jsx__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; });\n\n/* harmony import */ var _components_CrosshairToggle_jsx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/CrosshairToggle.jsx */ \"./src/components/CrosshairToggle.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CrosshairToggle\", function() { return _components_CrosshairToggle_jsx__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; });\n\n/* harmony import */ var _components_Timeperiod_jsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/Timeperiod.jsx */ \"./src/components/Timeperiod.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Timeperiod\", function() { return _components_Timeperiod_jsx__WEBPACK_IMPORTED_MODULE_7__[\"default\"]; });\n\n/* harmony import */ var _components_ChartSize_jsx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/ChartSize.jsx */ \"./src/components/ChartSize.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ChartSize\", function() { return _components_ChartSize_jsx__WEBPACK_IMPORTED_MODULE_8__[\"default\"]; });\n\n/* harmony import */ var _components_DrawTools_jsx__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/DrawTools.jsx */ \"./src/components/DrawTools.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DrawTools\", function() { return _components_DrawTools_jsx__WEBPACK_IMPORTED_MODULE_9__[\"default\"]; });\n\n/* harmony import */ var _components_ChartSetting_jsx__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/ChartSetting.jsx */ \"./src/components/ChartSetting.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ChartSetting\", function() { return _components_ChartSetting_jsx__WEBPACK_IMPORTED_MODULE_10__[\"default\"]; });\n\n/* harmony import */ var _components_Share_jsx__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/Share.jsx */ \"./src/components/Share.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Share\", function() { return _components_Share_jsx__WEBPACK_IMPORTED_MODULE_11__[\"default\"]; });\n\n/* harmony import */ var _components_SmartChart_jsx__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/SmartChart.jsx */ \"./src/components/SmartChart.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SmartChart\", function() { return _components_SmartChart_jsx__WEBPACK_IMPORTED_MODULE_12__[\"default\"]; });\n\n/* harmony import */ var _components_ComparisonList_jsx__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/ComparisonList.jsx */ \"./src/components/ComparisonList.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ComparisonList\", function() { return _components_ComparisonList_jsx__WEBPACK_IMPORTED_MODULE_13__[\"default\"]; });\n\n/* harmony import */ var _components_ChartTitle_jsx__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./components/ChartTitle.jsx */ \"./src/components/ChartTitle.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ChartTitle\", function() { return _components_ChartTitle_jsx__WEBPACK_IMPORTED_MODULE_14__[\"default\"]; });\n\n/* harmony import */ var _components_AssetInformation_jsx__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/AssetInformation.jsx */ \"./src/components/AssetInformation.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AssetInformation\", function() { return _components_AssetInformation_jsx__WEBPACK_IMPORTED_MODULE_15__[\"default\"]; });\n\n/* harmony import */ var _components_FastMarker_jsx__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./components/FastMarker.jsx */ \"./src/components/FastMarker.jsx\");\n/* harmony import */ var _components_RawMarker_jsx__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./components/RawMarker.jsx */ \"./src/components/RawMarker.jsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./utils */ \"./src/utils/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createObjectFromLocalStorage\", function() { return _utils__WEBPACK_IMPORTED_MODULE_18__[\"createObjectFromLocalStorage\"]; });\n\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./utils/ga */ \"./src/utils/ga.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"logEvent\", function() { return _utils_ga__WEBPACK_IMPORTED_MODULE_19__[\"logEvent\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LogCategories\", function() { return _utils_ga__WEBPACK_IMPORTED_MODULE_19__[\"LogCategories\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LogActions\", function() { return _utils_ga__WEBPACK_IMPORTED_MODULE_19__[\"LogActions\"]; });\n\n/* eslint-disable no-new, react/jsx-indent, react/no-danger, react/jsx-indent-props */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction setSmartChartsPublicPath(path) {\n  __webpack_require__.p = path; // eslint-disable-line\n}\n\nvar Marker = _components_FastMarker_jsx__WEBPACK_IMPORTED_MODULE_16__[\"default\"];\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  AssetInformation: _components_AssetInformation_jsx__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n  Barrier: _components_Barrier_jsx__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  ChartSetting: _components_ChartSetting_jsx__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n  ChartSize: _components_ChartSize_jsx__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n  ChartTitle: _components_ChartTitle_jsx__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n  ChartTypes: _components_ChartTypes_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  Comparison: _components_Comparison_jsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n  ComparisonList: _components_ComparisonList_jsx__WEBPACK_IMPORTED_MODULE_13__[\"default\"],\n  createObjectFromLocalStorage: _utils__WEBPACK_IMPORTED_MODULE_18__[\"createObjectFromLocalStorage\"],\n  CrosshairToggle: _components_CrosshairToggle_jsx__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n  DrawTools: _components_DrawTools_jsx__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n  FastMarker: _components_FastMarker_jsx__WEBPACK_IMPORTED_MODULE_16__[\"default\"],\n  Marker: _components_FastMarker_jsx__WEBPACK_IMPORTED_MODULE_16__[\"default\"],\n  PendingPromise: _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  RawMarker: _components_RawMarker_jsx__WEBPACK_IMPORTED_MODULE_17__[\"default\"],\n  setSmartChartsPublicPath: setSmartChartsPublicPath,\n  Share: _components_Share_jsx__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n  SmartChart: _components_SmartChart_jsx__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n  StudyLegend: _components_StudyLegend_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  Timeperiod: _components_Timeperiod_jsx__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n  Views: _components_Views_jsx__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n  logEvent: _utils_ga__WEBPACK_IMPORTED_MODULE_19__[\"logEvent\"],\n  LogCategories: _utils_ga__WEBPACK_IMPORTED_MODULE_19__[\"LogCategories\"],\n  LogActions: _utils_ga__WEBPACK_IMPORTED_MODULE_19__[\"LogActions\"]\n});\n\n/***/ }),\n\n/***/ \"./src/store/AnimatedPriceStore.js\":\n/*!*****************************************!*\\\n  !*** ./src/store/AnimatedPriceStore.js ***!\n  \\*****************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AnimatedPriceStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Connect */ \"./src/store/Connect.js\");\nvar _dec, _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\nvar AnimatedPriceStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function AnimatedPriceStore() {\n    var _this = this;\n\n    _classCallCheck(this, AnimatedPriceStore);\n\n    _initializerDefineProperty(this, \"price\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"isIncrease\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"status\", _descriptor3, this);\n\n    this.oldPrice = '';\n    this.connect = Object(_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function () {\n      return {\n        price: _this.price,\n        isIncrease: _this.isIncrease,\n        status: _this.status,\n        className: _this.className\n      };\n    });\n  }\n\n  _createClass(AnimatedPriceStore, [{\n    key: \"setPrice\",\n    value: function setPrice(val, prevPrice) {\n      var oldVal = prevPrice || +this.oldPrice;\n      var newVal = +val;\n      var isIncrease = false;\n\n      if (newVal > oldVal) {\n        isIncrease = true;\n        this.status = 'up';\n      } else if (newVal < oldVal) {\n        this.status = 'down';\n      } else {\n        this.status = '';\n        return;\n      }\n\n      this.price = val;\n      this.oldPrice = this.price;\n      this.isIncrease = isIncrease;\n    }\n  }]);\n\n  return AnimatedPriceStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"price\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"isIncrease\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"status\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"setPrice\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"setPrice\"), _class.prototype)), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/AssetInformationStore.js\":\n/*!********************************************!*\\\n  !*** ./src/store/AssetInformationStore.js ***!\n  \\********************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AssetInformationStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar AssetInformationStore =\n/*#__PURE__*/\nfunction () {\n  function AssetInformationStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, AssetInformationStore);\n\n    this.onContextReady = function () {\n      _this.stx.prepend('headsUpHR', _this.update);\n    };\n\n    this._container = null;\n    this._spot = null;\n    this._open = null;\n    this._close = null;\n    this._high = null;\n    this._low = null;\n\n    this.update = function () {\n      // do not query dom on each frame\n      if (!_this._container) {\n        _this._container = _this.context.topNode.querySelector('.ciq-asset-information');\n        if (!_this._container) return;\n        _this._spot = _this._container.querySelector('.ciq-ai-spot');\n        _this._open = _this._container.querySelector('.ciq-ai-open');\n        _this._close = _this._container.querySelector('.ciq-ai-close');\n        _this._high = _this._container.querySelector('.ciq-ai-high');\n        _this._low = _this._container.querySelector('.ciq-ai-low');\n      }\n\n      var container = _this._container;\n\n      if (!_this.visible) {\n        container.style.visibility = 'hidden';\n        return;\n      }\n\n      var bar = _this.stx.barFromPixel(_this.stx.cx);\n\n      var prices = _this.stx.chart.xaxis[bar];\n\n      if (!prices) {\n        return;\n      }\n\n      var _ref = prices.data || {},\n          Open = _ref.Open,\n          High = _ref.High,\n          Low = _ref.Low,\n          Close = _ref.Close;\n\n      if (!Open && !High && !Low && !Close) {\n        container.style.visibility = 'hidden';\n        return;\n      }\n\n      container.style.visibility = 'visible';\n\n      if (_this.isTick) {\n        var children = container.children;\n        var visibility = _this.isTick ? 'hidden' : 'visible';\n\n        for (var idx = 1; idx < children.length; ++idx) {\n          children[idx].style.visibility = visibility;\n        }\n      }\n\n      if (_this._container) {\n        _this._open.textContent = Open && !_this.isTick ? Open.toFixed(_this.decimalPlaces) : '';\n        _this._high.textContent = High && !_this.isTick ? High.toFixed(_this.decimalPlaces) : '';\n        _this._low.textContent = Low && !_this.isTick ? Low.toFixed(_this.decimalPlaces) : '';\n        _this._close.textContent = Close && !_this.isTick ? Close.toFixed(_this.decimalPlaces) : '';\n        _this._spot.textContent = Close ? Close.toFixed(_this.decimalPlaces) : null;\n      }\n    };\n\n    this.mainStore = mainStore;\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.context;\n    }, this.onContextReady);\n  }\n\n  _createClass(AssetInformationStore, [{\n    key: \"decimalPlaces\",\n    get: function get() {\n      return this.mainStore.chart.currentActiveSymbol.decimal_places;\n    }\n  }, {\n    key: \"isTick\",\n    get: function get() {\n      return this.mainStore.timeperiod.timeUnit === 'tick';\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"visible\",\n    get: function get() {\n      return !this.mainStore.chart.isMobile && this.mainStore.chartSetting.assetInformation;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.context.stx;\n    }\n  }]);\n\n  return AssetInformationStore;\n}();\n\n\n\n/***/ }),\n\n/***/ \"./src/store/BarrierStore.js\":\n/*!***********************************!*\\\n  !*** ./src/store/BarrierStore.js ***!\n  \\***********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BarrierStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _PriceLineStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PriceLineStore */ \"./src/store/PriceLineStore.js\");\n/* harmony import */ var _ShadeStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ShadeStore */ \"./src/store/ShadeStore.js\");\n/* harmony import */ var _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/PendingPromise */ \"./src/utils/PendingPromise.js\");\n/* harmony import */ var _components_PriceLine_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/PriceLine.jsx */ \"./src/components/PriceLine.jsx\");\n/* harmony import */ var _components_Shade_jsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/Shade.jsx */ \"./src/components/Shade.jsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\nvar _dec, _dec2, _dec3, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\n\n\n\n\n\nvar BarrierStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  _createClass(BarrierStore, [{\n    key: \"pip\",\n    get: function get() {\n      return this.mainStore.chart.currentActiveSymbol.decimal_places;\n    }\n  }, {\n    key: \"yAxisWidth\",\n    get: function get() {\n      return this.mainStore.chart.yAxiswidth;\n    }\n  }, {\n    key: \"priceLabelWidth\",\n    get: function get() {\n      return this.yAxisWidth + 1;\n    }\n  }], [{\n    key: \"SHADE_NONE_SINGLE\",\n    get: function get() {\n      return 'SHADE_NONE_SINGLE';\n    }\n  }, {\n    key: \"SHADE_NONE_DOUBLE\",\n    get: function get() {\n      return 'SHADE_NONE_DOUBLE';\n    }\n  }, {\n    key: \"SHADE_ABOVE\",\n    get: function get() {\n      return 'SHADE_ABOVE';\n    }\n  }, {\n    key: \"SHADE_BELOW\",\n    get: function get() {\n      return 'SHADE_BELOW';\n    }\n  }, {\n    key: \"SHADE_BETWEEN\",\n    get: function get() {\n      return 'SHADE_BETWEEN';\n    }\n  }, {\n    key: \"SHADE_OUTSIDE\",\n    get: function get() {\n      return 'SHADE_OUTSIDE';\n    }\n  }, {\n    key: \"BARRIER_CHANGED\",\n    get: function get() {\n      return 'BARRIER_CHANGED';\n    }\n  }]);\n\n  function BarrierStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, BarrierStore);\n\n    _initializerDefineProperty(this, \"shadeColor\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"color\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"foregroundColor\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"isBetweenShadeVisible\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"isTopShadeVisible\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"isBottomShadeVisible\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"hidePriceLines\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"lineStyle\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"isInitialized\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"initializePromise\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"hideBarrierLine\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"hideOffscreenLine\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"hideOffscreenBarrier\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"isSingleBarrier\", _descriptor14, this);\n\n    this._shadeState = void 0;\n    this._onBarrierChange = null;\n\n    this._fireOnBarrierChange = function () {\n      var high = _this._high_barrier.visible ? +_this._high_barrier.price.toFixed(_this.pip) : undefined;\n      var low = _this._low_barrier.visible ? +_this._low_barrier.price.toFixed(_this.pip) : undefined;\n\n      if (_this._onBarrierChange) {\n        _this._onBarrierChange({\n          high: high,\n          low: low\n        });\n      }\n    };\n\n    this._drawShadedArea = function () {\n      if (!_this.isInitialized) {\n        return;\n      }\n\n      if (_this._shadeState === BarrierStore.SHADE_ABOVE) {\n        _this._shadeAbove();\n      } else if (_this._shadeState === BarrierStore.SHADE_BELOW) {\n        _this._shadeBelow();\n      } else if (_this._shadeState === BarrierStore.SHADE_BETWEEN) {\n        _this._shadeBetween();\n      } else if (_this._shadeState === BarrierStore.SHADE_OUTSIDE) {\n        _this._shadeOutside();\n      }\n\n      if (_this._low_barrier.visible && _this._isBarriersOffScreen()) {\n        var order = _this._high_barrier.top === 0 ? null : 101;\n        _this._high_barrier.zIndex = order;\n      }\n    };\n\n    this.mainStore = mainStore;\n    this._high_barrier = new _PriceLineStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.mainStore);\n    this._low_barrier = new _PriceLineStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.mainStore);\n\n    this._high_barrier.onPriceChanged(this._drawShadedArea);\n\n    this._low_barrier.onPriceChanged(this._drawShadedArea);\n\n    this._high_barrier.onDragReleased(this._fireOnBarrierChange);\n\n    this._low_barrier.onDragReleased(this._fireOnBarrierChange);\n\n    this._injectionId = this.stx.append('draw', this._drawShadedArea);\n\n    this._setupConstrainBarrierPrices();\n\n    this._listenerId = this.stx.addEventListener('newChart', this.init);\n    this.aboveShadeStore = new _ShadeStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('top-shade');\n    this.betweenShadeStore = new _ShadeStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('between-shade');\n    this.belowShadeStore = new _ShadeStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('bottom-shade');\n    this.AboveShade = this.aboveShadeStore.connect(_components_Shade_jsx__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n    this.BetweenShade = this.betweenShadeStore.connect(_components_Shade_jsx__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n    this.BelowShade = this.belowShadeStore.connect(_components_Shade_jsx__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n    this.shadeState = BarrierStore.SHADE_NONE_SINGLE;\n\n    if (this.context && this.stx.currentQuote()) {\n      this.init();\n    }\n\n    this.HighPriceLine = this._high_barrier.connect(_components_PriceLine_jsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n    this.LowPriceLine = this._low_barrier.connect(_components_PriceLine_jsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n\n    this.mainStore.chart._barriers.push(this);\n  }\n\n  _createClass(BarrierStore, [{\n    key: \"init\",\n    value: function init() {\n      this.isInitialized = true;\n      this.initializePromise.resolve(); // Enable this to test barriers; high low values are mandatory\n      // for library user to provide\n      // this.setDefaultBarrier();\n    }\n  }, {\n    key: \"setDefaultBarrier\",\n    value: function setDefaultBarrier() {\n      var price = this.relative ? 0 : this.stx.currentQuote().Close;\n      var distance = this.chart.yAxis.priceTick;\n      this._high_barrier.price = price + distance;\n      this._low_barrier.price = price - distance;\n\n      this._high_barrier._updateTop();\n\n      this._low_barrier._updateTop();\n\n      this._drawShadedArea();\n    }\n  }, {\n    key: \"updateProps\",\n    value: function updateProps(_ref) {\n      var _this2 = this;\n\n      var color = _ref.color,\n          foregroundColor = _ref.foregroundColor,\n          shadeColor = _ref.shadeColor,\n          shade = _ref.shade,\n          high = _ref.high,\n          low = _ref.low,\n          relative = _ref.relative,\n          draggable = _ref.draggable,\n          onChange = _ref.onChange,\n          hideBarrierLine = _ref.hideBarrierLine,\n          hideOffscreenBarrier = _ref.hideOffscreenBarrier,\n          hideOffscreenLine = _ref.hideOffscreenLine,\n          hidePriceLines = _ref.hidePriceLines,\n          lineStyle = _ref.lineStyle,\n          title = _ref.title,\n          showOffscreenArrows = _ref.showOffscreenArrows,\n          isSingleBarrier = _ref.isSingleBarrier,\n          opacityOnOverlap = _ref.opacityOnOverlap;\n      this.initializePromise.then(Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"])(function () {\n        if (color) {\n          _this2.color = color;\n        }\n\n        if (foregroundColor) {\n          _this2.foregroundColor = foregroundColor;\n        }\n\n        if (shadeColor) {\n          _this2.shadeColor = shadeColor;\n        }\n\n        if (shade) {\n          _this2.shadeState = \"SHADE_\".concat(shade).toUpperCase();\n        }\n\n        if (relative !== undefined) {\n          _this2.relative = relative;\n        }\n\n        if (draggable !== undefined) {\n          _this2.draggable = draggable;\n        }\n\n        if (Object(_utils__WEBPACK_IMPORTED_MODULE_6__[\"isValidProp\"])(high)) {\n          _this2.high_barrier = high;\n        }\n\n        if (Object(_utils__WEBPACK_IMPORTED_MODULE_6__[\"isValidProp\"])(low)) {\n          _this2.low_barrier = low;\n        }\n\n        if (onChange) {\n          _this2.onBarrierChange = onChange;\n        }\n\n        if (title) {\n          _this2.title = title;\n        }\n\n        _this2.lineStyle = lineStyle;\n        _this2.hideBarrierLine = !!hideBarrierLine;\n        _this2.hidePriceLines = !!hidePriceLines;\n        _this2.hideOffscreenLine = !!hideOffscreenLine;\n        _this2.hideOffscreenBarrier = !!hideOffscreenBarrier;\n        _this2.isSingleBarrier = !!isSingleBarrier;\n      }));\n\n      if (opacityOnOverlap) {\n        this.opacityOnOverlap = opacityOnOverlap;\n      }\n\n      if (showOffscreenArrows) {\n        this.showOffscreenArrows = showOffscreenArrows;\n      }\n    }\n  }, {\n    key: \"destructor\",\n    value: function destructor() {\n      var _this3 = this;\n\n      this.stx.removeInjection(this._injectionId);\n      this.stx.removeEventListener(this._listenerId);\n\n      this._high_barrier.destructor();\n\n      this._low_barrier.destructor();\n\n      var i = this.mainStore.chart._barriers.findIndex(function (b) {\n        return b === _this3;\n      });\n\n      if (i !== -1) {\n        this.mainStore.chart._barriers.splice(i, 1);\n      }\n    }\n  }, {\n    key: \"_setupConstrainBarrierPrices\",\n    value: function _setupConstrainBarrierPrices() {\n      var _this4 = this;\n\n      // barrier 1 cannot go below barrier 2\n      this._high_barrier.priceConstrainer = function (newPrice) {\n        var nextPrice = _this4._low_barrier.visible && newPrice < _this4._low_barrier.realPrice ? _this4._high_barrier.realPrice : newPrice;\n\n        _this4.mainStore.chart.calculateYaxisWidth(nextPrice);\n\n        return nextPrice;\n      }; // barrier 2 cannot go above barrier 1\n\n\n      this._low_barrier.priceConstrainer = function (newPrice) {\n        var nextPrice = newPrice > _this4._high_barrier.realPrice ? _this4._low_barrier.realPrice : newPrice;\n\n        _this4.mainStore.chart.calculateYaxisWidth(nextPrice);\n\n        return nextPrice;\n      };\n    }\n  }, {\n    key: \"_isBarriersOffScreen\",\n    value: function _isBarriersOffScreen() {\n      return this._high_barrier.offScreen && this._low_barrier.offScreen;\n    }\n  }, {\n    key: \"_shadeBetween\",\n    value: function _shadeBetween() {\n      this.betweenShadeStore.setPosition({\n        top: this._high_barrier.top,\n        bottom: this._low_barrier.top,\n        right: this.yAxisWidth\n      });\n    }\n  }, {\n    key: \"_shadeBelow\",\n    value: function _shadeBelow() {\n      var barrier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._high_barrier;\n      this.belowShadeStore.setPosition({\n        top: barrier.top,\n        bottom: 0,\n        right: this.yAxisWidth\n      });\n    }\n  }, {\n    key: \"_shadeAbove\",\n    value: function _shadeAbove() {\n      var barrier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._high_barrier;\n      this.aboveShadeStore.setPosition({\n        top: 0,\n        bottom: barrier.top,\n        right: this.yAxisWidth\n      });\n    }\n  }, {\n    key: \"_shadeOutside\",\n    value: function _shadeOutside() {\n      this._shadeAbove(this._high_barrier);\n\n      this._shadeBelow(this._low_barrier);\n    }\n  }, {\n    key: \"high_barrier\",\n    get: function get() {\n      return this._high_barrier.price;\n    },\n    set: function set(price) {\n      this._high_barrier.price = price;\n    }\n  }, {\n    key: \"low_barrier\",\n    get: function get() {\n      return this._low_barrier.price;\n    },\n    set: function set(price) {\n      this._low_barrier.price = price;\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.context.stx;\n    }\n  }, {\n    key: \"chart\",\n    get: function get() {\n      return this.stx.chart;\n    }\n  }, {\n    key: \"onBarrierChange\",\n    set: function set(callback) {\n      if (this._onBarrierChange !== callback) {\n        this._onBarrierChange = callback;\n      }\n    }\n  }, {\n    key: \"shadeState\",\n    get: function get() {\n      return this._shadeState;\n    },\n    set: function set(shadeState) {\n      if (this._shadeState === shadeState) {\n        return;\n      }\n\n      this._shadeState = shadeState;\n      var noShade = this._shadeState === BarrierStore.SHADE_NONE_SINGLE || this._shadeState === BarrierStore.SHADE_NONE_DOUBLE;\n\n      if (noShade) {\n        this.aboveShadeStore.visible = false;\n        this.betweenShadeStore.visible = false;\n        this.belowShadeStore.visible = false;\n      } else {\n        var aboveShadeEnable = this._shadeState === BarrierStore.SHADE_ABOVE || this._shadeState === BarrierStore.SHADE_OUTSIDE;\n        var belowShadeEnable = this._shadeState === BarrierStore.SHADE_BELOW || this._shadeState === BarrierStore.SHADE_OUTSIDE;\n        var betweenShadeEnable = this._shadeState === BarrierStore.SHADE_BETWEEN;\n        this.aboveShadeStore.visible = aboveShadeEnable;\n        this.betweenShadeStore.visible = betweenShadeEnable;\n        this.belowShadeStore.visible = belowShadeEnable;\n\n        this._drawShadedArea();\n      }\n\n      var showLowBarrier = this._shadeState === BarrierStore.SHADE_OUTSIDE || this._shadeState === BarrierStore.SHADE_BETWEEN || this._shadeState === BarrierStore.SHADE_NONE_DOUBLE;\n      var wasLowBarrierVisible = this._low_barrier.visible;\n      this._low_barrier.visible = showLowBarrier;\n\n      if (this.isInitialized && showLowBarrier && !wasLowBarrierVisible) {\n        if (this._low_barrier.realPrice >= this._high_barrier.realPrice) {\n          // fix position if _low_barrier above _high_barrier, since _low_barrier position is not updated when not visible\n          this._low_barrier.price = this._high_barrier.price - this.chart.yAxis.priceTick;\n        }\n      }\n    }\n  }, {\n    key: \"relative\",\n    get: function get() {\n      return this._high_barrier.relative;\n    },\n    set: function set(value) {\n      this._high_barrier.relative = value;\n      this._low_barrier.relative = value;\n    }\n  }, {\n    key: \"draggable\",\n    get: function get() {\n      return this._high_barrier.draggable;\n    },\n    set: function set(value) {\n      this._high_barrier.draggable = value;\n      this._low_barrier.draggable = value;\n    }\n  }, {\n    key: \"showOffscreenArrows\",\n    get: function get() {\n      return this._high_barrier.showOffscreenArrows;\n    },\n    set: function set(value) {\n      this._high_barrier.showOffscreenArrows = value;\n    }\n  }, {\n    key: \"opacityOnOverlap\",\n    get: function get() {\n      return this._high_barrier.opacityOnOverlap;\n    },\n    set: function set(value) {\n      this._high_barrier.opacityOnOverlap = value;\n    }\n  }]);\n\n  return BarrierStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"shadeColor\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"color\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"foregroundColor\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"isBetweenShadeVisible\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"isTopShadeVisible\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"isBottomShadeVisible\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"hidePriceLines\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"lineStyle\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return undefined;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"isInitialized\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"initializePromise\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return new _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"hideBarrierLine\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"hideOffscreenLine\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"hideOffscreenBarrier\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"isSingleBarrier\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"pip\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"pip\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"yAxisWidth\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"yAxisWidth\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"priceLabelWidth\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"priceLabelWidth\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"init\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"init\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateProps\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"updateProps\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"destructor\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"destructor\"), _class.prototype)), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/BottomWidgetsContainerStore.js\":\n/*!**************************************************!*\\\n  !*** ./src/store/BottomWidgetsContainerStore.js ***!\n  \\**************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BottomWidgetsContainerStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\nvar _dec, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\nvar BottomWidgetsContainerStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  _createClass(BottomWidgetsContainerStore, [{\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.context.stx;\n    }\n  }]);\n\n  function BottomWidgetsContainerStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, BottomWidgetsContainerStore);\n\n    _initializerDefineProperty(this, \"bottom\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"isReadyToShow\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"mainChartHeight\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"top\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"totalHeight\", _descriptor5, this);\n\n    this.initial = function () {\n      _this.stx.append('drawPanels', function () {\n        return _this.updateChartHeight();\n      });\n\n      _this.isReadyToShow = true;\n    };\n\n    this.updateChartMargin = function (margin) {\n      if (_this.context && _this.stx) {\n        var marginTop = 125;\n\n        if (margin === 200) {\n          if (_this.stx.chart.yAxis.height < 325) {\n            margin = 100;\n            var marginTopDiff = _this.stx.chart.yAxis.height - margin; // - this.stx.chart.yAxis.height;\n            // marginTop = marginTopDiff > 0 ? marginTopDiff : 0;\n            // marginTop = marginTopDiff > 125 ? 125 : marginTopDiff;\n\n            margin = marginTopDiff < margin + marginTop ? 5 : margin - marginTopDiff;\n          } else if (Object.keys(_this.stx.panels).length > 3) {\n            margin = 100;\n            marginTop = 10;\n          }\n        }\n\n        var graphHeight = _this.mainStore.chart.chartContainerHeight - marginTop - margin;\n\n        if (graphHeight < 120) {\n          marginTop = 85;\n          margin = 10;\n        }\n\n        _this.stx.chart.yAxis.initialMarginTop = marginTop;\n        _this.stx.chart.yAxis.initialMarginBottom = margin;\n\n        _this.stx.calculateYAxisMargins(_this.stx.chart.panel.yAxis);\n\n        _this.stx.draw();\n\n        if (!_this.mainStore.state.shouldMinimiseLastDigits) {\n          _this.mainStore.state.setShouldMinimiseLastDigit(_this.stx.chart.panel.height < 460);\n        }\n      }\n    };\n\n    this.mainStore = mainStore;\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.context;\n    }, this.initial);\n  }\n\n  _createClass(BottomWidgetsContainerStore, [{\n    key: \"updateChartHeight\",\n    value: function updateChartHeight() {\n      var _this2 = this;\n\n      this.mainChartHeight = this.stx.panels.chart.height;\n      this.totalHeight = Object.keys(this.stx.panels).reduce(function (acc, key) {\n        return acc + (_this2.stx.panels[key].hidden ? 0 : _this2.stx.panels[key].height);\n      }, 0);\n      var margin = this.totalHeight > this.mainChartHeight ? 0 : 30;\n      var panelPosition = this.mainStore.chartSetting.position;\n      var chartControlsHeight = panelPosition === 'bottom' && this.mainStore.state.chartControlsWidgets ? 40 : 0;\n      this.top = this.mainChartHeight - margin - 200;\n      this.bottom = this.totalHeight - this.mainChartHeight + margin + chartControlsHeight;\n    }\n  }]);\n\n  return BottomWidgetsContainerStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"bottom\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"isReadyToShow\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"mainChartHeight\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"top\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"totalHeight\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"updateChartHeight\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"updateChartHeight\"), _class.prototype)), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/CategoricalDisplayStore.js\":\n/*!**********************************************!*\\\n  !*** ./src/store/CategoricalDisplayStore.js ***!\n  \\**********************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CategoricalDisplayStore; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\n/* harmony import */ var _components_SearchInput_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/SearchInput.jsx */ \"./src/components/SearchInput.jsx\");\n/* harmony import */ var _components_categoricaldisplay__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/categoricaldisplay */ \"./src/components/categoricaldisplay/index.js\");\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _temp;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\n\n\n\n\nvar CategoricalDisplayStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec4 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec5 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec6 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec7 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec8 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec9 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function CategoricalDisplayStore(_ref) {\n    var _this = this;\n\n    var getCategoricalItems = _ref.getCategoricalItems,\n        onSelectItem = _ref.onSelectItem,\n        getIsShown = _ref.getIsShown,\n        getActiveCategory = _ref.getActiveCategory,\n        activeOptions = _ref.activeOptions,\n        placeholderText = _ref.placeholderText,\n        favoritesId = _ref.favoritesId,\n        mainStore = _ref.mainStore,\n        id = _ref.id,\n        getCurrentActiveCategory = _ref.getCurrentActiveCategory,\n        getCurrentActiveSubCategory = _ref.getCurrentActiveSubCategory,\n        searchInputClassName = _ref.searchInputClassName;\n\n    _classCallCheck(this, CategoricalDisplayStore);\n\n    _initializerDefineProperty(this, \"isShown\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"scrollPanel\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"filterText\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"activeCategoryKey\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"focusedCategoryKey\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"isScrollingDown\", _descriptor6, this);\n\n    this.scrollTop = undefined;\n\n    _initializerDefineProperty(this, \"activeHeadKey\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"activeHeadTop\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"activeHeadOffset\", _descriptor9, this);\n\n    this.isUserScrolling = true;\n    this.lastFilteredItems = [];\n    this.activeCategories = [];\n    this.connect = Object(_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function () {\n      return {\n        filteredItems: _this.filteredItems,\n        updateScrollSpy: _this.updateScrollSpy,\n        setScrollPanel: _this.setScrollPanel,\n        isScrollingDown: _this.isScrollingDown,\n        handleTitleClick: _this.handleTitleClick,\n        scrollUp: _this.scrollUp,\n        scrollDown: _this.scrollDown,\n        onSelectItem: _this.onSelectItem,\n        ResultsPanel: _this.ResultsPanel,\n        FilterPanel: _this.FilterPanel,\n        SearchInput: _this.SearchInput,\n        isMobile: _this.chart.isMobile,\n        height: _this.height\n      };\n    });\n    Object(mobx__WEBPACK_IMPORTED_MODULE_1__[\"reaction\"])(getIsShown, function () {\n      if (getIsShown()) {\n        var activeItemCount = getActiveCategory ? getActiveCategory().data.length : 0;\n        _this.focusedCategoryKey = null;\n        _this.activeCategoryKey = _this.getCurrentActiveCategory ? _this.getCurrentActiveCategory() : 'favorite';\n        _this.activeSubCategory = _this.getCurrentActiveSubCategory ? _this.getCurrentActiveSubCategory() : '';\n        var el = _this.categoryElements[_this.activeCategoryKey];\n        var activeSubCategoryClassName = _this.id ? \".\".concat(_this.id, \"-subcategory-item-\").concat(_this.activeSubCategory) : \".subcategory-item-\".concat(_this.activeSubCategory);\n\n        var el_active_sub_category = _this.mainStore.chart.rootNode.querySelector(activeSubCategoryClassName);\n\n        _this.activeHeadKey = _this.activeCategoryKey || null;\n        _this.activeHeadTop = 0;\n        _this.pauseScrollSpy = true;\n        _this.isUserScrolling = false;\n\n        if (activeItemCount) {\n          _this.activeCategoryKey = 'active';\n          _this.activeHeadKey = null;\n\n          _this.scrollPanel.scrollTop(0);\n        } else if (el) {\n          _this.scrollPanel.scrollTop(el.offsetTop);\n\n          if (el_active_sub_category) {\n            _this.scrollPanel.scrollTop(el.offsetTop + el_active_sub_category.offsetTop - 40);\n          }\n        }\n\n        setTimeout(function () {\n          _this.pauseScrollSpy = false;\n        }, 20);\n\n        if (!_this.isInit) {\n          _this.init();\n        }\n\n        if (!mainStore.chart.isMobile) {\n          setTimeout(function () {\n            _this.searchInput.current.focus();\n          }, 0);\n        }\n      }\n    });\n    this.getCategoricalItems = getCategoricalItems;\n    this.onSelectItem = onSelectItem;\n    this.getActiveCategory = getActiveCategory;\n    this.favoritesId = favoritesId;\n    this.id = id;\n    this.categoryElements = {};\n    this.mainStore = mainStore;\n    this.getCurrentActiveCategory = getCurrentActiveCategory;\n    this.getCurrentActiveSubCategory = getCurrentActiveSubCategory;\n    this.isInit = false;\n    this.searchInput = react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef();\n    this.searchInputClassName = searchInputClassName;\n    var normalItem = Object(_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function () {\n      return {\n        favoritesId: favoritesId,\n        id: id\n      };\n    })(_components_categoricaldisplay__WEBPACK_IMPORTED_MODULE_5__[\"NormalItem\"]);\n    var activeItem = Object(_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function () {\n      return {\n        activeOptions: activeOptions,\n        favoritesId: favoritesId\n      };\n    })(_components_categoricaldisplay__WEBPACK_IMPORTED_MODULE_5__[\"ActiveItem\"]);\n\n    var getItemType = function getItemType(categoryId) {\n      if (categoryId === 'active' && _this.getActiveCategory !== undefined) {\n        return activeItem;\n      }\n\n      return normalItem;\n    };\n\n    this.ResultsPanel = Object(_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function () {\n      return {\n        filteredItems: _this.filteredItems,\n        setCategoryElement: _this.setCategoryElement,\n        getItemType: getItemType,\n        activeHeadTop: _this.activeHeadTop,\n        activeHeadKey: _this.activeHeadKey,\n        activeHeadOffset: _this.activeHeadOffset,\n        handleTitleClick: _this.handleTitleClick\n      };\n    })(_components_categoricaldisplay__WEBPACK_IMPORTED_MODULE_5__[\"ResultsPanel\"]);\n    this.FilterPanel = Object(_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function (_ref2) {\n      var chart = _ref2.chart;\n      return {\n        isMobile: chart.isMobile,\n        filteredItems: _this.filteredItems,\n        handleFilterClick: _this.handleFilterClick,\n        activeCategoryKey: _this.activeCategoryKey,\n        focusedCategoryKey: _this.focusedCategoryKey\n      };\n    })(_components_categoricaldisplay__WEBPACK_IMPORTED_MODULE_5__[\"FilterPanel\"]);\n    this.SearchInput = Object(_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function () {\n      return {\n        placeholder: placeholderText,\n        value: _this.filterText,\n        onChange: _this.setFilterText,\n        searchInput: _this.searchInput,\n        searchInputClassName: _this.searchInputClassName\n      };\n    })(_components_SearchInput_jsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n  }\n\n  _createClass(CategoricalDisplayStore, [{\n    key: \"updateScrollSpy\",\n    value: function updateScrollSpy() {\n      if (this.pauseScrollSpy || !this.scrollPanel) {\n        return;\n      }\n\n      if (this.filteredItems.length === 0) {\n        return;\n      } // hits: 40px for title hight + 4px for content bottom border\n\n\n      var categoryTitleHeight = 44;\n      var scrollPanelTop = this.scrollPanel.container.getBoundingClientRect().top;\n      var activeHeadTop = 0;\n      var activeMenuId = null;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.filteredItems[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var category = _step.value;\n          var el = this.categoryElements[category.categoryId];\n\n          if (!el) {\n            return;\n          }\n\n          var r = el.getBoundingClientRect();\n          var top = r.top - scrollPanelTop;\n\n          if (top < 0) {\n            activeMenuId = category.categoryId;\n            var categorySwitchPoint = r.height + top - categoryTitleHeight;\n            activeHeadTop = categorySwitchPoint < 0 ? categorySwitchPoint : 0;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var scrollTop = this.scrollPanel.getValues().top;\n\n      if (this.scrollTop > scrollTop) {\n        this.scrollUp();\n      } else {\n        this.scrollDown();\n      }\n\n      this.activeHeadOffset = this.chart.isMobile ? this.scrollPanel.container.offsetTop : 0;\n      this.scrollTop = scrollTop;\n      this.focusedCategoryKey = activeMenuId || this.filteredItems[0].categoryId;\n      this.activeHeadTop = activeHeadTop;\n      this.activeHeadKey = this.scrollTop === 0 ? null : this.focusedCategoryKey;\n    }\n  }, {\n    key: \"scrollUp\",\n    value: function scrollUp() {\n      this.isScrollingDown = false;\n    }\n  }, {\n    key: \"scrollDown\",\n    value: function scrollDown() {\n      // This only affects when scrolling by mouse not by code\n      this.isScrollingDown = this.isUserScrolling;\n      this.isUserScrolling = true;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.isInit = true; // Select first non-empty category:\n\n      if (this.activeCategoryKey === '' && this.filteredItems.length > 0) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this.filteredItems[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var category = _step2.value;\n            var el = this.categoryElements[category.categoryId];\n\n            if (el) {\n              this.activeCategoryKey = category.categoryId;\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"setCategoryElement\",\n    value: function setCategoryElement(element, id) {\n      this.categoryElements[id] = element;\n    }\n  }, {\n    key: \"setFilterText\",\n    value: function setFilterText(filterText) {\n      var _this2 = this;\n\n      this.filterText = filterText;\n      this.isUserScrolling = false;\n      setTimeout(function () {\n        _this2.updateScrollSpy();\n      }, 0);\n    }\n  }, {\n    key: \"handleFilterClick\",\n    value: function handleFilterClick(category) {\n      var _this3 = this;\n\n      var el = this.categoryElements[category.categoryId];\n\n      if (el) {\n        // TODO: Scroll animation\n        this.pauseScrollSpy = true;\n        this.isUserScrolling = false;\n        this.scrollPanel.scrollTop(el.offsetTop);\n        this.focusedCategoryKey = category.categoryId;\n        this.activeHeadKey = null; // scrollTop takes some time to take affect, so we need\n        // a slight delay before enabling the scroll spy again\n\n        setTimeout(function () {\n          _this3.pauseScrollSpy = false;\n        }, 20);\n      }\n    }\n  }, {\n    key: \"setScrollPanel\",\n    value: function setScrollPanel(element) {\n      this.scrollPanel = element;\n    }\n  }, {\n    key: \"handleTitleClick\",\n    value: function handleTitleClick(categoryId) {\n      var _this4 = this;\n\n      this.activeCategories = [];\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.filteredItems[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n\n          if (item.categoryId === categoryId) {\n            item.active = !item.active;\n          }\n\n          if (item.active) {\n            this.activeCategories.push(item.categoryId);\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this.activeHeadTop = null;\n      setTimeout(function () {\n        _this4.updateScrollSpy();\n      }, 0);\n    }\n  }, {\n    key: \"chart\",\n    get: function get() {\n      return this.mainStore.chart;\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.chart.context;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.chart.chartContainerHeight - (this.chart.isMobile ? 0 : 120);\n    }\n  }, {\n    key: \"favoritesCategory\",\n    get: function get() {\n      var _this5 = this;\n\n      this.pauseScrollSpy = true;\n      var favoritesCategory = {\n        categoryName: t.translate('Favorites'),\n        categoryId: 'favorite',\n        hasSubcategory: false,\n        active: true,\n        emptyDescription: t.translate('There are no favorites yet.'),\n        data: Object.keys(this.mainStore.favorites.favoritesMap[this.favoritesId]) || []\n      };\n      setTimeout(function () {\n        _this5.pauseScrollSpy = false;\n      }, 20);\n      return favoritesCategory;\n    }\n  }, {\n    key: \"filteredItems\",\n    get: function get() {\n      var filteredItems = Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"cloneCategories\"])(this.getCategoricalItems());\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = filteredItems[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var item = _step4.value;\n\n          if (this.activeCategories.includes(item.categoryId)) {\n            item.active = true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      if (this.favoritesId) {\n        var favsCategory = _objectSpread({}, this.favoritesCategory);\n\n        var findFavItem = function findFavItem(category) {\n          var foundItems = [];\n\n          if (category.hasSubcategory) {\n            category.data.forEach(function (subcategory) {\n              var foundSubItems = findFavItem(subcategory);\n              foundItems.push.apply(foundItems, _toConsumableArray(foundSubItems));\n            });\n          } else {\n            favsCategory.data.forEach(function (favItem) {\n              if (typeof favItem === 'string') {\n                var itemObj = category.data.find(function (item) {\n                  return item.itemId === favItem;\n                });\n\n                if (itemObj) {\n                  foundItems.push(itemObj);\n                }\n              }\n            });\n          }\n\n          return foundItems;\n        };\n\n        var favsCategoryItem = favsCategory.data.filter(function (favItem) {\n          return typeof favItem !== 'string';\n        });\n        filteredItems.forEach(function (category) {\n          var foundItems = findFavItem(category);\n          favsCategoryItem.push.apply(favsCategoryItem, _toConsumableArray(foundItems));\n        });\n        favsCategory.data = favsCategoryItem.filter(function (favItem) {\n          return favItem;\n        });\n        filteredItems.unshift(favsCategory);\n      }\n\n      if (this.getActiveCategory) {\n        var activeCategory = Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"cloneCategory\"])(this.getActiveCategory());\n        filteredItems.unshift(activeCategory);\n      }\n\n      if (this.filterText === '') {\n        this.lastFilteredItems = filteredItems;\n        return filteredItems;\n      }\n\n      var searchHasResult = false;\n      var queries = this.filterText.split(' ').filter(function (x) {\n        return x !== '';\n      }).map(function (b) {\n        return b.toLowerCase().trim();\n      }); // regex to check all separate words by comma, should exist in the string\n\n      var hasSearchString = function hasSearchString(text) {\n        return queries.reduce(function (a, b) {\n          return text.toLowerCase().includes(b) && a;\n        }, true);\n      };\n\n      var filterCategory = function filterCategory(c) {\n        c.data = c.data.filter(function (item) {\n          return hasSearchString(item.display || _typeof(item.dataObject) === 'object' && item.dataObject.symbol);\n        });\n\n        if (c.data.length) {\n          searchHasResult = true;\n        }\n      };\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = filteredItems[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var category = _step5.value;\n          category.active = true;\n\n          if (category.hasSubcategory) {\n            var _iteratorNormalCompletion6 = true;\n            var _didIteratorError6 = false;\n            var _iteratorError6 = undefined;\n\n            try {\n              for (var _iterator6 = category.data[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                var subcategory = _step6.value;\n                filterCategory(subcategory);\n              }\n            } catch (err) {\n              _didIteratorError6 = true;\n              _iteratorError6 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n                  _iterator6[\"return\"]();\n                }\n              } finally {\n                if (_didIteratorError6) {\n                  throw _iteratorError6;\n                }\n              }\n            }\n          } else {\n            filterCategory(category);\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n            _iterator5[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      if (!searchHasResult) {\n        filteredItems = this.lastFilteredItems;\n      }\n\n      if (!this.pauseScrollSpy) {\n        this.lastFilteredItems = filteredItems;\n      }\n\n      return filteredItems;\n    }\n  }]);\n\n  return CategoricalDisplayStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"isShown\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"scrollPanel\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"filterText\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"activeCategoryKey\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"focusedCategoryKey\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"isScrollingDown\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"activeHeadKey\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return undefined;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"activeHeadTop\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"activeHeadOffset\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return undefined;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"updateScrollSpy\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"updateScrollSpy\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"scrollUp\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"scrollUp\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"scrollDown\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"scrollDown\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"init\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"init\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"favoritesCategory\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"favoritesCategory\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"filteredItems\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"filteredItems\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setCategoryElement\", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, \"setCategoryElement\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setFilterText\", [_dec6], Object.getOwnPropertyDescriptor(_class.prototype, \"setFilterText\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"handleFilterClick\", [_dec7], Object.getOwnPropertyDescriptor(_class.prototype, \"handleFilterClick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setScrollPanel\", [_dec8], Object.getOwnPropertyDescriptor(_class.prototype, \"setScrollPanel\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"handleTitleClick\", [_dec9], Object.getOwnPropertyDescriptor(_class.prototype, \"handleTitleClick\"), _class.prototype)), _class));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/store/ChartSettingStore.js\":\n/*!****************************************!*\\\n  !*** ./src/store/ChartSettingStore.js ***!\n  \\****************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ChartSettingStore; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MenuStore */ \"./src/store/MenuStore.js\");\n/* harmony import */ var _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _components_Menu_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/Menu.jsx */ \"./src/components/Menu.jsx\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/ga */ \"./src/utils/ga.js\");\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\n\n\n\n\nvar languageList = [{\n  key: 'en',\n  name: 'English',\n  icon: react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"FlagIcons\"].USD, null)\n}, {\n  key: 'pt',\n  name: 'Português',\n  icon: react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"FlagIcons\"].Portugal, null)\n}, {\n  key: 'de',\n  name: 'Deutsch',\n  icon: react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"FlagIcons\"].German, null)\n}, {\n  key: 'ru',\n  name: 'Русский',\n  icon: react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"FlagIcons\"].Russia, null)\n}, {\n  key: 'fr',\n  name: 'French',\n  icon: react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"FlagIcons\"].French, null)\n}, {\n  key: 'th',\n  name: 'Thai',\n  icon: react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"FlagIcons\"].Thailand, null)\n}, {\n  key: 'id',\n  name: 'Indonesia',\n  icon: react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"FlagIcons\"].Indonesia, null)\n}, {\n  key: 'vi',\n  name: 'Tiếng Việt',\n  icon: react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"FlagIcons\"].Vietnam, null)\n}, {\n  key: 'it',\n  name: 'Italiano',\n  icon: react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"FlagIcons\"].Italy, null)\n}, {\n  key: 'zh_cn',\n  name: '简体中文',\n  icon: react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"FlagIcons\"].Chinese, null)\n}, {\n  key: 'pl',\n  name: 'Polish',\n  icon: react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"FlagIcons\"].Poland, null)\n}, {\n  key: 'zh_tw',\n  name: '繁體中文',\n  icon: react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"FlagIcons\"].ChineseTraditional, null)\n}, {\n  key: 'es',\n  name: 'espanyol',\n  icon: react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"FlagIcons\"].Spanish, null)\n}];\nvar ChartSettingStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec4 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec5 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec6 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec7 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec8 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec9 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec10 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function ChartSettingStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, ChartSettingStore);\n\n    this.languages = [];\n    this.defaultLanguage = {};\n    this.onSettingsChange = void 0;\n\n    _initializerDefineProperty(this, \"assetInformation\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"view\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"language\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"position\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"theme\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"countdown\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"historical\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"isAutoScale\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"isHighestLowestMarkerEnabled\", _descriptor9, this);\n\n    this.defaultLanguage = this.languages[0];\n    this.mainStore = mainStore;\n    this.menu = new _MenuStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"](mainStore, {\n      route: 'setting'\n    });\n    this.ChartSettingMenu = this.menu.connect(_components_Menu_jsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n    Object(mobx__WEBPACK_IMPORTED_MODULE_1__[\"when\"])(function () {\n      return _this.context;\n    }, function () {\n      _this.setSettings(mainStore.state.settings);\n    });\n  }\n\n  _createClass(ChartSettingStore, [{\n    key: \"setSettings\",\n    value: function setSettings(settings) {\n      var _this2 = this;\n\n      if (settings === undefined) {\n        return;\n      }\n\n      var assetInformation = settings.assetInformation,\n          countdown = settings.countdown,\n          historical = settings.historical,\n          language = settings.language,\n          position = settings.position,\n          isAutoScale = settings.isAutoScale,\n          isHighestLowestMarkerEnabled = settings.isHighestLowestMarkerEnabled,\n          theme = settings.theme,\n          activeLanguages = settings.activeLanguages;\n\n      if (!(!activeLanguages && languageList.every(function (x) {\n        return _this2.languages.find(function (y) {\n          return y.key === x.key;\n        });\n      }) || activeLanguages && this.languages.length === activeLanguages.length && this.languages.every(function (x) {\n        return activeLanguages.indexOf(x.key.toUpperCase()) !== -1;\n      }))) {\n        this.updateActiveLanguage(activeLanguages);\n      }\n\n      if (theme !== undefined) {\n        this.setTheme(theme);\n      }\n\n      if (position !== undefined) {\n        this.setPosition(position);\n      }\n\n      if (countdown !== undefined) {\n        this.showCountdown(countdown);\n      }\n\n      if (language !== undefined) {\n        this.setLanguage(language);\n      }\n\n      if (assetInformation !== undefined) {\n        this.setAssetInformation(assetInformation);\n      }\n\n      if (historical !== undefined) {\n        this.setHistorical(historical);\n      }\n\n      if (isAutoScale !== undefined) {\n        this.setAutoScale(isAutoScale);\n      }\n\n      if (isHighestLowestMarkerEnabled !== undefined) {\n        this.toggleHighestLowestMarker(isHighestLowestMarkerEnabled);\n      }\n    }\n  }, {\n    key: \"saveSetting\",\n    value: function saveSetting() {\n      if (this.onSettingsChange) {\n        this.onSettingsChange({\n          assetInformation: this.assetInformation,\n          countdown: this.countdown,\n          historical: this.historical,\n          language: this.language.key,\n          position: this.position,\n          isAutoScale: this.isAutoScale,\n          isHighestLowestMarkerEnabled: this.isHighestLowestMarkerEnabled,\n          theme: this.theme\n        });\n      }\n    }\n  }, {\n    key: \"setView\",\n    value: function setView(view) {\n      this.view = view || '';\n    }\n  }, {\n    key: \"updateActiveLanguage\",\n    value: function updateActiveLanguage(activeLanguages) {\n      var _this3 = this;\n\n      this.setView(''); // return the view back to chart setting list\n\n      if (activeLanguages) {\n        this.languages = activeLanguages.map(function (lngKey) {\n          return languageList.find(function (lng) {\n            return lng.key.toUpperCase() === lngKey;\n          }) || null;\n        }).filter(function (x) {\n          return x;\n        });\n      } else this.languages = languageList; // set default language as the first item of active languages or Eng\n\n\n      this.defaultLanguage = this.languages[0];\n\n      if (this.language && !this.languages.find(function (x) {\n        return x.key === _this3.language.key;\n      }) || !this.language) {\n        this.setLanguage(this.languages[0].key);\n      }\n    }\n  }, {\n    key: \"setLanguage\",\n    value: function setLanguage(lng) {\n      if (!this.languages.length) {\n        return;\n      }\n\n      if (this.language && lng === this.language.key) {\n        return;\n      }\n\n      this.language = this.languages.find(function (item) {\n        return item.key === lng;\n      }) || this.defaultLanguage;\n      t.setLanguage(this.language.key);\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogActions\"].ChartSetting, \"Change language to \".concat(this.language.key));\n      this.saveSetting();\n    }\n  }, {\n    key: \"setTheme\",\n    value: function setTheme(theme) {\n      if (this.theme === theme) {\n        return;\n      }\n\n      this.theme = theme;\n\n      if (this.context) {\n        this.mainStore.state.setChartTheme(theme);\n        this.mainStore.crosshair.setFloatPriceLabelStyle(theme);\n      }\n\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogActions\"].ChartSetting, \"Change theme to \".concat(theme));\n      this.saveSetting();\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(value) {\n      var _this4 = this;\n\n      if (this.position === value) {\n        return;\n      }\n\n      this.position = value;\n\n      if (this.context) {\n        this.stx.clearStyles();\n      }\n\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogActions\"].ChartSetting, 'Change Position');\n      this.saveSetting();\n      /**\n      * Chart should fix its height & width after the position changed,\n      * for that purpose we stay some 10 ms so that position varaible update\n      * on chart context then ask chart to update itself hight & width\n      */\n\n      setTimeout(function () {\n        _this4.mainStore.chart.resizeScreen();\n      }, 10);\n      this.menu.setOpen(false);\n    }\n  }, {\n    key: \"setAssetInformation\",\n    value: function setAssetInformation(value) {\n      if (this.assetInformation === value) {\n        return;\n      }\n\n      this.assetInformation = value;\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogActions\"].ChartSetting, \"\".concat(value ? 'Show' : 'Hide', \" Asset Information\"));\n      this.saveSetting();\n    }\n  }, {\n    key: \"showCountdown\",\n    value: function showCountdown(value) {\n      if (this.countdown === value) {\n        return;\n      }\n\n      this.countdown = value;\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogActions\"].ChartSetting, \"\".concat(value ? 'Show' : 'Hide', \" Countdown\"));\n      this.saveSetting();\n    }\n  }, {\n    key: \"setHistorical\",\n    value: function setHistorical(value) {\n      var _this5 = this;\n\n      if (this.historical === value) {\n        return;\n      }\n\n      this.historical = value;\n      this.isHighestLowestMarkerEnabled = !value;\n      this.saveSetting();\n      /**\n      * Chart should fix its height & width after the position changed,\n      * for that purpose we stay some 10 ms so that position varaible update\n      * on chart context then ask chart to update itself hight & width\n      */\n\n      setTimeout(function () {\n        _this5.mainStore.chart.resizeScreen();\n      }, 10);\n      this.menu.setOpen(false);\n    }\n  }, {\n    key: \"setAutoScale\",\n    value: function setAutoScale(value) {\n      if (this.isAutoScale === value) {\n        return;\n      }\n\n      this.isAutoScale = value;\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogActions\"].ChartSetting, \" Change AutoScale to \".concat(value));\n      this.saveSetting();\n    }\n  }, {\n    key: \"toggleHighestLowestMarker\",\n    value: function toggleHighestLowestMarker(value) {\n      if (this.isHighestLowestMarkerEnabled === value) {\n        return;\n      }\n\n      this.isHighestLowestMarkerEnabled = value;\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogActions\"].ChartSetting, \" \".concat(value ? 'Show' : 'Hide', \" HighestLowestMarker.\"));\n      this.saveSetting();\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.context.stx;\n    }\n  }]);\n\n  return ChartSettingStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"assetInformation\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return true;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"view\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"language\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"position\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 'bottom';\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"theme\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 'light';\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"countdown\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"historical\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"isAutoScale\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return true;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"isHighestLowestMarkerEnabled\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return true;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"setView\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"setView\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateActiveLanguage\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"updateActiveLanguage\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setLanguage\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"setLanguage\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setTheme\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"setTheme\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setPosition\", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, \"setPosition\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setAssetInformation\", [_dec6], Object.getOwnPropertyDescriptor(_class.prototype, \"setAssetInformation\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"showCountdown\", [_dec7], Object.getOwnPropertyDescriptor(_class.prototype, \"showCountdown\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setHistorical\", [_dec8], Object.getOwnPropertyDescriptor(_class.prototype, \"setHistorical\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setAutoScale\", [_dec9], Object.getOwnPropertyDescriptor(_class.prototype, \"setAutoScale\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"toggleHighestLowestMarker\", [_dec10], Object.getOwnPropertyDescriptor(_class.prototype, \"toggleHighestLowestMarker\"), _class.prototype)), _class));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/store/ChartSizeStore.js\":\n/*!*************************************!*\\\n  !*** ./src/store/ChartSizeStore.js ***!\n  \\*************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ChartSizeStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/ga */ \"./src/utils/ga.js\");\nvar _dec, _dec2, _class, _descriptor, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\nvar ChartSizeStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function ChartSizeStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, ChartSizeStore);\n\n    _initializerDefineProperty(this, \"stx\", _descriptor, this);\n\n    this.onContextReady = function () {\n      _this.stx = _this.mainStore.chart.context.stx;\n    };\n\n    this.mainStore = mainStore;\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.mainStore.chart.context;\n    }, this.onContextReady);\n  }\n\n  _createClass(ChartSizeStore, [{\n    key: \"zoomIn\",\n    value: function zoomIn() {\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_1__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_1__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__[\"LogActions\"].ChartSize, 'zoom In');\n\n      if (this.stx) {\n        this.stx.chart.lockScroll = false;\n        this.stx.chart.lockAutoScroll = false;\n        this.stx.zoomIn();\n      }\n    }\n  }, {\n    key: \"zoomOut\",\n    value: function zoomOut() {\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_1__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_1__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__[\"LogActions\"].ChartSize, 'zoom Out');\n\n      if (this.stx) {\n        this.stx.chart.lockScroll = false;\n        this.stx.chart.lockAutoScroll = false;\n        this.stx.zoomOut();\n      }\n    }\n  }]);\n\n  return ChartSizeStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"stx\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class.prototype, \"zoomIn\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"zoomIn\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"zoomOut\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"zoomOut\"), _class.prototype)), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/ChartState.js\":\n/*!*********************************!*\\\n  !*** ./src/store/ChartState.js ***!\n  \\*********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\n/* harmony import */ var _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../sass/_themes.scss */ \"./sass/_themes.scss\");\n/* harmony import */ var _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_sass_themes_scss__WEBPACK_IMPORTED_MODULE_2__);\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n/* eslint-disable no-new */\n\n\n\nvar ChartState = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec4 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec5 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec6 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec7 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec8 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec9 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec10 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  _createClass(ChartState, [{\n    key: \"comparisonStore\",\n    get: function get() {\n      return this.mainStore.comparison;\n    }\n  }, {\n    key: \"stxx\",\n    get: function get() {\n      return this.chartStore.stxx;\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.chartStore.context;\n    }\n  }, {\n    key: \"chartTypeStore\",\n    get: function get() {\n      return this.mainStore.chartType;\n    }\n  }, {\n    key: \"timeperiodStore\",\n    get: function get() {\n      return this.mainStore.timeperiod;\n    }\n  }, {\n    key: \"loader\",\n    get: function get() {\n      return this.mainStore.loader;\n    }\n  }]);\n\n  function ChartState(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, ChartState);\n\n    _initializerDefineProperty(this, \"granularity\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"chartType\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"startEpoch\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"endEpoch\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"symbol\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"isConnectionOpened\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"isChartReady\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"chartStatusListener\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"settings\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"showLastDigitStats\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"scrollToEpoch\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"onExportLayout\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"clearChart\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"isChartClosed\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"shouldMinimiseLastDigits\", _descriptor15, this);\n\n    _initializerDefineProperty(this, \"isStaticChart\", _descriptor16, this);\n\n    _initializerDefineProperty(this, \"shouldFetchTradingTimes\", _descriptor17, this);\n\n    _initializerDefineProperty(this, \"refreshActiveSymbols\", _descriptor18, this);\n\n    _initializerDefineProperty(this, \"hasReachedEndOfData\", _descriptor19, this);\n\n    _initializerDefineProperty(this, \"prevChartType\", _descriptor20, this);\n\n    _initializerDefineProperty(this, \"isChartScrollingToEpoch\", _descriptor21, this);\n\n    _initializerDefineProperty(this, \"crosshairState\", _descriptor22, this);\n\n    _initializerDefineProperty(this, \"maxTick\", _descriptor23, this);\n\n    this.chartControlsWidgets = void 0;\n\n    _initializerDefineProperty(this, \"onContextReady\", _descriptor24, this);\n\n    this.scrollChartToLeft = function (leftTick, force) {\n      var scrollToEpoch = _this.scrollToEpoch || leftTick && Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"getUTCEpoch\"])(leftTick.DT);\n      _this.stxx.chart.entryTick = null;\n\n      if (_this.scrollToEpoch && !_this.startEpoch && !force) {\n        var startEntry = _this.stxx.chart.dataSet.find(function (entry) {\n          return entry.DT.valueOf() === CIQ.strToDateTime(Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"getUTCDate\"])(scrollToEpoch)).valueOf();\n        });\n\n        if (startEntry) {\n          _this.stxx.chart.entryTick = _this.stxx.tickFromDate(startEntry.DT);\n        } else {\n          _this.stxx.chart.entryTick = _this.stxx.chart.dataSet.length - 1;\n        }\n\n        var scrollToTarget = _this.stxx.chart.dataSet.length - _this.stxx.chart.entryTick + 1;\n\n        if (_this.stxx.animations.liveScroll && _this.stxx.animations.liveScroll.running) {\n          _this.stxx.animations.liveScroll.stop();\n        }\n\n        _this.stxx.minimumLeftBars = 1;\n        _this.stxx.micropixels = 0;\n\n        _this.stxx.scrollTo(_this.stxx.chart, scrollToTarget, function () {\n          _this.stxx.setMaxTicks(5);\n\n          _this.stxx.micropixels = 0;\n\n          _this.setIsChartScrollingToEpoch(false);\n\n          _this.stxx.draw(); // This assignment should be always after draw()\n\n\n          _this.stxx.chart.lockScroll = true;\n        });\n      } else if (scrollToEpoch && _this.startEpoch || force) {\n        _this.stxx.chart.lockScroll = true;\n        _this.stxx.chart.entryTick = _this.stxx.tickFromDate(Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"getUTCDate\"])(_this.startEpoch || scrollToEpoch));\n\n        var _scrollToTarget = _this.stxx.chart.dataSet.length - _this.stxx.chart.entryTick;\n\n        if (!_this.endEpoch) {\n          _this.stxx.setMaxTicks(_scrollToTarget + 3);\n\n          _this.stxx.chart.scroll = _scrollToTarget + 1;\n        } else {\n          _this.stxx.setMaxTicks(_scrollToTarget + (Math.floor(_scrollToTarget / 5) || 2));\n\n          _this.stxx.chart.scroll = _scrollToTarget + (Math.floor(_scrollToTarget / 10) || 1);\n        }\n\n        _this.stxx.draw();\n\n        _this.setIsChartScrollingToEpoch(false);\n      } else {\n        _this.stxx.chart.entryTick = null;\n        _this.stxx.chart.lockScroll = false;\n\n        _this.stxx.home();\n\n        _this.stxx.draw();\n\n        _this.setIsChartScrollingToEpoch(false);\n      }\n\n      _this.mainStore.chart.feed.offMasterDataReinitialize(_this.scrollChartToLeft);\n\n      _this.mainStore.chart.feed.offMasterDataUpdate(_this.scrollChartToLeft);\n    };\n\n    this.mainStore = mainStore;\n    this.chartStore = mainStore.chart;\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.context;\n    }, this.onContextReady);\n  }\n\n  _createClass(ChartState, [{\n    key: \"updateProps\",\n    value: function updateProps(_ref) {\n      var chartControlsWidgets = _ref.chartControlsWidgets,\n          chartStatusListener = _ref.chartStatusListener,\n          chartType = _ref.chartType,\n          clearChart = _ref.clearChart,\n          endEpoch = _ref.endEpoch,\n          id = _ref.id,\n          _ref$isAnimationEnabl = _ref.isAnimationEnabled,\n          isAnimationEnabled = _ref$isAnimationEnabl === void 0 ? true : _ref$isAnimationEnabl,\n          isConnectionOpened = _ref.isConnectionOpened,\n          isStaticChart = _ref.isStaticChart,\n          granularity = _ref.granularity,\n          _ref$margin = _ref.margin,\n          margin = _ref$margin === void 0 ? 0 : _ref$margin,\n          onExportLayout = _ref.onExportLayout,\n          refreshActiveSymbols = _ref.refreshActiveSymbols,\n          removeAllComparisons = _ref.removeAllComparisons,\n          scrollToEpoch = _ref.scrollToEpoch,\n          settings = _ref.settings,\n          _ref$shouldFetchTradi = _ref.shouldFetchTradingTimes,\n          shouldFetchTradingTimes = _ref$shouldFetchTradi === void 0 ? true : _ref$shouldFetchTradi,\n          _ref$showLastDigitSta = _ref.showLastDigitStats,\n          showLastDigitStats = _ref$showLastDigitSta === void 0 ? false : _ref$showLastDigitSta,\n          startEpoch = _ref.startEpoch,\n          symbol = _ref.symbol,\n          crosshairState = _ref.crosshairState,\n          zoom = _ref.zoom,\n          maxTick = _ref.maxTick;\n      var isSymbolChanged = false;\n      var isGranularityChanged = false;\n      this.chartId = id;\n      this.chartStatusListener = chartStatusListener;\n      this.isAnimationEnabled = isAnimationEnabled;\n      this.isConnectionOpened = isConnectionOpened;\n      this.isStaticChart = isStaticChart;\n      this.margin = margin;\n      this.settings = settings;\n      this.shouldFetchTradingTimes = shouldFetchTradingTimes;\n      this.showLastDigitStats = showLastDigitStats;\n\n      if (chartControlsWidgets !== this.chartControlsWidgets) {\n        this.chartControlsWidgets = chartControlsWidgets;\n        if (this.stxx) this.mainStore.chart.updateHeight();\n      }\n\n      if (symbol !== this.symbol) {\n        this.symbol = symbol;\n        isSymbolChanged = true;\n\n        if (this.mainStore.chart && this.mainStore.chart.feed && scrollToEpoch) {\n          this.mainStore.chart.feed.onMasterDataReinitialize(this.scrollChartToLeft);\n        }\n      }\n\n      if (onExportLayout !== this.onExportLayout) {\n        this.onExportLayout = onExportLayout;\n        this.exportLayout();\n      }\n\n      if (chartType !== this.chartType && this.context) {\n        if (chartType === 'table') this.prevChartType = this.chartTypeStore.type.id;\n        this.setChartType(chartType);\n      }\n\n      if (granularity !== undefined && granularity !== this.granularity) {\n        this.setChartGranularity(granularity);\n        isGranularityChanged = true;\n\n        if (this.mainStore.chart && this.mainStore.chart.feed && !isSymbolChanged && scrollToEpoch) {\n          this.mainStore.chart.feed.onMasterDataReinitialize(this.scrollChartToLeft);\n        }\n      }\n\n      if (this.chartStore.activeSymbols && refreshActiveSymbols !== this.refreshActiveSymbols) {\n        this.refreshActiveSymbols = refreshActiveSymbols;\n\n        if (this.refreshActiveSymbols) {\n          this.chartStore.activeSymbols.retrieveActiveSymbols(this.refreshActiveSymbols);\n        }\n      }\n\n      if (clearChart !== this.clearChart) {\n        this.clearChart = clearChart;\n        this.cleanChart();\n      } // This if statement should be always after setting `this.scrollToEpoch` value\n\n\n      if (this.startEpoch !== startEpoch || this.endEpoch !== endEpoch) {\n        this.startEpoch = startEpoch;\n        this.endEpoch = endEpoch;\n\n        if (isStaticChart && this.stxx && this.granularity === this.mainStore.chart.granularity) {\n          // Reload the chart if it is a static chart and the granularity hasn't changed\n          this.mainStore.chart.newChart();\n        } else if (this.mainStore.chart.feed) {\n          /* When layout is importing and range is changing as the same time we dont need to set the range,\n             the imported layout witll take care of it. */\n          if (!this.scrollToEpoch && !isSymbolChanged && !isGranularityChanged) {\n            this.mainStore.chart.feed.onRangeChanged(true);\n          }\n        }\n      } // Please always assign scrollToEpoch after startEpoch and keep this if statement exactly after above if clause\n\n\n      if (!isStaticChart && scrollToEpoch !== this.scrollToEpoch) {\n        this.scrollToEpoch = scrollToEpoch;\n\n        if (this.mainStore.chart && this.mainStore.chart.feed && !isSymbolChanged && !isGranularityChanged) {\n          this.setIsChartScrollingToEpoch(true);\n          this.scrollChartToLeft();\n        }\n      }\n\n      if (removeAllComparisons) {\n        this.comparisonStore.removeAll();\n      }\n\n      if (crosshairState !== null && crosshairState !== this.crosshairState) {\n        this.mainStore.crosshair.setCrosshairState(crosshairState);\n        this.crosshairState = crosshairState;\n      }\n\n      if (zoom) {\n        if (zoom === 1) {\n          this.mainStore.chartSize.zoomIn();\n        } else {\n          this.mainStore.chartSize.zoomOut();\n        }\n      }\n\n      this.mainStore.chartSetting.setSettings(this.settings);\n\n      if (maxTick && this.maxTick !== maxTick && this.stxx) {\n        this.maxTick = maxTick;\n        this.setMaxtTick();\n      }\n\n      if (this.stxx) {\n        this.stxx.chart.panel.yAxis.drawCurrentPriceLabel = !this.endEpoch;\n        this.stxx.preferences.currentPriceLine = !this.endEpoch;\n        this.stxx.isAutoScale = this.settings && this.settings.isAutoScale !== false;\n        this.stxx.draw();\n      }\n    }\n  }, {\n    key: \"setMaxtTick\",\n    value: function setMaxtTick() {\n      if (this.stxx && this.maxTick) {\n        this.stxx.setMaxTicks(this.maxTick);\n        this.stxx.draw();\n      }\n    }\n  }, {\n    key: \"setIsChartScrollingToEpoch\",\n    value: function setIsChartScrollingToEpoch(isScrollingToEpoch) {\n      this.isChartScrollingToEpoch = isScrollingToEpoch;\n    }\n  }, {\n    key: \"hasReachedEndOfData\",\n    value: function hasReachedEndOfData(_hasReachedEndOfData) {\n      this.hasReachedEndOfData = _hasReachedEndOfData;\n    }\n  }, {\n    key: \"setChartClosed\",\n    value: function setChartClosed(isClosed) {\n      this.isChartClosed = isClosed;\n    }\n  }, {\n    key: \"setChartTheme\",\n    value: function setChartTheme(theme) {\n      var isChartClosed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.isChartClosed;\n      this.stxx.clearStyles();\n      this.stxx.setStyle('stx_grid', 'color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_grid\")]);\n      this.stxx.setStyle('stx_yaxis', 'color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_text\")]);\n      this.stxx.setStyle('stx_xaxis', 'color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_text\")]);\n      this.stxx.setStyle('stx_xaxis_dark', 'color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_text\")]);\n\n      if (!this.rootNode) {\n        this.rootNode = this.mainStore.chart.rootNode;\n      }\n\n      this.rootNode.querySelector('.chartContainer').style.backgroundColor = _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_bg\")]; // change chart colors to grey if the current market is closed and it is not a static chart\n\n      if (isChartClosed && !this.isStaticChart) {\n        var closedChartColor = 'rgba(129, 133, 152, 0.35)';\n        this.stxx.setStyle('stx_mountain_chart', 'borderTopColor', closedChartColor);\n        this.stxx.setStyle('stx_mountain_chart', 'backgroundColor', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_mountain_bg\")]);\n        this.stxx.setStyle('stx_mountain_chart', 'color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_mountain_bg_shade\")]); // line chart\n\n        this.stxx.setStyle('stx_line_chart', 'color', closedChartColor);\n        this.stxx.setStyle('stx_line_up', 'color', closedChartColor);\n        this.stxx.setStyle('stx_line_down', 'color', closedChartColor);\n        this.stxx.setStyle('stx_line_even', 'color', closedChartColor); // bar chart\n\n        this.stxx.setStyle('stx_bar_up', 'color', closedChartColor);\n        this.stxx.setStyle('stx_bar_down', 'color', closedChartColor);\n        this.stxx.setStyle('stx_bar_even', 'color', closedChartColor); // candle chart\n\n        this.stxx.setStyle('stx_candle_up', 'color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_closed_candle\")]);\n        this.stxx.setStyle('stx_candle_down', 'color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_closed_candle\")]);\n        this.stxx.setStyle('stx_candle_even', 'color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_closed_candle\")]); // candle wick\n\n        this.stxx.setStyle('stx_candle_shadow_up', 'color', closedChartColor);\n        this.stxx.setStyle('stx_candle_shadow_down', 'color', closedChartColor);\n        this.stxx.setStyle('stx_candle_shadow_even', 'color', closedChartColor); // hollow candle\n\n        this.stxx.setStyle('stx_hollow_candle_up', 'color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_closed_candle\")]);\n        this.stxx.setStyle('stx_hollow_candle_down', 'color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_closed_candle\")]);\n        this.stxx.setStyle('stx_hollow_candle_even', 'color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_closed_candle\")]); // baseline chart\n\n        this.stxx.setStyle('stx_baseline_up', 'color', closedChartColor);\n        this.stxx.setStyle('stx_baseline_down', 'color', closedChartColor);\n        this.stxx.setStyle('stx_baseline_even', 'color', closedChartColor); // kagi\n\n        this.stxx.setStyle('stx_kagi_up', 'color', closedChartColor);\n        this.stxx.setStyle('stx_kagi_down', 'color', closedChartColor); // this.stxx.setStyle('stx_kagi_even', 'color', closedChartColor);\n        // pandf\n\n        this.stxx.setStyle('stx_pandf_up', 'color', closedChartColor);\n        this.stxx.setStyle('stx_pandf_down', 'color', closedChartColor); // current price text color\n\n        this.stxx.setStyle('stx_current_hr_down', 'color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_candle_text_closed\")]);\n        this.stxx.setStyle('stx_current_hr_up', 'color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_candle_text_closed\")]); // current price bg color\n\n        this.stxx.setStyle('stx_current_hr_down', 'background-color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_candle_bg_closed\")]);\n        this.stxx.setStyle('stx_current_hr_up', 'background-color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_candle_bg_closed\")]);\n      } else {\n        this.stxx.setStyle('stx_mountain_chart', 'borderTopColor', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_mountain_border\")]);\n        this.stxx.setStyle('stx_mountain_chart', 'backgroundColor', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_mountain_bg\")]);\n        this.stxx.setStyle('stx_mountain_chart', 'color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_mountain_bg_shade\")]);\n        this.stxx.setStyle('stx_line_chart', 'color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_chart_mountain_border\")]);\n      }\n\n      this.stxx.draw();\n    }\n  }, {\n    key: \"setChartIsReady\",\n    value: function setChartIsReady(isChartReady) {\n      if (this.isChartReady !== isChartReady) {\n        this.isChartReady = isChartReady;\n\n        if (this.chartStatusListener && typeof this.chartStatusListener === 'function') {\n          this.chartStatusListener(isChartReady);\n        }\n      }\n    }\n  }, {\n    key: \"setChartGranularity\",\n    value: function setChartGranularity(granularity) {\n      var isTimeUnitSecond = Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"calculateTimeUnitInterval\"])(granularity).timeUnit === 'second';\n      var isChartTypeCandle = this.mainStore.chartType.isCandle || this.chartType && this.mainStore.chartType.isTypeCandle(this.chartType);\n\n      if (this.context && isTimeUnitSecond && isChartTypeCandle) {\n        this.setChartType('mountain'); // if granularity is zero, set the chartType to 'mountain'\n      }\n\n      this.granularity = granularity === null ? undefined : granularity;\n    }\n  }, {\n    key: \"setChartType\",\n    value: function setChartType(chartType) {\n      this.chartType = chartType;\n\n      if (this.chartTypeStore.onChartTypeChanged) {\n        this.chartTypeStore.onChartTypeChanged(chartType);\n      }\n    }\n  }, {\n    key: \"setShouldMinimiseLastDigit\",\n    value: function setShouldMinimiseLastDigit(status) {\n      this.shouldMinimiseLastDigits = status;\n    }\n  }, {\n    key: \"saveLayout\",\n    value: function saveLayout() {\n      if (!this.chartId) return;\n      var layoutData = this.stxx.exportLayout(true);\n      var json = JSON.stringify(layoutData);\n      CIQ.localStorageSetItem(\"layout-\".concat(this.chartId), json);\n    } // returns false if restoring layout fails\n\n  }, {\n    key: \"restoreLayout\",\n    value: function restoreLayout() {\n      var _this2 = this;\n\n      var layoutData = Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"createObjectFromLocalStorage\"])(\"layout-\".concat(this.chartId));\n      if (!layoutData || !layoutData.symbols.length) return false; // prop values will always take precedence\n\n      if (this.symbol !== undefined && this.symbol !== layoutData.symbols[0].symbol) {\n        // symbol prop takes precedence over local storage data\n        var symbolObject = this.chartStore.activeSymbols.getSymbolObj(this.symbol);\n        layoutData.symbols = [{\n          symbol: this.symbol,\n          symbolObject: symbolObject\n        }];\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = layoutData.symbols[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var symbolDat = _step.value;\n          // Symbol from cache may be in different language, so replace it with server's\n          var cachedSymbol = symbolDat.symbol;\n          var updatedSymbol = this.chartStore.activeSymbols.getSymbolObj(cachedSymbol);\n          symbolDat.symbolObject = updatedSymbol;\n\n          if (symbolDat.parameters) {\n            symbolDat.parameters.display = updatedSymbol.name; // These gap settings are default when new comparisons are added,\n            // but for backward support we need to set them here.\n\n            symbolDat.parameters.fillGaps = true;\n            symbolDat.parameters.gapDisplayStyle = true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (this.granularity !== undefined) {\n        var periodicity = Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"calculateTimeUnitInterval\"])(this.granularity);\n        layoutData = _objectSpread({}, layoutData, {}, periodicity);\n      } else {\n        // update this.granularity with chartLayout\n        var _layoutData = layoutData,\n            timeUnit = _layoutData.timeUnit,\n            interval = _layoutData.interval,\n            _periodicity = _layoutData.periodicity;\n        var period = timeUnit ? interval : _periodicity;\n        this.chartStore.granularity = Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"calculateGranularity\"])(period, timeUnit || interval);\n      }\n\n      if (this.startEpoch || this.endEpoch) {\n        // already set in chart params\n        delete layoutData.span;\n        delete layoutData.range;\n      }\n\n      if (this.chartType !== undefined) {\n        layoutData.chartType = this.chartType;\n      }\n\n      this.stxx.importLayout(layoutData, {\n        managePeriodicity: true,\n        cb: function cb() {\n          if (layoutData.tension) {\n            _this2.stxx.chart.tension = layoutData.tension;\n          }\n\n          _this2.restoreDrawings();\n\n          if (_this2.chartStore.loader) {\n            _this2.chartStore.loader.hide();\n\n            _this2.setChartIsReady(true);\n\n            _this2.stxx.home();\n          }\n\n          _this2.chartStore.setMainSeriesDisplay(_this2.stxx.chart.symbolObject.name);\n        }\n      });\n      this.chartStore.updateCurrentActiveSymbol();\n      return true;\n    }\n  }, {\n    key: \"saveDrawings\",\n    value: function saveDrawings() {\n      if (!this.chartId) return;\n      var obj = this.stxx.exportDrawings();\n      var symbol = this.stxx.chart.symbol;\n\n      if (obj.length === 0) {\n        CIQ.localStorage.removeItem(\"\".concat(symbol, \"-\").concat(this.chartId));\n      } else {\n        CIQ.localStorageSetItem(\"\".concat(symbol, \"-\").concat(this.chartId), JSON.stringify(obj));\n      }\n    }\n  }, {\n    key: \"restoreDrawings\",\n    value: function restoreDrawings() {\n      if (this.stxx && this.stxx.chart) {\n        var drawings = Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"createObjectFromLocalStorage\"])(\"\".concat(this.stxx.chart.symbol, \"-\").concat(this.chartId));\n\n        if (drawings) {\n          this.stxx.importDrawings(drawings);\n          this.stxx.draw();\n        }\n      }\n    }\n  }, {\n    key: \"cleanChart\",\n    value: function cleanChart() {\n      if (!this.clearChart || !this.isChartReady) return; // Remove comparsions\n\n      for (var field in this.stxx.chart.series) {\n        this.stxx.removeSeries(field);\n      } // Remove indiactors\n\n\n      for (var id in this.stxx.layout.studies) {\n        var sd = this.stxx.layout.studies[id];\n        CIQ.Studies.removeStudy(this.stxx, sd);\n      }\n\n      this.stxx.clearDrawings(); // TODO: use constant\n\n      this.mainStore.crosshair.onChange(2);\n    }\n  }, {\n    key: \"exportLayout\",\n    value: function exportLayout() {\n      if (!this.onExportLayout || !this.stxx) return;\n      var currentLayout = this.stxx.exportLayout();\n      currentLayout.drawings = this.stxx.exportDrawings();\n      currentLayout.series = [];\n\n      for (var field in this.stxx.chart.series) {\n        currentLayout.series.push(field);\n      }\n\n      currentLayout.previousMaxTicks = this.stxx.chart.maxTicks;\n      this.onExportLayout(currentLayout);\n    }\n  }, {\n    key: \"scrollListener\",\n    value: function scrollListener(_ref2) {\n      var grab = _ref2.grab;\n\n      if (grab && this.stxx.chart.lockScroll) {\n        this.stxx.chart.lockScroll = false;\n      }\n\n      if (this.stxx && this.stxx.chart && !this.stxx.chart.lockScroll) {\n        var dataSegment = this.stxx.chart.dataSegment;\n        var whiteSpace = this.chartStore.isMobile ? 50 : 150;\n\n        if (this.stxx.masterData.length < this.stxx.chart.maxTicks - whiteSpace) {\n          this.stxx.minimumLeftBars = this.stxx.chart.maxTicks - whiteSpace;\n        } else if (dataSegment) {\n          var hasReachedRight = this.stxx.chart.scroll <= this.stxx.chart.maxTicks - 1;\n          var noMoreScroll = this.hasReachedEndOfData || this.stxx.masterData.length === this.stxx.maxMasterDataSize;\n          var defaultMinimumBars = this.mainStore.chart.defaultMinimumBars;\n\n          if (this.stxx.chart.maxTicks - 10 > 50) {\n            defaultMinimumBars = 50;\n          }\n\n          this.stxx.minimumLeftBars = noMoreScroll && !hasReachedRight ? this.stxx.chart.maxTicks : Math.min(this.stxx.chart.maxTicks, defaultMinimumBars);\n        }\n      }\n    }\n  }]);\n\n  return ChartState;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"granularity\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"chartType\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"startEpoch\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"endEpoch\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"symbol\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"isConnectionOpened\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"isChartReady\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"chartStatusListener\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"settings\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"showLastDigitStats\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"scrollToEpoch\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"onExportLayout\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"clearChart\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"isChartClosed\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"shouldMinimiseLastDigits\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"isStaticChart\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"shouldFetchTradingTimes\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return true;\n  }\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"refreshActiveSymbols\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor19 = _applyDecoratedDescriptor(_class.prototype, \"hasReachedEndOfData\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor20 = _applyDecoratedDescriptor(_class.prototype, \"prevChartType\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor21 = _applyDecoratedDescriptor(_class.prototype, \"isChartScrollingToEpoch\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor22 = _applyDecoratedDescriptor(_class.prototype, \"crosshairState\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 1;\n  }\n}), _descriptor23 = _applyDecoratedDescriptor(_class.prototype, \"maxTick\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor24 = _applyDecoratedDescriptor(_class.prototype, \"onContextReady\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return function () {\n      _this3.stxx.addEventListener('layout', _this3.saveLayout.bind(_this3));\n\n      _this3.stxx.addEventListener('symbolChange', _this3.saveLayout.bind(_this3));\n\n      _this3.stxx.addEventListener('drawing', _this3.saveDrawings.bind(_this3));\n\n      _this3.stxx.addEventListener('move', _this3.scrollListener.bind(_this3));\n\n      _this3.rootNode = _this3.mainStore.chart.rootNode;\n      _this3.granularity = _this3.chartStore.granularity;\n      _this3.stxx.maxMasterDataSize = _this3.chartStore.getMaxMasterDataSize(_this3.granularity);\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"updateProps\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"updateProps\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setMaxtTick\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"setMaxtTick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setIsChartScrollingToEpoch\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"setIsChartScrollingToEpoch\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"hasReachedEndOfData\", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, \"hasReachedEndOfData\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setChartClosed\", [_dec6], Object.getOwnPropertyDescriptor(_class.prototype, \"setChartClosed\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setChartIsReady\", [_dec7], Object.getOwnPropertyDescriptor(_class.prototype, \"setChartIsReady\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setChartGranularity\", [_dec8], Object.getOwnPropertyDescriptor(_class.prototype, \"setChartGranularity\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setChartType\", [_dec9], Object.getOwnPropertyDescriptor(_class.prototype, \"setChartType\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setShouldMinimiseLastDigit\", [_dec10], Object.getOwnPropertyDescriptor(_class.prototype, \"setShouldMinimiseLastDigit\"), _class.prototype)), _class));\n/* harmony default export */ __webpack_exports__[\"default\"] = (ChartState);\n\n/***/ }),\n\n/***/ \"./src/store/ChartStore.js\":\n/*!*********************************!*\\\n  !*** ./src/store/ChartStore.js ***!\n  \\*********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _binaryapi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../binaryapi */ \"./src/binaryapi/index.js\");\n/* harmony import */ var _chartiq_injections__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chartiq_injections */ \"./src/chartiq_injections/index.js\");\n/* harmony import */ var _components_ui_Context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/ui/Context */ \"./src/components/ui/Context.js\");\n/* harmony import */ var _components_ui_KeystrokeHub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/ui/KeystrokeHub */ \"./src/components/ui/KeystrokeHub.js\");\n/* harmony import */ var _components_ui_Animation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/ui/Animation */ \"./src/components/ui/Animation.js\");\n/* harmony import */ var _feed__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../feed */ \"./src/feed/index.js\");\n/* harmony import */ var _SplinePlotter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../SplinePlotter */ \"./src/SplinePlotter.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\n/* harmony import */ var _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/PendingPromise */ \"./src/utils/PendingPromise.js\");\n/* harmony import */ var _sass_icons_chart_resize_icon_svg__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../sass/icons/chart/resize-icon.svg */ \"./sass/icons/chart/resize-icon.svg\");\n/* harmony import */ var _sass_icons_chart_resize_icon_svg__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_resize_icon_svg__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _sass_icons_edit_ic_edit_svg__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../sass/icons/edit/ic-edit.svg */ \"./sass/icons/edit/ic-edit.svg\");\n/* harmony import */ var _sass_icons_edit_ic_edit_svg__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_edit_ic_edit_svg__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _sass_icons_delete_ic_delete_svg__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../sass/icons/delete/ic-delete.svg */ \"./sass/icons/delete/ic-delete.svg\");\n/* harmony import */ var _sass_icons_delete_ic_delete_svg__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_delete_ic_delete_svg__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _sass_icons_chart_ic_down_svg__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../sass/icons/chart/ic-down.svg */ \"./sass/icons/chart/ic-down.svg\");\n/* harmony import */ var _sass_icons_chart_ic_down_svg__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_ic_down_svg__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _sass_icons_chart_jump_to_today_svg__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../sass/icons/chart/jump-to-today.svg */ \"./sass/icons/chart/jump-to-today.svg\");\n/* harmony import */ var _sass_icons_chart_jump_to_today_svg__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_jump_to_today_svg__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var _sass_icons_chart_ic_maximize_svg__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../sass/icons/chart/ic-maximize.svg */ \"./sass/icons/chart/ic-maximize.svg\");\n/* harmony import */ var _sass_icons_chart_ic_maximize_svg__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_sass_icons_chart_ic_maximize_svg__WEBPACK_IMPORTED_MODULE_15__);\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _class2, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n // import '../utils/raf';\n\nfunction renderSVGString(icon) {\n  var vb = icon.viewBox.split(' ').slice(2); // eslint-disable-next-line no-undef\n\n  return \"<svg width=\\\"\".concat(vb[0], \"\\\" height=\\\"\").concat(vb[1], \"\\\"><use xlink:href=\\\"\").concat(__webpack_require__.p + icon.url, \"\\\" /></svg>\");\n}\n\nvar ChartStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec4 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec5 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec6 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec7 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec8 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec9 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec10 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec11 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec12 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp = _class2 =\n/*#__PURE__*/\nfunction () {\n  function ChartStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, ChartStore);\n\n    this.RANGE_PADDING_PX = 125;\n    this.contextPromise = new _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_9__[\"default\"]();\n    this.rootNode = null;\n    this.stxx = null;\n    this.api = null;\n    this.defaults = {\n      granularity: 0,\n      chartType: 'mountain'\n    };\n    this.granularity = void 0;\n    this.enableRouting = null;\n    this.chartNode = null;\n    this.chartControlsNode = null;\n    this.holderStyle = void 0;\n    this.state = void 0;\n    this.onMessage = null;\n    this.defaultMinimumBars = 5;\n    this._barriers = [];\n\n    _initializerDefineProperty(this, \"containerWidth\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"context\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"currentActiveSymbol\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"isChartAvailable\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"chartHeight\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"chartContainerHeight\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"isMobile\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"cursorInChart\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"shouldRenderDialogs\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"yAxiswidth\", _descriptor10, this);\n\n    this.updateCanvas = function () {\n      if (!_this.stxx) {\n        return;\n      }\n\n      if (_this.stxx.slider) {\n        _this.stxx.slider.display(_this.stxx.layout.rangeSlider);\n      }\n\n      _this.stxx.resizeChart();\n    };\n\n    this.init = function (rootNode, modalNode, props) {\n      _this.loader.show();\n\n      _this.mainStore.state.setChartIsReady(false);\n\n      _this.loader.setState('chart-engine');\n\n      if (window.CIQ) {\n        _this._initChart(rootNode, modalNode, props);\n      } else {\n        __webpack_require__.e(/*! import() | chartiq */ \"chartiq\").then(__webpack_require__.t.bind(null, /*! chartiq */ \"./chartiq/chartiq.js\", 7)).then(Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"])(function (_ref) {\n          var CIQ = _ref.CIQ,\n              SplinePlotter = _ref.SplinePlotter;\n          CIQ.ChartEngine.htmlControls.baselineHandle = \"<div class=\\\"stx-baseline-handle\\\" style=\\\"display: none;\\\">\".concat(renderSVGString(_sass_icons_chart_resize_icon_svg__WEBPACK_IMPORTED_MODULE_10___default.a), \"</div>\");\n          CIQ.ChartEngine.htmlControls.iconsTemplate = \"<div class=\\\"stx-panel-control\\\"><div class=\\\"stx-panel-title\\\"></div><div class=\\\"stx-btn-panel\\\"><span class=\\\"stx-ico-up\\\">\".concat(renderSVGString(_sass_icons_chart_ic_down_svg__WEBPACK_IMPORTED_MODULE_13___default.a), \"</span></div><div class=\\\"stx-btn-panel\\\"><span class=\\\"stx-ico-focus\\\">\").concat(renderSVGString(_sass_icons_chart_ic_maximize_svg__WEBPACK_IMPORTED_MODULE_15___default.a), \"</span></div><div class=\\\"stx-btn-panel\\\"><span class=\\\"stx-ico-down\\\">\").concat(renderSVGString(_sass_icons_chart_ic_down_svg__WEBPACK_IMPORTED_MODULE_13___default.a), \"</span></div><div class=\\\"stx-btn-panel\\\"><span class=\\\"stx-ico-edit\\\">\").concat(renderSVGString(_sass_icons_edit_ic_edit_svg__WEBPACK_IMPORTED_MODULE_11___default.a), \"</span></div><div class=\\\"stx-btn-panel\\\"><span class=\\\"stx-ico-close\\\">\").concat(renderSVGString(_sass_icons_delete_ic_delete_svg__WEBPACK_IMPORTED_MODULE_12___default.a), \"</span></div></div>\");\n          CIQ.ChartEngine.htmlControls.mSticky = \"<div class=\\\"stx_sticky\\\"> <span class=\\\"mStickyInterior\\\"></span> <span class=\\\"mStickyRightClick\\\"><span class=\\\"overlayEdit stx-btn\\\" style=\\\"display:none\\\"><span class=\\\"ic-edit\\\">\".concat(renderSVGString(_sass_icons_edit_ic_edit_svg__WEBPACK_IMPORTED_MODULE_11___default.a), \"</span><span class=\\\"ic-delete\\\">\").concat(renderSVGString(_sass_icons_delete_ic_delete_svg__WEBPACK_IMPORTED_MODULE_12___default.a), \"</span></span> <span class=\\\"overlayTrashCan stx-btn\\\" style=\\\"display:none\\\"><span class=\\\"ic-edit\\\">\").concat(renderSVGString(_sass_icons_edit_ic_edit_svg__WEBPACK_IMPORTED_MODULE_11___default.a), \"</span><span class=\\\"ic-delete\\\">\").concat(renderSVGString(_sass_icons_delete_ic_delete_svg__WEBPACK_IMPORTED_MODULE_12___default.a), \"</span></span> <span class=\\\"mouseDeleteInstructions\\\"><span>(</span><span class=\\\"mouseDeleteText\\\">right-click to delete</span><span class=\\\"mouseManageText\\\">right-click to manage</span><span>)</span></span></span></div>\");\n          CIQ.ChartEngine.htmlControls.home = \"<div class=\\\"stx_jump_today\\\" style=\\\"display:none\\\">\".concat(renderSVGString(_sass_icons_chart_jump_to_today_svg__WEBPACK_IMPORTED_MODULE_14___default.a), \"</div>\");\n          window.CIQ = CIQ;\n          SplinePlotter.plotSpline = _SplinePlotter__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\n\n          _this._initChart(rootNode, modalNode, props);\n        }));\n      }\n    };\n\n    this.onMarketOpenClosedChange = function (changes) {\n      var symbolObjects = _this.stxx.getSymbols().map(function (item) {\n        return item.symbolObject;\n      });\n\n      var shouldRefreshChart = false;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = symbolObjects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _step$value = _step.value,\n              symbol = _step$value.symbol,\n              name = _step$value.name;\n\n          if (symbol in changes) {\n            if (changes[symbol]) {\n              shouldRefreshChart = true;\n\n              _this.chartClosedOpenThemeChange(false);\n\n              _this.mainStore.notifier.notifyMarketOpen(name);\n            } else {\n              _this.chartClosedOpenThemeChange(true);\n\n              _this.mainStore.notifier.notifyMarketClose(name);\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (shouldRefreshChart) {\n        // refresh to stream opened market\n        _this.refreshChart();\n      }\n    };\n\n    _initializerDefineProperty(this, \"calculateYaxisWidth\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"updateYaxisWidth\", _descriptor12, this);\n\n    this.mainStore = mainStore;\n  }\n\n  _createClass(ChartStore, [{\n    key: \"updateHeight\",\n    value: function updateHeight(position) {\n      var historicalMobile = this.mainStore.chartSetting.historical && this.isMobile;\n      var panelPosition = position || this.mainStore.chartSetting.position; // TODO use constant here for chartcontrol height\n\n      var offsetHeight = panelPosition === 'bottom' && this.stateStore.chartControlsWidgets ? 40 : 0;\n      this.chartHeight = this.chartNode.offsetHeight;\n      this.chartContainerHeight = this.chartHeight - offsetHeight - (historicalMobile ? 45 : 0);\n    }\n  }, {\n    key: \"resizeScreen\",\n    value: function resizeScreen() {\n      if (!this.context) {\n        return;\n      }\n\n      if (this.modalNode.clientWidth >= 1280) {\n        this.containerWidth = 1280;\n      } else if (this.modalNode.clientWidth >= 900) {\n        this.containerWidth = 900;\n      } else {\n        this.containerWidth = 480;\n      }\n\n      this.updateHeight();\n      this.updateCanvas(); // Height updates are not immediate, so we must resize the canvas with\n      // a slight delay for it to pick up the correct chartContainer height.\n      // In mobile devices, a longer delay is given as DOM updates are slower.\n\n      setTimeout(this.updateCanvas, this.isMobile ? 500 : 100);\n    }\n  }, {\n    key: \"_initChart\",\n    value: function _initChart(rootNode, modalNode, props) {\n      var _this2 = this;\n\n      var _self = this; // Add custom injections to the CIQ\n\n\n      Object(_chartiq_injections__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n      /**\n       * only home button click part modified to avoid calling\n       * newChart() on home function while historical enable\n       */\n\n      CIQ.ChartEngine.prototype.registerHTMLElements = function () {\n        var c = this.chart.container;\n\n        for (var control in CIQ.ChartEngine.htmlControls) {\n          if (typeof this.chart[control] === 'undefined' && typeof this.controls[control] === 'undefined') {\n            if (!this.allowZoom && control === 'chartControls') continue;\n            var el = this.container.querySelector(\".\".concat(control), c);\n\n            if (el) {\n              this.chart[control] = el;\n              this.controls[control] = el;\n            } else {\n              var rawHTML = CIQ.ChartEngine.htmlControls[control];\n              if (!rawHTML) continue;\n              var div = document.createElement('DIV');\n              div.innerHTML = rawHTML;\n              el = div.firstChild;\n              c.appendChild(el);\n              this.chart[control] = el;\n              this.controls[control] = el;\n              CIQ.appendClassName(el, control);\n            }\n          }\n        }\n\n        var chartControls = this.controls.chartControls,\n            home = this.controls.home;\n\n        if (chartControls) {\n          var zoomIn = this.container.querySelector('.stx-zoom-in', chartControls);\n          var zoomOut = this.container.querySelector('.stx-zoom-out', chartControls);\n          CIQ.safeClickTouch(zoomIn, function (self) {\n            return function (e) {\n              self.zoomIn(e);\n              e.stopPropagation();\n            };\n          }(this));\n          CIQ.safeClickTouch(zoomOut, function (self) {\n            return function (e) {\n              self.zoomOut(e);\n              e.stopPropagation();\n            };\n          }(this));\n\n          if (!CIQ.touchDevice) {\n            this.makeModal(zoomIn);\n            this.makeModal(zoomOut);\n          }\n        }\n\n        if (home) {\n          CIQ.safeClickTouch(home, function (self) {\n            return function (e) {\n              e.stopPropagation();\n              self.home({\n                animate: true\n              });\n            };\n          }(this));\n\n          if (!CIQ.touchDevice) {\n            this.makeModal(home);\n          }\n        }\n      };\n\n      CIQ.ChartEngine.prototype.home = function (params) {\n        this.swipe.amplitude = 0;\n        var layout = this.layout;\n\n        if (_typeof(params) !== 'object') {\n          // backward compatibility\n          params = {\n            maintainWhitespace: params\n          };\n        }\n\n        function resetPanelZooms(stx) {\n          for (var p in stx.panels) {\n            var yAxes = stx.panels[p].yaxisLHS.concat(stx.panels[p].yaxisRHS);\n\n            for (var a = 0; a < yAxes.length; a++) {\n              stx.calculateYAxisMargins(yAxes[a]);\n            }\n          }\n        }\n\n        function scrollToCallback(self, chart, exactScroll) {\n          return function () {\n            resetPanelZooms(self);\n            chart.scroll = exactScroll;\n            self.draw();\n          };\n        }\n\n        if (typeof params.maintainWhitespace === 'undefined') params.maintainWhitespace = true; // maintain the whitespace unless set to false\n\n        this.cancelTouchSingleClick = true;\n\n        if (!this.chart.dataSet || !this.chart.dataSet.length) {\n          // to clear out anything that may have been on the screen. Otherwise we still show stale data.\n          this.draw();\n          return;\n        }\n\n        this.micropixels = 0;\n        var barsDisplayedOnScreen = Math.floor(this.chart.width / layout.candleWidth);\n\n        for (var chartName in this.charts) {\n          var chart = this.charts[chartName];\n          if (params.chart && params.chart !== chart) continue;\n          var whitespace = 0;\n          if (params.maintainWhitespace && this.preferences.whitespace >= 0) whitespace = this.preferences.whitespace;\n          if (params.whitespace || params.whitespace === 0) whitespace = params.whitespace;\n          var leftMargin = this.getLabelOffsetInPixels(chart, layout.chartType);\n          if (leftMargin > whitespace) whitespace = leftMargin;\n          var exactScroll = Math.min(barsDisplayedOnScreen, chart.dataSet.length); // the scroll must be the number of bars you want to see.\n\n          if (this.chart.allowScrollPast) exactScroll = barsDisplayedOnScreen; // If whitespace allowed on left of screen\n\n          this.micropixels = this.chart.width - exactScroll * layout.candleWidth - whitespace;\n          this.preferences.whitespace = whitespace;\n\n          while (this.micropixels > layout.candleWidth) {\n            // If micropixels is larger than a candle then scroll back further\n            exactScroll++;\n            this.micropixels -= layout.candleWidth;\n          }\n\n          while (this.micropixels < 0) {\n            exactScroll--;\n            this.micropixels += layout.candleWidth;\n          }\n\n          this.micropixels -= layout.candleWidth;\n          exactScroll++;\n          if ((!this.mainSeriesRenderer || !this.mainSeriesRenderer.standaloneBars) && !this.standaloneBars[layout.chartType]) this.micropixels += layout.candleWidth / 2; // bar charts display at beginning of candle\n\n          if (this.isHistoricalMode() && _self.isMobile) {\n            exactScroll = parseInt(exactScroll * 0.8, 10); // eslint-disable-line\n          } else if (this.isHistoricalMode()) {\n            exactScroll = parseInt(exactScroll * 0.9, 10); // eslint-disable-line\n          }\n\n          if (params.animate) {\n            var self = this;\n            this.scrollTo(chart, exactScroll, scrollToCallback(self, chart, exactScroll));\n          } else {\n            chart.scroll = exactScroll;\n            resetPanelZooms(this);\n          }\n        }\n\n        this.draw();\n      };\n\n      CIQ.ChartEngine.prototype.isHistoricalMode = function () {\n        return !!_self.stateStore.endEpoch;\n      };\n\n      this.rootNode = rootNode;\n      this.modalNode = modalNode;\n      this.chartNode = this.rootNode.querySelector('.ciq-chart-area');\n      this.chartControlsNode = this.rootNode.querySelector('.cq-chart-controls');\n\n      CIQ.Plotter.prototype.getYAxisWidth = function () {\n        return _this2.yAxiswidth;\n      }; // monkey patching to handle radius and height for `current price label`\n\n\n      CIQ.ChartEngine.prototype.createYAxisLabel = function (panel, txt, y, backgroundColor, color, ctx, yAxis) {\n        if (panel.yAxis.drawPriceLabels === false || panel.yAxis.noDraw) return;\n        var yax = yAxis || panel.yAxis;\n        if (yax.noDraw || !yax.width) return;\n        var context = ctx || this.chart.context; // SmartChart Team: this prop modified\n\n        var margin = 9;\n        var height = 24;\n        var radius;\n\n        if (this.labelType === 'currentSpot') {\n          this.canvasFont('stx_current_hr_up', context);\n        } else {\n          this.canvasFont('stx_price_label', context);\n        }\n\n        var tickWidth = this.drawBorders ? 3 : 0; // pixel width of tick off edge of border\n\n        var textWidth = context.measureText(txt).width;\n        var width;\n\n        try {\n          if (textWidth + margin > yax.width) {\n            width = textWidth + tickWidth + margin * 2;\n          } else {\n            width = yax.width + margin;\n          }\n        } catch (e) {\n          width = yax.width;\n        } // Firefox doesn't like this in hidden iframe\n        // some y-axis label has style of `roundRectArrow` and some has `rect`, we reduce\n        // 14px which is about the `roundRectArrow` style arrow to make the label all fit\n\n\n        width -= 14;\n\n        if (this.chart.yAxis.width < width) {\n          this.chart.yAxis.width = width;\n          this.calculateYAxisPositions();\n        } else {\n          width = this.chart.yAxis.width;\n        }\n\n        var x = this.width - this.chart.yAxis.width;\n        var left = (width - textWidth) / 2;\n        if (yax.width < 0) x += yax.width - width;\n        var position = yax.position === null ? panel.chart.yAxis.position : yax.position;\n\n        if (position === 'left') {\n          width *= -1;\n          if (yax.width < 0) x -= yax.width + width;\n          radius = -3;\n          context.textAlign = 'right';\n        }\n\n        if (y + height / 2 > yax.bottom) y = yax.bottom - height / 2;\n        if (y - height / 2 < yax.top) y = yax.top + height / 2;\n\n        if (typeof CIQ[this.yaxisLabelStyle] === 'undefined') {\n          this.yaxisLabelStyle = 'roundRectArrow'; // in case of user error, set a default.\n        }\n\n        var yaxisLabelStyle = this.yaxisLabelStyle;\n        if (yax.yaxisLabelStyle) yaxisLabelStyle = yax.yaxisLabelStyle; // as crosshair and countdown style is `rect`, so due to previous rule we should\n        // increase there x position to fit the y-axis\n\n        x += 1;\n\n        if (this.labelType === 'currentSpot') {\n          x += 13;\n          left -= 8;\n          radius = 0;\n        } else if (this.labelType === 'crosshair') {\n          height = 30;\n        }\n\n        var params = {\n          ctx: context,\n          x: x,\n          y: y,\n          top: y - height / 2,\n          width: width,\n          height: height,\n          radius: radius,\n          backgroundColor: backgroundColor,\n          fill: true,\n          stroke: false,\n          margin: {\n            left: left,\n            top: 1\n          },\n          txt: txt,\n          color: color\n        };\n        CIQ[yaxisLabelStyle](params);\n      };\n\n      var symbol = props.symbol,\n          chartType = props.chartType,\n          granularity = props.granularity,\n          requestAPI = props.requestAPI,\n          requestSubscribe = props.requestSubscribe,\n          requestForget = props.requestForget,\n          requestForgetStream = props.requestForgetStream,\n          isMobile = props.isMobile,\n          enableRouting = props.enableRouting,\n          onMessage = props.onMessage,\n          settings = props.settings,\n          onSettingsChange = props.onSettingsChange;\n      this.api = new _binaryapi__WEBPACK_IMPORTED_MODULE_1__[\"BinaryAPI\"](requestAPI, requestSubscribe, requestForget, requestForgetStream); // trading times and active symbols can be reused across multiple charts\n\n      this.tradingTimes = ChartStore.tradingTimes || (ChartStore.tradingTimes = new _binaryapi__WEBPACK_IMPORTED_MODULE_1__[\"TradingTimes\"](this.api, this.mainStore.state.shouldFetchTradingTimes));\n      this.activeSymbols = ChartStore.activeSymbols || (ChartStore.activeSymbols = new _binaryapi__WEBPACK_IMPORTED_MODULE_1__[\"ActiveSymbols\"](this.api, this.tradingTimes));\n      var chartSetting = this.mainStore.chartSetting;\n      chartSetting.setSettings(settings);\n      chartSetting.onSettingsChange = onSettingsChange;\n      this.isMobile = isMobile;\n      this.state = this.mainStore.state;\n      this.mainStore.notifier.onMessage = onMessage;\n      this.granularity = granularity !== undefined ? granularity : this.defaults.granularity;\n      var engineParams = {\n        maxMasterDataSize: this.getMaxMasterDataSize(this.granularity),\n        // cap size so tick_history requests do not become too large\n        markerDelay: null,\n        // disable 25ms delay for placement of markers\n        container: this.rootNode.querySelector('.chartContainer'),\n        controls: {\n          chartControls: null\n        },\n        // hide the default zoom buttons\n        yaxisLabelStyle: 'roundRect',\n        preferences: {\n          currentPriceLine: true,\n          whitespace: isMobile ? 50 : 150\n        },\n        chart: {\n          yAxis: {\n            // Put some top margin so chart doesn't get blocked by chart title\n            initialMarginTop: 125,\n            initialMarginBottom: 100,\n            // position: 'left',\n            displayBorder: true,\n            justifyRight: false\n          },\n          xAxis: {\n            displayBorder: true\n          },\n          gaplines: true,\n          dynamicYAxis: true\n        },\n        minimumLeftBars: this.defaultMinimumBars,\n        yTolerance: 999999 // disable vertical scrolling\n\n      };\n      var chartLayout = {\n        chartType: chartType || this.defaults.chartType\n      };\n\n      if (chartLayout.chartType === 'spline') {\n        // cause there's no such thing as spline chart in ChartIQ\n        chartLayout.chartType = 'mountain';\n        engineParams.chart.tension = chartLayout.tension = 0.5;\n      }\n\n      var rangeSpan = this.getRangeSpan();\n\n      if (rangeSpan) {\n        chartLayout = _objectSpread({}, chartLayout, {}, rangeSpan);\n      }\n\n      engineParams.layout = chartLayout;\n      var stxx = this.stxx = new CIQ.ChartEngine(engineParams); // TODO this part of the code prevent the chart to go to home after refreshing the page when the chart was zoomed in before.\n      // let defaultMinimumBars = this.defaultMinimumBars;\n      // if (stxx.chart.maxTicks - 10 > 50) {\n      //     defaultMinimumBars = 50;\n      // }\n      // stxx.minimumLeftBars = Math.min(stxx.chart.maxTicks, defaultMinimumBars);\n      // macos trackpad is so sensitive that it'll break our zoom animation.\n      // unfortunately there is no way to detect a trackpad from javascript,\n      // here we drop 'wheel' events shorter that 40ms\n      // TODO: email chartiq support to fix this.\n\n      var org_run = stxx.animations.zoom.run.bind(stxx.animations.zoom);\n      var wheelInMotion = false;\n\n      stxx.animations.zoom.run = function (fc, startValues, endValues) {\n        if (wheelInMotion) return;\n        wheelInMotion = true;\n        setTimeout(function () {\n          wheelInMotion = false;\n        }, 40);\n        return org_run(fc, startValues, endValues);\n      };\n\n      stxx.isAutoScale = settings && settings.isAutoScale !== false;\n      ChartStore.chartCount += 1;\n      var deleteElement = stxx.chart.panel.holder.parentElement.querySelector('.mouseDeleteText');\n      var manageElement = stxx.chart.panel.holder.parentElement.querySelector('.mouseManageText');\n      deleteElement.textContent = t.translate('right-click to delete');\n      manageElement.textContent = t.translate('right-click to manage');\n      if (this.state.isAnimationEnabled) Object(_components_ui_Animation__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(stxx, {\n        stayPut: true\n      }); // stxx.chart.lockScroll = true;\n      // connect chart to data\n\n      this.feed = new _feed__WEBPACK_IMPORTED_MODULE_6__[\"Feed\"](this.api, stxx, this.mainStore, this.tradingTimes);\n      stxx.attachQuoteFeed(this.feed, {\n        refreshInterval: null\n      });\n      this.enableRouting = enableRouting;\n\n      if (this.enableRouting) {\n        this.routingStore.handleRouting();\n      }\n\n      this.holderStyle = stxx.chart.panel.holder.style;\n      var context = new _components_ui_Context__WEBPACK_IMPORTED_MODULE_3__[\"default\"](stxx, this.rootNode); // only one instance of keystrokeHub should exist\n\n      if (ChartStore.keystrokeHub === undefined) {\n        ChartStore.keystrokeHub = new _components_ui_KeystrokeHub__WEBPACK_IMPORTED_MODULE_4__[\"default\"](document.body, null, {\n          cb: _components_ui_KeystrokeHub__WEBPACK_IMPORTED_MODULE_4__[\"default\"].defaultHotKeys\n        });\n      } // TODO: excluded studies\n\n\n      var studiesStore = this.mainStore.studies;\n      stxx.callbacks.studyOverlayEdit = studiesStore.editStudy;\n      stxx.callbacks.studyPanelEdit = studiesStore.editStudy;\n      this.loader.setState('market-symbol');\n      this.activeSymbols.retrieveActiveSymbols().then(function () {\n        _this2.loader.setState('trading-time');\n\n        _this2.tradingTimes.initialize().then(Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"])(function () {\n          // In the odd event that chart is destroyed by the time\n          // the request finishes, just calmly return...\n          if (stxx.isDestroyed) {\n            return;\n          }\n\n          var isRestoreSuccess = _this2.state.restoreLayout();\n\n          if (!isRestoreSuccess) {\n            _this2.changeSymbol( // default to first available symbol\n            symbol || Object.keys(_this2.activeSymbols.symbolMap)[0], _this2.granularity);\n          }\n\n          _this2.context = context;\n\n          _this2.chartClosedOpenThemeChange(!_this2.currentActiveSymbol.exchange_is_open);\n\n          _this2.mainStore.chart.tradingTimes.onMarketOpenCloseChanged(Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"])(function (changes) {\n            for (var sy in changes) {\n              if (_this2.currentActiveSymbol.symbol === sy) {\n                _this2.chartClosedOpenThemeChange(!changes[sy]);\n              }\n            }\n          }));\n\n          stxx.container.addEventListener('mouseenter', _this2.onMouseEnter);\n          stxx.container.addEventListener('mouseleave', _this2.onMouseLeave);\n\n          _this2.contextPromise.resolve(_this2.context);\n\n          _this2.resizeScreen();\n\n          Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"reaction\"])(function () {\n            return [_this2.state.symbol, _this2.state.granularity];\n          }, function () {\n            if (_this2.state.symbol !== undefined || _this2.state.granularity !== undefined) {\n              _this2.changeSymbol(_this2.state.symbol, _this2.state.granularity);\n            }\n          });\n\n          _this2.tradingTimes.onMarketOpenCloseChanged(_this2.onMarketOpenClosedChange);\n\n          setTimeout(Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"])(function () {\n            // Defer the render of the dialogs and dropdowns; this enables\n            // considerable performance improvements for slower devices.\n            _this2.shouldRenderDialogs = true;\n          }), 500);\n        }));\n      });\n\n      if ('ResizeObserver' in window) {\n        this.resizeObserver = new ResizeObserver(this.resizeScreen);\n        this.resizeObserver.observe(modalNode);\n      } else {\n        __webpack_require__.e(/*! import() | resize-observer-polyfill */ \"vendors~resize-observer-polyfill\").then(__webpack_require__.bind(null, /*! resize-observer-polyfill */ \"./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\")).then(function (_ref2) {\n          var ResizeObserver = _ref2[\"default\"];\n          window.ResizeObserver = ResizeObserver;\n\n          if (stxx.isDestroyed || !modalNode) {\n            return;\n          }\n\n          _this2.resizeObserver = new ResizeObserver(_this2.resizeScreen);\n\n          _this2.resizeObserver.observe(modalNode);\n        });\n      }\n    }\n  }, {\n    key: \"getMaxMasterDataSize\",\n    value: function getMaxMasterDataSize(granularity) {\n      var maxMasterDataSize = 5000; // When granularity is 1 day\n\n      if (granularity === 86400) maxMasterDataSize = Math.floor(2.8 * 365); // When granularity is 8 hours\n      else if (granularity === 28800) maxMasterDataSize = Math.floor(2.8 * 365 * 3);\n      return maxMasterDataSize;\n    }\n  }, {\n    key: \"chartClosedOpenThemeChange\",\n    value: function chartClosedOpenThemeChange(isChartClosed) {\n      this.mainStore.state.setChartClosed(isChartClosed);\n      this.mainStore.state.setChartTheme(this.mainStore.chartSetting.theme, isChartClosed);\n    }\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter() {\n      this.cursorInChart = true;\n      /*\n      * Disable key press events for chart until we can get it not to\n      * interfere with key presses outside the chart:\n      */\n      // ChartStore.keystrokeHub.setActiveContext(this.context);\n    }\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave() {\n      this.cursorInChart = false;\n      /*\n      * Disable key press events for chart until we can get it not to\n      * interfere with key presses outside the chart:\n      */\n      // ChartStore.keystrokeHub.setActiveContext(null);\n    }\n  }, {\n    key: \"updateCurrentActiveSymbol\",\n    value: function updateCurrentActiveSymbol() {\n      var symbolObject = this.stxx.chart.symbolObject;\n      this.currentActiveSymbol = symbolObject;\n      this.stxx.chart.yAxis.decimalPlaces = symbolObject.decimal_places;\n      this.setMainSeriesDisplay(symbolObject.name);\n    }\n  }, {\n    key: \"setChartAvailability\",\n    value: function setChartAvailability(status) {\n      this.isChartAvailable = status;\n    }\n  }, {\n    key: \"changeSymbol\",\n    value: function changeSymbol(symbolObj, granularity) {\n      if (typeof symbolObj === 'string') {\n        symbolObj = this.activeSymbols.getSymbolObj(symbolObj);\n      }\n\n      var isSymbolAvailable = symbolObj && this.currentActiveSymbol;\n\n      if (isSymbolAvailable && symbolObj.symbol === this.currentActiveSymbol.symbol && granularity !== undefined && granularity === this.granularity) {\n        return;\n      }\n\n      var params;\n\n      if (granularity !== undefined) {\n        this.granularity = granularity;\n        this.stxx.maxMasterDataSize = this.getMaxMasterDataSize(this.granularity);\n        params = {\n          periodicity: Object(_utils__WEBPACK_IMPORTED_MODULE_8__[\"calculateTimeUnitInterval\"])(granularity)\n        };\n      }\n\n      if (params === undefined && symbolObj) {\n        // Remove comparisons before symbol changes\n        for (var field in this.stxx.chart.series) {\n          this.stxx.removeSeries(field);\n        }\n      }\n\n      this.newChart(symbolObj, params);\n\n      if (symbolObj) {\n        this.updateCurrentActiveSymbol();\n      }\n    }\n  }, {\n    key: \"newChart\",\n    // Calling newChart with symbolObj as undefined refreshes the chart\n    value: function newChart() {\n      var _this3 = this;\n\n      var symbolObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currentActiveSymbol;\n      var params = arguments.length > 1 ? arguments[1] : undefined;\n      if (!symbolObj) return;\n      this.stxx.chart.symbolDisplay = symbolObj.name;\n      this.loader.show();\n      this.mainStore.state.setChartIsReady(false);\n\n      var onChartLoad = function onChartLoad(err) {\n        _this3.setMainSeriesDisplay(symbolObj.name);\n\n        _this3.loader.hide();\n\n        _this3.mainStore.state.setChartIsReady(true);\n\n        if (err) {\n          /* TODO, symbol not found error */\n          return;\n        }\n\n        _this3.state.restoreDrawings();\n\n        if (_this3.mainStore.chart.feed) {\n          _this3.mainStore.chart.feed.scaleChart();\n        }\n      };\n\n      this.yAxiswidth = 0;\n      var rangeSpan = this.getRangeSpan();\n      this.stxx.newChart(symbolObj, null, null, onChartLoad, _objectSpread({}, params, {}, rangeSpan));\n      this.chartClosedOpenThemeChange(!symbolObj.exchange_is_open);\n    }\n  }, {\n    key: \"getRangeSpan\",\n    value: function getRangeSpan() {\n      var _this$state = this.state,\n          startEpoch = _this$state.startEpoch,\n          endEpoch = _this$state.endEpoch;\n      var range, span;\n      var paddingRatio = this.chartNode.clientWidth / this.RANGE_PADDING_PX;\n      var elapsedSeconds = (endEpoch || startEpoch) - (startEpoch || endEpoch);\n      var epochPadding = elapsedSeconds / paddingRatio | 0;\n\n      if (startEpoch || endEpoch) {\n        var dtLeft = startEpoch ? CIQ.strToDateTime(Object(_utils__WEBPACK_IMPORTED_MODULE_8__[\"getUTCDate\"])(startEpoch - epochPadding)) : undefined;\n        var dtRight = endEpoch ? CIQ.strToDateTime(Object(_utils__WEBPACK_IMPORTED_MODULE_8__[\"getUTCDate\"])(endEpoch + epochPadding)) : undefined;\n        var periodicity = Object(_utils__WEBPACK_IMPORTED_MODULE_8__[\"calculateTimeUnitInterval\"])(this.granularity);\n        range = {\n          dtLeft: dtLeft,\n          dtRight: dtRight,\n          periodicity: periodicity,\n          goIntoFuture: true,\n          goIntoPast: true\n        };\n\n        if (dtLeft) {\n          span = {\n            base: 'all',\n            periodicity: periodicity\n          };\n        }\n\n        return {\n          range: range,\n          span: span\n        };\n      }\n    }\n  }, {\n    key: \"setMainSeriesDisplay\",\n    value: function setMainSeriesDisplay(name) {\n      if (this.stxx && this.stxx.chart) {\n        // Set display name of main series (to be shown in crosshair tooltip)\n        this.stxx.chart.seriesRenderers._main_series.seriesParams[0].display = name; // TODO, we use to use `field` field to recgnize main seris and show\n        // it's crosshair, as in ChartIQ 6.2.2 they are going to remove this field\n        // we should find another way of detecting main series price, till then\n        // we found this temporary solution.\n\n        this.stxx.chart.seriesRenderers._main_series.seriesParams[0].field = 'Close';\n      }\n    } // Makes requests to tick history API that will replace\n    // Existing chart tick/ohlc data\n\n  }, {\n    key: \"refreshChart\",\n    value: function refreshChart() {\n      this.newChart();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      ChartStore.chartCount -= 1;\n\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n      }\n\n      if (this.tradingTimes && ChartStore.chartCount === 0) {\n        ChartStore.tradingTimes = null;\n        this.tradingTimes.destructor();\n      } // Destroying the chart does not unsubscribe the streams;\n      // we need to manually unsubscribe them.\n\n\n      if (this.feed) {\n        this.feed.unsubscribeAll();\n        this.feed = null;\n      }\n\n      if (ChartStore.keystrokeHub.context === this.context) {\n        ChartStore.keystrokeHub.setActiveContext(null);\n      }\n\n      if (this.stxx) {\n        this.stxx.container.removeEventListener('mouseenter', this.onMouseEnter);\n        this.stxx.container.removeEventListener('mouseleave', this.onMouseLeave);\n\n        this.stxx.updateChartData = function () {}; // prevent any data from entering the chart\n\n\n        this.stxx.isDestroyed = true;\n        this.stxx.destroy();\n        this.stxx = null;\n      }\n    }\n  }, {\n    key: \"loader\",\n    get: function get() {\n      return this.mainStore.loader;\n    }\n  }, {\n    key: \"routingStore\",\n    get: function get() {\n      return this.mainStore.routing;\n    }\n  }, {\n    key: \"stateStore\",\n    get: function get() {\n      return this.mainStore.state;\n    }\n  }, {\n    key: \"pip\",\n    get: function get() {\n      return this.currentActiveSymbol.decimal_places;\n    }\n  }, {\n    key: \"categorizedSymbols\",\n    get: function get() {\n      var _this4 = this;\n\n      if (!this.activeSymbols || this.activeSymbols.categorizedSymbols.length === 0) return [];\n      var activeSymbols = this.activeSymbols.activeSymbols;\n      return Object(_utils__WEBPACK_IMPORTED_MODULE_8__[\"cloneCategories\"])(activeSymbols, function (item) {\n        var selected = item.dataObject.symbol === _this4.currentActiveSymbol.symbol;\n        return _objectSpread({}, item, {\n          selected: selected\n        });\n      });\n    }\n  }]);\n\n  return ChartStore;\n}(), _class2.keystrokeHub = void 0, _class2.chartCount = 0, _class2.tradingTimes = void 0, _class2.activeSymbols = void 0, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"containerWidth\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"context\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"currentActiveSymbol\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"isChartAvailable\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return true;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"chartHeight\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"chartContainerHeight\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"isMobile\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"cursorInChart\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"shouldRenderDialogs\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"yAxiswidth\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"pip\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"pip\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"resizeScreen\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"resizeScreen\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_initChart\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"_initChart\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"categorizedSymbols\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"categorizedSymbols\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onMouseEnter\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"onMouseEnter\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onMouseLeave\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"onMouseLeave\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateCurrentActiveSymbol\", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, \"updateCurrentActiveSymbol\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setChartAvailability\", [_dec6], Object.getOwnPropertyDescriptor(_class.prototype, \"setChartAvailability\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"changeSymbol\", [_dec7], Object.getOwnPropertyDescriptor(_class.prototype, \"changeSymbol\"), _class.prototype), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"calculateYaxisWidth\", [_dec8], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this5 = this;\n\n    return function (price) {\n      if (!price) return;\n      var context = _this5.context.stx.chart.context;\n      var priceWidth = context.measureText(price.toFixed(_this5.pip)).width + 20;\n\n      if (priceWidth > _this5.yAxiswidth) {\n        _this5.yAxiswidth = priceWidth;\n        _this5.stxx.chart.yAxis.width = priceWidth;\n\n        _this5.stxx.calculateYAxisPositions();\n\n        _this5.stxx.draw();\n      }\n    };\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"updateYaxisWidth\", [_dec9], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this6 = this;\n\n    return function () {\n      if (_this6.stxx && _this6.stxx.masterData && _this6.stxx.masterData.length) {\n        var currentQuote = _this6.context.stx.currentQuote();\n\n        if (currentQuote && currentQuote.Close) {\n          _this6.calculateYaxisWidth(currentQuote.Close);\n        } else {\n          var lastDataWithClose = _this6.stxx.masterData.find(function (x) {\n            return x.Close;\n          });\n\n          if (lastDataWithClose) {\n            _this6.calculateYaxisWidth(lastDataWithClose.Close);\n          }\n        }\n      }\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"newChart\", [_dec10], Object.getOwnPropertyDescriptor(_class.prototype, \"newChart\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"refreshChart\", [_dec11], Object.getOwnPropertyDescriptor(_class.prototype, \"refreshChart\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"destroy\", [_dec12], Object.getOwnPropertyDescriptor(_class.prototype, \"destroy\"), _class.prototype)), _class));\n/* harmony default export */ __webpack_exports__[\"default\"] = (ChartStore);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/store/ChartTableStore.js\":\n/*!**************************************!*\\\n  !*** ./src/store/ChartTableStore.js ***!\n  \\**************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ChartTableStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! moment */ \"moment\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_Dialog_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/Dialog.jsx */ \"./src/components/Dialog.jsx\");\n/* harmony import */ var _DialogStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DialogStore */ \"./src/store/DialogStore.js\");\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\n\n\n\n\nvar ChartTableStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec4 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec5 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec6 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function ChartTableStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, ChartTableStore);\n\n    _initializerDefineProperty(this, \"scrollPanel\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"scrollTop\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"tableData\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"isTick\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"lastTick\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"scrollPanelTop\", _descriptor6, this);\n\n    this.mainStore = mainStore;\n    this.dialog = new _DialogStore__WEBPACK_IMPORTED_MODULE_3__[\"default\"](mainStore);\n    this.Dialog = this.dialog.connect(_components_Dialog_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n    this.dateElements = {};\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"reaction\"])(function () {\n      return _this.dialog.open;\n    }, this.loadTableData);\n  }\n\n  _createClass(ChartTableStore, [{\n    key: \"setOpen\",\n    value: function setOpen(value) {\n      return this.dialog.setOpen(value);\n    }\n  }, {\n    key: \"loadTableData\",\n    value: function loadTableData() {\n      var _this2 = this;\n\n      if (this.open) {\n        var totalItemCount = this.stx.masterData.length;\n        var allowableItems = totalItemCount <= 100 ? this.stx.masterData : this.stx.masterData.slice(totalItemCount - 100, totalItemCount);\n        allowableItems.forEach(function (row) {\n          return _this2.updateTableData(row);\n        });\n        this.mainStore.chart.feed.onMasterDataUpdate(this.updateTableData);\n      } else {\n        if (this.mainStore.chart.feed) this.mainStore.chart.feed.offMasterDataUpdate(this.updateTableData);\n        this.tableData = [];\n\n        if (this.chartTypeStore.onChartTypeChanged && this.state.prevChartType) {\n          this.chartTypeStore.onChartTypeChanged(this.state.prevChartType);\n        }\n      }\n    }\n  }, {\n    key: \"updateTableData\",\n    value: function updateTableData(_ref) {\n      var DT = _ref.DT,\n          Open = _ref.Open,\n          High = _ref.High,\n          Low = _ref.Low,\n          Close = _ref.Close;\n      this.isTick = this.mainStore.timeperiod.timeUnit === 'tick';\n      var lastTick = this.lastTick || {};\n      var change = Close - lastTick.Close || 0;\n      var status = '';\n      if (Math.sign(change) !== 0) status = Math.sign(change) === 1 ? 'up' : 'down';\n      var dateTime = moment__WEBPACK_IMPORTED_MODULE_1___default()(DT.getTime()).format(\"HH:mm\".concat(this.isTick ? ':ss' : ''));\n      var dateKey = moment__WEBPACK_IMPORTED_MODULE_1___default()(DT.getTime()).format('YYYYMMDD');\n      var dateGroup = this.tableData.find(function (x) {\n        return x.key === dateKey;\n      });\n      var data = this.isTick ? {\n        Date: dateTime,\n        Close: \"\".concat(Close.toFixed(this.decimalPlaces)),\n        Change: \"\".concat(Math.abs(change).toFixed(this.decimalPlaces)),\n        Status: status\n      } : {\n        Date: dateTime,\n        Open: \"\".concat(Open.toFixed(this.decimalPlaces)),\n        High: \"\".concat(High.toFixed(this.decimalPlaces)),\n        Low: \"\".concat(Low.toFixed(this.decimalPlaces)),\n        Close: \"\".concat(Close.toFixed(this.decimalPlaces)),\n        Change: \"\".concat(Math.abs(change).toFixed(this.decimalPlaces)),\n        Status: status\n      };\n\n      if (!dateGroup) {\n        dateGroup = {\n          key: dateKey,\n          date: moment__WEBPACK_IMPORTED_MODULE_1___default()(DT.getTime()).format('DD MMM YYYY'),\n          datas: [data]\n        };\n        this.tableData.unshift(dateGroup);\n      } else {\n        var oldData = dateGroup.datas.find(function (x) {\n          return x.Date === dateTime;\n        });\n\n        if (oldData) {\n          var previousClose = 0; // if the first group has more than 2 data, let compare\n\n          if (this.tableData.length && this.tableData[0].datas.length > 1) {\n            previousClose = this.tableData[0].datas[1].Close; // if not above, then let pick previous Close from last item in previous group\n          } else if (this.tableData.length && this.tableData.length > 1 && this.tableData[0].datas.length === 1) {\n            previousClose = this.tableData[1].datas[0].Close;\n          }\n\n          var firstItemChange = Close - previousClose;\n          var firstItemStatus = '';\n          if (Math.sign(firstItemChange) !== 0) firstItemStatus = Math.sign(firstItemChange) === 1 ? 'up' : 'down';\n          oldData.High = \"\".concat(High.toFixed(this.decimalPlaces));\n          oldData.Low = \"\".concat(Low.toFixed(this.decimalPlaces));\n          oldData.Close = \"\".concat(Close.toFixed(this.decimalPlaces));\n          oldData.Change = \"\".concat(Math.abs(firstItemChange).toFixed(this.decimalPlaces));\n          oldData.Status = firstItemStatus;\n        } else {\n          dateGroup.datas.unshift(data);\n        }\n      }\n\n      this.tableData = this.tableData.slice(0); // force array update\n\n      this.lastTick = data;\n    }\n  }, {\n    key: \"updateScrollSpy\",\n    value: function updateScrollSpy() {\n      var scrollTop = this.scrollPanel.getValues().top;\n      this.scrollTop = scrollTop;\n    }\n  }, {\n    key: \"setDateElement\",\n    value: function setDateElement(date, element) {\n      this.dateElements[date] = element;\n    }\n  }, {\n    key: \"setScrollPanel\",\n    value: function setScrollPanel(element) {\n      this.scrollPanel = element;\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.context.stx;\n    }\n  }, {\n    key: \"state\",\n    get: function get() {\n      return this.mainStore.state;\n    }\n  }, {\n    key: \"chartTypeStore\",\n    get: function get() {\n      return this.mainStore.chartType;\n    }\n  }, {\n    key: \"open\",\n    get: function get() {\n      return this.dialog.open;\n    }\n  }, {\n    key: \"symbol\",\n    get: function get() {\n      return this.mainStore.chart.currentActiveSymbol ? this.mainStore.chart.currentActiveSymbol : {};\n    }\n  }, {\n    key: \"decimalPlaces\",\n    get: function get() {\n      return this.mainStore.chart.currentActiveSymbol.decimal_places;\n    }\n  }]);\n\n  return ChartTableStore;\n}(), _temp), (_applyDecoratedDescriptor(_class.prototype, \"open\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"open\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setOpen\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"setOpen\"), _class.prototype), _descriptor = _applyDecoratedDescriptor(_class.prototype, \"scrollPanel\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"scrollTop\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"tableData\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"isTick\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"lastTick\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"scrollPanelTop\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class.prototype, \"symbol\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"symbol\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"decimalPlaces\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"decimalPlaces\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"loadTableData\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"loadTableData\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateTableData\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"updateTableData\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateScrollSpy\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"updateScrollSpy\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setDateElement\", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, \"setDateElement\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setScrollPanel\", [_dec6], Object.getOwnPropertyDescriptor(_class.prototype, \"setScrollPanel\"), _class.prototype)), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/ChartTitleStore.js\":\n/*!**************************************!*\\\n  !*** ./src/store/ChartTitleStore.js ***!\n  \\**************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ChartTitleStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MenuStore */ \"./src/store/MenuStore.js\");\n/* harmony import */ var _AnimatedPriceStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AnimatedPriceStore */ \"./src/store/AnimatedPriceStore.js\");\n/* harmony import */ var _CategoricalDisplayStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CategoricalDisplayStore */ \"./src/store/CategoricalDisplayStore.js\");\n/* harmony import */ var _components_Menu_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/Menu.jsx */ \"./src/components/Menu.jsx\");\n/* harmony import */ var _components_categoricaldisplay__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/categoricaldisplay */ \"./src/components/categoricaldisplay/index.js\");\n/* harmony import */ var _components_AnimatedPrice_jsx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/AnimatedPrice.jsx */ \"./src/components/AnimatedPrice.jsx\");\n/* harmony import */ var _components_SymbolSelectButton_jsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/SymbolSelectButton.jsx */ \"./src/components/SymbolSelectButton.jsx\");\n/* harmony import */ var _Connect__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _utils_ServerTime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/ServerTime */ \"./src/utils/ServerTime.js\");\nvar _dec, _dec2, _dec3, _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\n\n\n\n\n\n\n\n\nvar ChartTitleStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function ChartTitleStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, ChartTitleStore);\n\n    _initializerDefineProperty(this, \"todayChange\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"todayChangePercent\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"isVisible\", _descriptor3, this);\n\n    this.searchInputClassName = void 0;\n\n    this.onContextReady = function () {\n      _this.chart.feed.onMasterDataUpdate(_this.update);\n\n      _this.update();\n\n      _this.tradingTimes.onMarketOpenCloseChanged(Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"])(function (changes) {\n        for (var symbol in changes) {\n          if (_this.currentSymbol.symbol === symbol) {\n            _this.currentSymbol.exchange_is_open = changes[symbol];\n          }\n        }\n      }));\n    };\n\n    this.onMouseEnter = function () {\n      return _this.crosshairStore.updateVisibility(false);\n    };\n\n    this.onMouseLeave = function () {\n      return _this.crosshairStore.updateVisibility(true);\n    };\n\n    this.mainStore = mainStore;\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.context;\n    }, this.onContextReady);\n    this.menu = new _MenuStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"](mainStore, {\n      route: 'chart-title'\n    });\n    this.animatedPrice = new _AnimatedPriceStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    this.categoricalDisplay = new _CategoricalDisplayStore__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n      getCategoricalItems: function getCategoricalItems() {\n        return _this.mainStore.chart.categorizedSymbols;\n      },\n      getIsShown: function getIsShown() {\n        return _this.menu.open;\n      },\n      placeholderText: t.translate('Search...'),\n      favoritesId: 'chartTitle&Comparison',\n      mainStore: mainStore,\n      id: 'market_dropdown',\n      getCurrentActiveCategory: function getCurrentActiveCategory() {\n        return _this.mainStore.chart.currentActiveSymbol ? _this.mainStore.chart.currentActiveSymbol.market : 'favorite';\n      },\n      getCurrentActiveSubCategory: function getCurrentActiveSubCategory() {\n        return _this.mainStore.chart.currentActiveSymbol ? _this.mainStore.chart.currentActiveSymbol.symbol : '';\n      },\n      searchInputClassName: function searchInputClassName() {\n        return _this.searchInputClassName;\n      }\n    });\n    this.serverTime = _utils_ServerTime__WEBPACK_IMPORTED_MODULE_9__[\"default\"].getInstance();\n    this.ChartTitleMenu = this.menu.connect(_components_Menu_jsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n    this.MarketSelector = this.categoricalDisplay.connect(_components_categoricaldisplay__WEBPACK_IMPORTED_MODULE_5__[\"CategoricalDisplay\"]);\n    var SpotPrice = this.animatedPrice.connect(_components_AnimatedPrice_jsx__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n    var PriceDisplay = Object(_Connect__WEBPACK_IMPORTED_MODULE_8__[\"connect\"])(function () {\n      return {\n        isVisible: _this.isVisible && _this.isShowChartPrice,\n        status: _this.animatedPrice.status,\n        todayChange: _this.todayChange,\n        todayChangePercent: _this.todayChangePercent,\n        SpotPrice: SpotPrice\n      };\n    })(_components_SymbolSelectButton_jsx__WEBPACK_IMPORTED_MODULE_7__[\"ChartPrice\"]);\n    this.SymbolSelectButton = Object(_Connect__WEBPACK_IMPORTED_MODULE_8__[\"connect\"])(function () {\n      return {\n        symbol: _this.currentSymbol,\n        ChartPrice: PriceDisplay,\n        isSymbolOpen: _this.isSymbolOpen,\n        symbolOpenTime: _this.symbolOpenTime\n      };\n    })(_components_SymbolSelectButton_jsx__WEBPACK_IMPORTED_MODULE_7__[\"SymbolSelectButton\"]);\n  }\n\n  _createClass(ChartTitleStore, [{\n    key: \"updateProps\",\n    value: function updateProps(searchInputClassName) {\n      this.searchInputClassName = searchInputClassName;\n    }\n  }, {\n    key: \"setSymbol\",\n    value: function setSymbol(symbolObj) {\n      if (this.mainStore.state.symbol !== undefined) {\n        console.error('Changing symbol does nothing because symbol prop is being set. Consider overriding the onChange prop in <ChartTitle />');\n        return;\n      }\n\n      this.chart.changeSymbol(symbolObj);\n    }\n  }, {\n    key: \"update\",\n    value: function update(quote) {\n      if (!this.currentSymbol) {\n        return;\n      }\n\n      this.isVisible = quote || !this.isShowChartPrice;\n\n      if (!this.isVisible) {\n        return;\n      }\n\n      var currentPrice = quote.Close;\n\n      if (currentPrice) {\n        currentPrice = currentPrice.toFixed(this.decimalPlaces);\n        var oldPrice = quote.prevClose || this.animatedPrice.price;\n        this.animatedPrice.setPrice(currentPrice, oldPrice);\n\n        if (oldPrice) {\n          this.todayChange = Math.abs(currentPrice - oldPrice).toFixed(this.decimalPlaces);\n          this.todayChangePercent = (this.todayChange / oldPrice * 100).toFixed(2);\n        }\n      }\n    }\n  }, {\n    key: \"chart\",\n    get: function get() {\n      return this.mainStore.chart;\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"crosshairStore\",\n    get: function get() {\n      return this.mainStore.crosshair;\n    }\n  }, {\n    key: \"currentSymbol\",\n    get: function get() {\n      return this.mainStore.chart.currentActiveSymbol;\n    }\n  }, {\n    key: \"isSymbolOpen\",\n    get: function get() {\n      return this.currentSymbol.exchange_is_open;\n    }\n  }, {\n    key: \"decimalPlaces\",\n    get: function get() {\n      return this.mainStore.chart.currentActiveSymbol.decimal_places;\n    }\n  }, {\n    key: \"isShowChartPrice\",\n    get: function get() {\n      return this.mainStore.chart.isChartAvailable;\n    }\n  }, {\n    key: \"tradingTimes\",\n    get: function get() {\n      return this.mainStore.chart.tradingTimes;\n    }\n  }, {\n    key: \"symbolOpenTime\",\n    get: function get() {\n      var times = this.tradingTimes._tradingTimesMap && this.tradingTimes._tradingTimesMap.length ? this.tradingTimes._tradingTimesMap[this.currentSymbol.symbol].times : [];\n      var now = this.serverTime.getLocalDate().getTime();\n      var openTime = times ? times.find(function (time) {\n        return time.open.getTime() > now;\n      }) : null;\n\n      if (!(openTime instanceof Date)) {\n        openTime = null;\n      }\n\n      return {\n        openTime: openTime\n      };\n    }\n  }]);\n\n  return ChartTitleStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"todayChange\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"todayChangePercent\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"isVisible\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"currentSymbol\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"currentSymbol\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isSymbolOpen\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"isSymbolOpen\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"decimalPlaces\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"decimalPlaces\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isShowChartPrice\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"isShowChartPrice\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"tradingTimes\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"tradingTimes\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"symbolOpenTime\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"symbolOpenTime\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateProps\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"updateProps\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setSymbol\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"setSymbol\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"update\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"update\"), _class.prototype)), _class));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/store/ChartTypeStore.js\":\n/*!*************************************!*\\\n  !*** ./src/store/ChartTypeStore.js ***!\n  \\*************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ChartTypeStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MenuStore */ \"./src/store/MenuStore.js\");\n/* harmony import */ var _ListStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ListStore */ \"./src/store/ListStore.js\");\n/* harmony import */ var _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Icons.jsx */ \"./src/components/Icons.jsx\");\n/* harmony import */ var _SettingsDialogStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SettingsDialogStore */ \"./src/store/SettingsDialogStore.js\");\n/* harmony import */ var _components_List_jsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/List.jsx */ \"./src/components/List.jsx\");\n/* harmony import */ var _components_Menu_jsx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/Menu.jsx */ \"./src/components/Menu.jsx\");\n/* harmony import */ var _components_SettingsDialog_jsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/SettingsDialog.jsx */ \"./src/components/SettingsDialog.jsx\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/ga */ \"./src/utils/ga.js\");\nvar _dec, _dec2, _dec3, _dec4, _dec5, _class, _descriptor, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\n\n\n\n\n\n\n\n\nfunction getChartTypes() {\n  return [{\n    id: 'mountain',\n    text: t.translate('Line'),\n    candleOnly: false,\n    icon: _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"LineIcon\"]\n  }, {\n    id: 'line',\n    text: t.translate('Dot'),\n    candleOnly: false,\n    icon: _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"DotIcon\"]\n  }, {\n    id: 'colored_line',\n    text: t.translate('Colored Dot'),\n    candleOnly: false,\n    icon: _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"LineDotIcon\"]\n  }, {\n    id: 'spline',\n    text: t.translate('Spline'),\n    candleOnly: false,\n    icon: _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"SplineIcon\"]\n  }, {\n    id: 'baseline',\n    text: t.translate('Baseline'),\n    candleOnly: false,\n    icon: _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"BaseLineIcon\"]\n  }, {\n    id: 'candle',\n    text: t.translate('Candle'),\n    candleOnly: true,\n    icon: _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"CandleIcon\"]\n  }, {\n    id: 'colored_bar',\n    text: t.translate('OHLC'),\n    candleOnly: true,\n    icon: _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"OHLCIcon\"]\n  }, {\n    id: 'hollow_candle',\n    text: t.translate('Hollow Candle'),\n    candleOnly: true,\n    icon: _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"HollowCandleIcon\"]\n  }, {\n    id: 'heikinashi',\n    text: t.translate('Heikin Ashi'),\n    candleOnly: true,\n    icon: _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"HeikinAshiIcon\"]\n  }, {\n    id: 'kagi',\n    text: t.translate('Kagi'),\n    candleOnly: true,\n    icon: _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"KagiIcon\"],\n    settingsOnClick: true\n  }, {\n    id: 'linebreak',\n    text: t.translate('Line Break'),\n    candleOnly: true,\n    icon: _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"LineBreakIcon\"],\n    settingsOnClick: true\n  }, {\n    id: 'renko',\n    text: t.translate('Renko'),\n    candleOnly: true,\n    icon: _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"RenkoIcon\"],\n    settingsOnClick: true\n  }, {\n    id: 'rangebars',\n    text: t.translate('Range Bars'),\n    candleOnly: true,\n    icon: _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"RangeBarsIcon\"],\n    settingsOnClick: true\n  }, {\n    id: 'pandf',\n    text: t.translate('Point & Figure'),\n    candleOnly: true,\n    icon: _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"PointFigureIcon\"],\n    settingsOnClick: true\n  }, {\n    id: 'table',\n    text: t.translate('Table'),\n    candleOnly: false,\n    icon: _components_Icons_jsx__WEBPACK_IMPORTED_MODULE_3__[\"TableIcon\"]\n  }];\n}\n\nvar notCandles = getChartTypes().filter(function (t) {\n  return !t.candleOnly;\n}).map(function (t) {\n  return t.id;\n});\nvar aggregateCharts = getChartTypes().filter(function (t) {\n  return t.settingsOnClick;\n});\n\nfunction getAggregates() {\n  return {\n    heikinashi: true,\n    kagi: {\n      title: t.translate('Kagi'),\n      inputs: [{\n        id: 'kagi',\n        title: t.translate('Reversal Percentage'),\n        type: 'numericinput'\n      }]\n    },\n    renko: {\n      title: t.translate('Renko'),\n      inputs: [{\n        id: 'renko',\n        title: t.translate('Range'),\n        type: 'numericinput'\n      }]\n    },\n    linebreak: {\n      title: t.translate('Line Break'),\n      inputs: [{\n        id: 'priceLines',\n        title: t.translate('Price Lines'),\n        type: 'numericinput',\n        max: 10,\n        step: 1,\n        min: 1\n      }]\n    },\n    rangebars: {\n      title: t.translate('Range Bars'),\n      inputs: [{\n        id: 'range',\n        title: t.translate('Range'),\n        type: 'numericinput'\n      }]\n    },\n    pandf: {\n      title: t.translate('Point & Figure'),\n      inputs: [{\n        id: 'box',\n        title: t.translate('Box Size'),\n        type: 'numericinput'\n      }, {\n        id: 'reversal',\n        title: t.translate('Reversal'),\n        type: 'numericinput'\n      }]\n    }\n  };\n}\n\nvar ChartTypeStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec4 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec5 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function ChartTypeStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, ChartTypeStore);\n\n    _initializerDefineProperty(this, \"type\", _descriptor, this);\n\n    this.onChartTypeChanged = void 0;\n\n    this.onContextReady = function () {\n      _this.aggregates = getAggregates();\n      _this.chartTypes = getChartTypes();\n\n      _this.setChartTypeFromLayout(_this.stx.layout);\n\n      Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"reaction\"])(function () {\n        return _this.mainStore.state.chartType;\n      }, function () {\n        if (_this.mainStore.state.chartType !== undefined) {\n          _this.setType(_this.mainStore.state.chartType);\n        }\n      });\n    };\n\n    this.updateAggregate = function (items) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _step$value = _step.value,\n              id = _step$value.id,\n              value = _step$value.value;\n          var tuple = CIQ.deriveFromObjectChain(_this.stx.layout, id);\n          tuple.obj[tuple.member] = value;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      _this.stx.changeOccurred('layout');\n\n      _this.stx.createDataSet();\n\n      _this.stx.draw();\n    };\n\n    this.mainStore = mainStore;\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.context;\n    }, this.onContextReady);\n    this.menu = new _MenuStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"](mainStore, {\n      route: 'chart-type'\n    });\n    this.list = new _ListStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n      getContext: function getContext() {\n        return _this.context;\n      },\n      getItems: function getItems() {\n        return _this.types;\n      }\n    });\n    this.settingsDialog = new _SettingsDialogStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n      mainStore: mainStore,\n      onChanged: function onChanged(items) {\n        return _this.updateAggregate(items);\n      }\n    });\n    this.ChartTypeMenu = this.menu.connect(_components_Menu_jsx__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n    this.ChartTypeList = this.list.connect(_components_List_jsx__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n    this.AggregateChartSettingsDialog = this.settingsDialog.connect(_components_SettingsDialog_jsx__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\n  }\n\n  _createClass(ChartTypeStore, [{\n    key: \"setTypeFromUI\",\n    value: function setTypeFromUI(type) {\n      if (this.chartTypeProp !== undefined) {\n        console.error('Changing chart type does nothing because chartType prop is being set. Consider overriding the onChange prop in <ChartTypes />');\n        return;\n      }\n\n      this.setType(type);\n    }\n  }, {\n    key: \"setType\",\n    value: function setType(type) {\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_8__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_8__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_8__[\"LogActions\"].ChartType, type);\n\n      if (!type) {\n        type = 'mountain';\n      }\n\n      if (typeof type === 'string') {\n        type = this.types.find(function (t) {\n          return t.id === type;\n        });\n      }\n\n      if (type.id === this.type.id) {\n        return;\n      }\n\n      if (type.id === 'table') {\n        this.mainStore.chartTable.setOpen(true);\n        return;\n      }\n\n      if (type.id === 'spline') {\n        // Spline is just a line with tension\n        this.stx.chart.tension = this.stx.layout.tension = 0.5;\n        this.stx.setChartType('mountain');\n      } else {\n        this.stx.chart.tension = 0;\n        delete this.stx.layout.tension;\n\n        if (this.aggregates[type.id]) {\n          // Set baseline.userLevel to false so chart won't move up after AggregationType set.\n          this.stx.chart.baseline.userLevel = false;\n          this.stx.setAggregationType(type.id); // Reset baseline.userLevel to its default value\n\n          this.stx.chart.baseline.userLevel = null;\n        } else {\n          this.stx.setChartType(type.id);\n        }\n      }\n\n      this.type = type;\n    }\n  }, {\n    key: \"updateProps\",\n    value: function updateProps(onChange) {\n      this.onChartTypeChanged = onChange;\n    }\n  }, {\n    key: \"showAggregateDialog\",\n    value: function showAggregateDialog(aggregateId) {\n      var _this2 = this;\n\n      if (aggregateId !== this.type.id) {\n        this.setType(aggregateId);\n      }\n\n      var aggregate = this.aggregates[aggregateId];\n      this.settingsDialog.title = aggregate.title;\n      var inputs = aggregate.inputs.map(function (_ref) {\n        var id = _ref.id,\n            agg = _objectWithoutProperties(_ref, [\"id\"]);\n\n        var name = id === 'box' || id === 'reversal' ? \"pandf.\".concat(id) : id;\n        var tuple = CIQ.deriveFromObjectChain(_this2.stx.layout, name);\n        var value = tuple.obj[tuple.member];\n        var defaultValue = _this2.stx.chart.defaultChartStyleConfig[id];\n        return _objectSpread({\n          id: name,\n          value: value != undefined ? value : defaultValue,\n          // eslint-disable-line eqeqeq\n          defaultValue: defaultValue\n        }, agg);\n      });\n      this.settingsDialog.items = inputs;\n      this.settingsDialog.setOpen(true);\n    }\n  }, {\n    key: \"setChartTypeFromLayout\",\n    value: function setChartTypeFromLayout(layout) {\n      var chartType = this.getChartTypeFromLayout(layout);\n      var typeIdx = this.chartTypes.findIndex(function (t) {\n        return t.id === chartType;\n      });\n      this.type = this.chartTypes[typeIdx];\n    }\n  }, {\n    key: \"getChartTypeFromLayout\",\n    value: function getChartTypeFromLayout(layout) {\n      var chartType;\n\n      if (layout.tension) {\n        // We assume that if tension is set, spline is enabled\n        chartType = 'spline';\n      } else if (this.aggregates[layout.aggregationType]) {\n        chartType = layout.aggregationType;\n      } else {\n        chartType = layout.chartType;\n      }\n\n      return chartType;\n    }\n  }, {\n    key: \"isTypeCandle\",\n    value: function isTypeCandle(type) {\n      if (typeof type === 'string') {\n        type = this.types.find(function (t) {\n          return t.id === type;\n        });\n      }\n\n      return notCandles.indexOf(type.id) === -1;\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.context.stx;\n    }\n  }, {\n    key: \"chartTypeProp\",\n    get: function get() {\n      return this.mainStore.state.chartType;\n    }\n  }, {\n    key: \"isCandle\",\n    get: function get() {\n      return notCandles.indexOf(this.type.id) === -1;\n    }\n  }, {\n    key: \"isSpline\",\n    get: function get() {\n      return this.type.id === 'spline';\n    }\n  }, {\n    key: \"isAggregateChart\",\n    get: function get() {\n      var _this3 = this;\n\n      return !!aggregateCharts.find(function (t) {\n        return t.id === _this3.stx.layout.aggregationType;\n      });\n    }\n  }, {\n    key: \"types\",\n    get: function get() {\n      var _this4 = this;\n\n      var isTickSelected = this.mainStore.timeperiod.timeUnit === 'tick';\n\n      if (this.chartTypes === undefined) {\n        this.chartTypes = getChartTypes();\n      }\n\n      return this.chartTypes.map(function (t) {\n        return _objectSpread({}, t, {\n          active: t.id === _this4.type.id,\n          disabled: t.candleOnly ? isTickSelected : false\n        });\n      });\n    }\n  }]);\n\n  return ChartTypeStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"type\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 'mountain';\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"setTypeFromUI\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"setTypeFromUI\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setType\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"setType\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateProps\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"updateProps\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"showAggregateDialog\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"showAggregateDialog\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"types\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"types\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setChartTypeFromLayout\", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, \"setChartTypeFromLayout\"), _class.prototype)), _class));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/store/ComparisonListStore.js\":\n/*!******************************************!*\\\n  !*** ./src/store/ComparisonListStore.js ***!\n  \\******************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ComparisonListStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _AnimatedPriceStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AnimatedPriceStore */ \"./src/store/AnimatedPriceStore.js\");\n/* harmony import */ var _components_AnimatedPrice_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/AnimatedPrice.jsx */ \"./src/components/AnimatedPrice.jsx\");\nvar _dec, _dec2, _dec3, _class, _descriptor, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\n\nvar ComparisonListStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function ComparisonListStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, ComparisonListStore);\n\n    _initializerDefineProperty(this, \"animatedPrices\", _descriptor, this);\n\n    this.animatedPriceStore = [];\n    this.mainStore = mainStore; // The order of setting the reaction is important. The animatedPrices array must match\n    // comparisonSymbols array _before_ updating the prices\n\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"reaction\"])(function () {\n      return _this.comparisonSymbols.length;\n    }, this.syncAnimatedPricesWithComparisons);\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"reaction\"])(function () {\n      return _this.comparisonSymbols.map(function (s) {\n        return s.price;\n      });\n    }, this.updatePrices);\n  }\n\n  _createClass(ComparisonListStore, [{\n    key: \"syncAnimatedPricesWithComparisons\",\n    value: function syncAnimatedPricesWithComparisons() {\n      var diff = this.comparisonSymbols.length - this.animatedPrices.length;\n\n      if (diff > 0) {\n        while (diff-- !== 0) {\n          var store = new _AnimatedPriceStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n          this.animatedPriceStore.push(store);\n          this.animatedPrices = this.animatedPrices.concat([store.connect(_components_AnimatedPrice_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"])]);\n        }\n      } else if (diff < 0) {\n        while (diff++ !== 0) {\n          this.animatedPrices.pop();\n          this.animatedPriceStore.pop();\n        }\n      }\n    }\n  }, {\n    key: \"updatePrices\",\n    value: function updatePrices() {\n      var _this2 = this;\n\n      this.comparisonSymbols.map(function (_ref, i) {\n        var price = _ref.price,\n            prevPrice = _ref.prevPrice;\n        var animatedPrice = _this2.animatedPriceStore[i];\n        animatedPrice.setPrice(price, prevPrice);\n      });\n    }\n  }, {\n    key: \"onDeleteItem\",\n    value: function onDeleteItem(symbolObject) {\n      this.mainStore.comparison.removeComparison(symbolObject);\n    }\n  }, {\n    key: \"comparisonSymbols\",\n    get: function get() {\n      return this.mainStore.comparison.comparisonSymbols;\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }]);\n\n  return ComparisonListStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"animatedPrices\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"syncAnimatedPricesWithComparisons\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"syncAnimatedPricesWithComparisons\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updatePrices\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"updatePrices\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onDeleteItem\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"onDeleteItem\"), _class.prototype)), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/ComparisonStore.js\":\n/*!**************************************!*\\\n  !*** ./src/store/ComparisonStore.js ***!\n  \\**************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ComparisonStore; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MenuStore */ \"./src/store/MenuStore.js\");\n/* harmony import */ var _CategoricalDisplayStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CategoricalDisplayStore */ \"./src/store/CategoricalDisplayStore.js\");\n/* harmony import */ var _components_categoricaldisplay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/categoricaldisplay */ \"./src/components/categoricaldisplay/index.js\");\n/* harmony import */ var _components_Menu_jsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/Menu.jsx */ \"./src/components/Menu.jsx\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/ga */ \"./src/utils/ga.js\");\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _descriptor, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\n\n\n\n\n\nvar swatchColors = ['#8ec648', '#00afed', '#ee652e', '#912a8e', '#fff126', '#e9088c', '#ea1d2c', '#00a553', '#00a99c', '#0056a4', '#f4932f', '#0073ba', '#66308f', '#323390'];\nvar ComparisonStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec4 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec5 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec6 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  // just used to track if symbol has changed\n  function ComparisonStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, ComparisonStore);\n\n    _initializerDefineProperty(this, \"comparisonSymbols\", _descriptor, this);\n\n    this.currentActiveSymbol = void 0;\n    this.searchInputClassName = void 0;\n\n    this.onContextReady = function () {\n      var stx = _this.context.stx;\n      var feed = _this.mainStore.chart.feed;\n      _this.currentActiveSymbol = stx.chart.symbol;\n      stx.addEventListener('symbolChange', _this.onSymbolChange);\n      feed.onComparisonDataUpdate(_this.updateComparisonPrices);\n\n      _this.updateComparisons();\n    };\n\n    this.mainStore = mainStore;\n    this.menu = new _MenuStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"](mainStore, {\n      route: 'comparison'\n    });\n    this.ComparisonMenu = this.menu.connect(_components_Menu_jsx__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n    this.categoricalDisplay = new _CategoricalDisplayStore__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n      getActiveCategory: function getActiveCategory() {\n        return _this.activeComparisons;\n      },\n      getCategoricalItems: function getCategoricalItems() {\n        return _this.mainStore.chart.categorizedSymbols;\n      },\n      getIsShown: function getIsShown() {\n        return _this.menu.open;\n      },\n      activeOptions: [{\n        id: 'cmp-color',\n        renderChild: function renderChild(item) {\n          return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n            style: {\n              backgroundColor: item.dataObject.color\n            }\n          });\n        }\n      }, {\n        id: 'delete',\n        onClick: this.onDeleteItem\n      }],\n      onSelectItem: this.onSelectItem.bind(this),\n      placeholderText: t.translate('Search...'),\n      favoritesId: 'chartTitle&Comparison',\n      mainStore: mainStore,\n      searchInputClassName: function searchInputClassName() {\n        return _this.searchInputClassName;\n      }\n    });\n    this.ComparisonSelector = this.categoricalDisplay.connect(_components_categoricaldisplay__WEBPACK_IMPORTED_MODULE_4__[\"CategoricalDisplay\"]);\n    Object(mobx__WEBPACK_IMPORTED_MODULE_1__[\"when\"])(function () {\n      return _this.context;\n    }, this.onContextReady);\n  }\n\n  _createClass(ComparisonStore, [{\n    key: \"updateProps\",\n    value: function updateProps(searchInputClassName) {\n      this.searchInputClassName = searchInputClassName;\n    }\n  }, {\n    key: \"updateComparisonPrices\",\n    value: function updateComparisonPrices(data) {\n      var comparison = this.comparisonSymbols.find(function (x) {\n        return x.symbolObject.symbol === data.symbol;\n      });\n\n      if (comparison) {\n        comparison.price = data.Close;\n        comparison.prevPrice = data.prevClose;\n      } else {\n        this.updateComparisons();\n      }\n    }\n  }, {\n    key: \"removeComparison\",\n    value: function removeComparison(symbolObj) {\n      this.context.stx.removeSeries(symbolObj.symbol);\n    }\n  }, {\n    key: \"onDeleteItem\",\n    value: function onDeleteItem(_ref) {\n      var symbolObject = _ref.symbolObject;\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_6__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_6__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_6__[\"LogActions\"].Comparison, \"Remove \".concat(symbolObject.name));\n      this.removeComparison(symbolObject);\n    }\n  }, {\n    key: \"removeAll\",\n    value: function removeAll() {\n      var _this2 = this;\n\n      this.comparisonSymbols.forEach(function (x) {\n        _this2.onDeleteItem(x);\n      });\n    }\n  }, {\n    key: \"onSelectItem\",\n    value: function onSelectItem(symbolObject) {\n      var _this3 = this;\n\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_6__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_6__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_6__[\"LogActions\"].Comparison, \"Add \".concat(symbolObject.name));\n      var context = this.context;\n      var pattern = null;\n      var width = 1;\n      var color = this.getSwatchColor() || 'auto';\n      var stx = context.stx;\n      var params = {\n        symbolObject: symbolObject,\n        isComparison: true,\n        display: symbolObject.name,\n        fillGaps: true,\n        gapDisplayStyle: true,\n        color: color,\n        pattern: pattern,\n        width: width,\n        data: {\n          useDefaultQuoteFeed: true\n        },\n        forceData: true\n      }; // don't allow symbol if same as main chart, comparison already exists, or just white space\n\n      var exists = stx.getSeries({\n        symbolObject: symbolObject\n      });\n\n      for (var i = 0; i < exists.length; i++) {\n        if (exists[i].parameters.isComparison) {\n          return;\n        }\n      } // don't allow symbol if same as main chart or just white space\n\n\n      if (context.stx.chart.symbol !== symbolObject.symbol) {\n        this.comparisonSymbols.push({\n          color: color,\n          symbolObject: symbolObject\n        });\n        stx.addSeries(symbolObject.symbol, params, function (err, series) {\n          if (err) {\n            _this3.removeComparison(series.parameters.symbolObject);\n\n            series.parameters.error = true;\n          }\n        });\n      }\n\n      this.menu.setOpen(false);\n    }\n  }, {\n    key: \"getSwatchColor\",\n    value: function getSwatchColor() {\n      var stx = this.context.stx;\n      var selectedColor = '';\n      var usedColors = {};\n\n      for (var s in stx.chart.series) {\n        var series = stx.chart.series[s];\n\n        if (!series.parameters.isComparison) {\n          continue;\n        }\n\n        usedColors[series.parameters.color] = true;\n      }\n\n      for (var i = 0; i < swatchColors.length; i++) {\n        // find first unused color from available colors\n        if (!usedColors[swatchColors[i]]) {\n          selectedColor = swatchColors[i];\n          break;\n        }\n      }\n\n      return selectedColor;\n    }\n  }, {\n    key: \"onSymbolChange\",\n    value: function onSymbolChange(_ref2) {\n      var symbolAction = _ref2.action;\n\n      if (symbolAction === 'master') {\n        var stx = this.context.stx;\n\n        if (this.currentActiveSymbol !== stx.chart.symbol) {\n          this.comparisonSymbols = [];\n\n          for (var field in stx.chart.series) {\n            if (stx.chart.series[field].parameters.bucket !== 'study') {\n              stx.removeSeries(field);\n            }\n          }\n\n          this.currentActiveSymbol = stx.chart.symbol;\n        }\n      } else {\n        // symbolAction = 'add-series' or 'remove-series'\n        this.updateComparisons();\n      }\n    }\n  }, {\n    key: \"updateComparisons\",\n    value: function updateComparisons() {\n      if (!this.context) {\n        return;\n      }\n\n      var stx = this.context.stx;\n      var comparisonSymbolsKeys = Object.keys(stx.chart.series);\n\n      if (comparisonSymbolsKeys.length !== this.comparisonSymbols.length) {\n        var comparisons = [];\n        var q = stx.currentQuote();\n\n        if (q) {\n          for (var _i = 0, _comparisonSymbolsKey = comparisonSymbolsKeys; _i < _comparisonSymbolsKey.length; _i++) {\n            var sybl = _comparisonSymbolsKey[_i];\n            var srs = stx.chart.series[sybl];\n            var prm = srs.parameters;\n            var comp = q[sybl]; // Symbol from cache may be in different language, so replace it with server's\n\n            var symbolObject = this.mainStore.chart.activeSymbols.getSymbolObj(prm.symbolObject.symbol);\n            comparisons.push({\n              color: prm.color,\n              price: comp && comp.Close,\n              prevPrice: comp && comp.iqPrevClose,\n              symbolObject: symbolObject\n            });\n          }\n        }\n\n        this.comparisonSymbols = comparisons;\n      }\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"activeComparisons\",\n    get: function get() {\n      var result = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.comparisonSymbols[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var symbol = _step.value;\n          result.push({\n            enabled: true,\n            selected: false,\n            display: symbol.symbolObject.name,\n            itemId: symbol.symbolObject.symbol,\n            dataObject: symbol\n          });\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return {\n        categoryName: t.translate('Active'),\n        categoryId: 'active',\n        hasSubcategory: false,\n        emptyDescription: t.translate('There are no active comparisons yet.'),\n        data: result\n      };\n    }\n  }]);\n\n  return ComparisonStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"comparisonSymbols\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"updateProps\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"updateProps\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateComparisonPrices\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"updateComparisonPrices\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"activeComparisons\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"activeComparisons\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onDeleteItem\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"onDeleteItem\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"removeAll\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"removeAll\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onSelectItem\", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, \"onSelectItem\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onSymbolChange\", [_dec6], Object.getOwnPropertyDescriptor(_class.prototype, \"onSymbolChange\"), _class.prototype)), _class));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/store/Connect.js\":\n/*!******************************!*\\\n  !*** ./src/store/Connect.js ***!\n  \\******************************/\n/*! exports provided: connect */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"connect\", function() { return connect; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mobx-react */ \"mobx-react\");\n/* harmony import */ var mobx_react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mobx_react__WEBPACK_IMPORTED_MODULE_1__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nfunction connectMainStore(mapperFunction) {\n  // Combine both stores and props, with props taking precedence\n  var mapStoresAndProps = function mapStoresAndProps(mainStore, props\n  /* , context */\n  ) {\n    return _objectSpread({}, mapperFunction(mainStore), {}, props);\n  };\n\n  return function (WrappedComponent) {\n    return Object(mobx_react__WEBPACK_IMPORTED_MODULE_1__[\"inject\"])(mapStoresAndProps)(WrappedComponent);\n  };\n}\n\nfunction connectCustomStore(mapperFunction, CustomStore) {\n  return function (WrappedComponent) {\n    var StoredComponent =\n    /*#__PURE__*/\n    function (_Component) {\n      _inherits(StoredComponent, _Component);\n\n      function StoredComponent(props) {\n        var _this;\n\n        _classCallCheck(this, StoredComponent);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(StoredComponent).call(this, props));\n        var mainStore = _this.props.mainStore;\n        _this.store = new CustomStore(mainStore);\n\n        var mapStoresAndProps = function mapStoresAndProps(_mainStore, nextProps) {\n          return _objectSpread({}, mapperFunction(_this.store), {}, nextProps);\n        };\n\n        if (_this.store.updateProps) {\n          _this.store.updateProps(props);\n        }\n\n        _this.injectedComponent = Object(mobx_react__WEBPACK_IMPORTED_MODULE_1__[\"inject\"])(mapStoresAndProps)(WrappedComponent);\n        return _this;\n      }\n\n      _createClass(StoredComponent, [{\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          if (this.store.updateProps) {\n            this.store.updateProps(this.props);\n          }\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this.store.destructor) {\n            this.store.destructor();\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(this.injectedComponent);\n        }\n      }]);\n\n      return StoredComponent;\n    }(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]); // make some nice names that will show up in the React Devtools\n\n\n    var wrappedDisplayName = WrappedComponent.displayName || WrappedComponent.name || WrappedComponent.constructor && WrappedComponent.constructor.name || 'Unknown';\n    StoredComponent.displayName = \"unbox-\".concat(wrappedDisplayName);\n    return Object(mobx_react__WEBPACK_IMPORTED_MODULE_1__[\"inject\"])(function (mainStore) {\n      return {\n        mainStore: mainStore\n      };\n    })(StoredComponent);\n  };\n} // if store is not defined, main store is used\n\n\nfunction connect(mapperFunction, CustomStore) {\n  if (CustomStore === undefined) {\n    return connectMainStore(mapperFunction);\n  }\n\n  return connectCustomStore(mapperFunction, CustomStore);\n}\n\n/***/ }),\n\n/***/ \"./src/store/CrosshairStore.js\":\n/*!*************************************!*\\\n  !*** ./src/store/CrosshairStore.js ***!\n  \\*************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\n/* harmony import */ var _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../sass/_themes.scss */ \"./sass/_themes.scss\");\n/* harmony import */ var _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_sass_themes_scss__WEBPACK_IMPORTED_MODULE_2__);\nvar _dec, _dec2, _dec3, _class, _descriptor, _temp;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\n\n\n\nvar MAX_TOOLTIP_WIDTH = 315;\nvar CrosshairStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function CrosshairStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, CrosshairStore);\n\n    _initializerDefineProperty(this, \"state\", _descriptor, this);\n\n    this.node = null;\n    this.lastBar = {};\n    this.showChange = false;\n    this.showSeries = true;\n    this.showStudies = true;\n\n    this.onCrosshairChanged = function () {\n      return null;\n    };\n\n    this.onContextReady = function () {\n      var storedState = _this.stx.layout.crosshair;\n      var state = typeof storedState !== 'number' ? 2 : storedState;\n\n      _this.setCrosshairState(state);\n\n      _this.stx.append('headsUpHR', _this.renderCrosshairTooltip);\n    };\n\n    this.renderCrosshairTooltip = function () {\n      // if no tooltip exists, then skip\n      if (_this.state !== 2) return;\n      var stx = _this.stx;\n      var _stx$controls = stx.controls,\n          crossX = _stx$controls.crossX,\n          crossY = _stx$controls.crossY; // crosshairs are not on\n\n      if (crossX && crossX.style.display === 'none' || crossY && crossY.style.display === 'none') {\n        return;\n      }\n\n      var bar = stx.barFromPixel(stx.cx);\n      var data = stx.chart.dataSegment[bar];\n\n      if (!data || !_this.isChartReady) {\n        _this.updateTooltipPosition({\n          left: -5000,\n          top: 0,\n          rows: null\n        });\n\n        return;\n      }\n\n      var showOverBarOnly = false;\n      var goodBar;\n      var overBar = true;\n      var highPx, lowPx;\n\n      if (data !== undefined && data && data.DT) {\n        goodBar = true;\n\n        if (data.High) {\n          highPx = stx.pixelFromPrice(data.High);\n        }\n\n        if (data.Low) {\n          lowPx = stx.pixelFromPrice(data.Low);\n        }\n\n        if (!stx.highLowBars[stx.layout.chartType]) {\n          if (data.Close) {\n            highPx = stx.pixelFromPrice(data.Close) - 15;\n            lowPx = stx.pixelFromPrice(data.Close) + 15;\n          }\n        }\n\n        if (showOverBarOnly && !(stx.cy >= highPx && stx.cy <= lowPx)) {\n          overBar = false;\n        }\n      }\n\n      if (!(stx.insideChart && stx.layout.crosshair && stx.displayCrosshairs && !stx.overXAxis && !stx.overYAxis && !stx.openDialog && !stx.activeDrawing && !stx.grabbingScreen && goodBar && overBar)) {\n        _this.updateTooltipPosition({\n          left: -5000,\n          top: 0,\n          rows: null\n        });\n\n        _this.lastBar = {};\n        return;\n      }\n\n      var rows = null;\n\n      if (!(Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"sameBar\"])(data, _this.lastBar) && bar !== stx.chart.dataSegment.length - 1)) {\n        rows = _this.calculateRows(data);\n        _this.lastBar = data;\n      }\n\n      _this.updateTooltipPosition({\n        left: CIQ.ChartEngine.crosshairX - _this.stx.left,\n        top: CIQ.ChartEngine.crosshairY - _this.stx.top,\n        rows: rows\n      });\n    };\n\n    this.updateVisibility = function (visible) {\n      var crosshair = _this.stx.container.querySelector('.cq-crosshair');\n\n      if (_this.state === 2 && visible) crosshair.classList.add('active');else if (_this.state === 2) crosshair.classList.remove('active');\n    };\n\n    this.mainStore = mainStore;\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.context;\n    }, this.onContextReady);\n  }\n\n  _createClass(CrosshairStore, [{\n    key: \"setFloatPriceLabelStyle\",\n    value: function setFloatPriceLabelStyle() {\n      var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.mainStore.chartSetting.theme;\n      var crosshair = this.stx.container.querySelector('.cq-crosshair');\n\n      if (this.state === 2) {\n        this.stx.setStyle('stx-float-price', 'color', 'transparent');\n        this.stx.setStyle('stx-float-price', 'background-color', 'transparent');\n        this.stx.controls.floatDate.style.color = 'transparent';\n        this.stx.controls.floatDate.style.backgroundColor = 'transparent';\n        this.stx.controls.floatDate.style.display = 'none';\n        this.stx.controls.crossX.style.height = \"calc(100% - \".concat(this.stx.xaxisHeight, \"px)\");\n        crosshair.classList.add('active');\n      } else {\n        this.stx.setStyle('stx-float-price', 'color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_float_labels_text\")]);\n        this.stx.setStyle('stx-float-price', 'background-color', _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_float_labels_bg\")]);\n        this.stx.controls.floatDate.style.color = _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_float_labels_text\")];\n        this.stx.controls.floatDate.style.backgroundColor = _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default.a[\"\".concat(theme, \"_float_labels_bg\")];\n        this.stx.controls.floatDate.style.display = 'block';\n        this.stx.controls.crossX.style.height = '100%';\n        crosshair.classList.remove('active');\n      }\n    }\n  }, {\n    key: \"toggleState\",\n    value: function toggleState() {\n      var state = (this.state + 1) % 3;\n      this.setCrosshairState(state);\n    }\n  }, {\n    key: \"updateProps\",\n    value: function updateProps(onChange) {\n      this.onCrosshairChanged = onChange || function () {\n        return null;\n      };\n    }\n  }, {\n    key: \"setCrosshairState\",\n    value: function setCrosshairState(state) {\n      if (!this.context) {\n        return;\n      }\n\n      this.state = state;\n      this.setFloatPriceLabelStyle();\n      this.stx.layout.crosshair = state;\n      this.stx.doDisplayCrosshairs();\n      this.mainStore.state.crosshairState = state;\n      this.mainStore.state.saveLayout();\n      this.onCrosshairChanged(this.state);\n    }\n  }, {\n    key: \"calculateRows\",\n    value: function calculateRows(data) {\n      var stx = this.stx;\n      var dupMap = {};\n      var fields = [];\n      {\n        // Access main chart panel and yAxis in this scope:\n        var panel = stx.chart.panel;\n        var yAxis = panel.yAxis;\n        fields.push({\n          member: 'DT',\n          display: 'DT',\n          panel: panel,\n          yAxis: yAxis\n        });\n        dupMap.DT = dupMap.Close = 1;\n\n        if (this.showChange && CIQ.ChartEngine.isDailyInterval(stx.layout.interval)) {\n          fields.push({\n            member: 'Change',\n            display: 'Change',\n            panel: panel,\n            yAxis: yAxis\n          });\n        }\n\n        if (this.showOhl) {\n          for (var _i = 0, _arr = ['Open', 'Close', 'High', 'Low']; _i < _arr.length; _i++) {\n            var el = _arr[_i];\n            fields.push({\n              member: el,\n              display: el,\n              panel: panel,\n              yAxis: yAxis\n            });\n          }\n\n          dupMap.Open = dupMap.High = dupMap.Low = 1;\n        }\n      }\n\n      if (this.showSeries) {\n        var renderers = stx.chart.seriesRenderers;\n\n        for (var renderer in renderers) {\n          var rendererToDisplay = renderers[renderer];\n          var _panel = stx.panels[rendererToDisplay.params.panel];\n          var _yAxis = rendererToDisplay.params.yAxis;\n\n          if (!_yAxis && rendererToDisplay.params.shareYAxis) {\n            _yAxis = _panel.yAxis;\n          }\n\n          for (var id = 0; id < rendererToDisplay.seriesParams.length; id++) {\n            var seriesParams = rendererToDisplay.seriesParams[id];\n\n            if (seriesParams.display === this.activeSymbol.symbol) {\n              var display = this.activeSymbol.name;\n              fields.push({\n                member: 'Close',\n                display: display,\n                panel: _panel,\n                yAxis: _yAxis\n              });\n              dupMap[display] = 1;\n            } else {\n              // if a series has a symbol and a field then it maybe a object chain\n              var sKey = seriesParams.symbol;\n              var subField = seriesParams.field;\n\n              if (!sKey) {\n                sKey = subField;\n              } else if (subField && sKey !== subField) {\n                sKey = CIQ.createObjectChainNames(sKey, subField)[0];\n              }\n\n              var _display = seriesParams.display || seriesParams.symbol || seriesParams.field;\n\n              if (sKey && (!dupMap[_display] || seriesParams.symbol === undefined)) {\n                fields.push({\n                  member: sKey,\n                  display: _display,\n                  panel: _panel,\n                  yAxis: _yAxis\n                });\n                dupMap[_display] = 1;\n              }\n            }\n          }\n        }\n      }\n\n      if (this.showStudies) {\n        var studies = stx.layout.studies;\n\n        for (var study in studies) {\n          var _panel2 = stx.panels[studies[study].panel];\n          var _yAxis2 = _panel2.yAxis;\n\n          for (var output in studies[study].outputMap) {\n            if (output && !dupMap[output]) {\n              fields.push({\n                member: output,\n                display: output,\n                panel: _panel2,\n                yAxis: _yAxis2\n              });\n              dupMap[output] = 1;\n            }\n          }\n\n          var hist = \"\".concat(study, \"_hist\");\n\n          if (!dupMap[hist]) {\n            fields.push({\n              member: hist,\n              display: hist,\n              panel: _panel2,\n              yAxis: _yAxis2\n            });\n            var hist1 = \"\".concat(study, \"_hist1\");\n            var hist2 = \"\".concat(study, \"_hist2\");\n            fields.push({\n              member: hist1,\n              display: hist1,\n              panel: _panel2,\n              yAxis: _yAxis2\n            });\n            fields.push({\n              member: hist2,\n              display: hist2,\n              panel: _panel2,\n              yAxis: _yAxis2\n            });\n            dupMap[hist] = 1;\n          }\n        }\n      }\n\n      var rows = [];\n\n      for (var _i2 = 0, _fields = fields; _i2 < _fields.length; _i2++) {\n        var obj = _fields[_i2];\n        var name = obj.member,\n            displayName = obj.display,\n            _panel3 = obj.panel,\n            _yAxis3 = obj.yAxis;\n        var labelDecimalPlaces = this.decimalPlaces;\n\n        if (_yAxis3) {\n          if (_panel3 !== _panel3.chart.panel) {\n            // If a study panel, use yAxis settings to determine decimal places\n            if (_yAxis3.decimalPlaces || _yAxis3.decimalPlaces === 0) {\n              labelDecimalPlaces = _yAxis3.decimalPlaces;\n            } else if (_yAxis3.maxDecimalPlaces || _yAxis3.maxDecimalPlaces === 0) {\n              labelDecimalPlaces = _yAxis3.maxDecimalPlaces;\n            }\n          } else {\n            // If a chart panel, then always display at least the number of decimal places as calculated by masterData (panel.chart.decimalPlaces)\n            // but if we are zoomed to high granularity then expand all the way out to the y-axis significant digits (panel.yAxis.printDecimalPlaces)\n            labelDecimalPlaces = Math.max(_yAxis3.printDecimalPlaces, _panel3.chart.decimalPlaces); // ... and never display more decimal places than the symbol is supposed to be quoting at\n\n            if (_yAxis3.maxDecimalPlaces || _yAxis3.maxDecimalPlaces === 0) {\n              labelDecimalPlaces = Math.min(labelDecimalPlaces, _yAxis3.maxDecimalPlaces);\n            }\n          }\n        }\n\n        var dsField = null; // account for object chains\n\n        var tuple = CIQ.existsInObjectChain(data, name);\n\n        if (tuple) {\n          dsField = tuple.obj[tuple.member];\n        } else if (name === 'Change') {\n          dsField = data.Close - data.iqPrevClose;\n        }\n\n        var fieldName = displayName.replace(/^(Result )(.*)/, '$2');\n\n        if ((dsField || dsField === 0) && (name === 'DT' || _typeof(dsField) !== 'object' || dsField.Close || dsField.Close === 0)) {\n          var fieldValue = '';\n\n          if (dsField.Close || dsField.Close === 0) {\n            dsField = dsField.Close;\n          }\n\n          if (dsField.constructor === Number) {\n            if (!_yAxis3) {\n              // raw value\n              fieldValue = dsField.toFixed(labelDecimalPlaces);\n            } else if (_yAxis3.originalPriceFormatter && _yAxis3.originalPriceFormatter.func) {\n              // in comparison mode with custom formatter\n              fieldValue = _yAxis3.originalPriceFormatter.func(stx, _panel3, dsField, labelDecimalPlaces);\n            } else if (_yAxis3.priceFormatter && _yAxis3.priceFormatter !== CIQ.Comparison.priceFormat) {\n              // using custom formatter\n              fieldValue = _yAxis3.priceFormatter(stx, _panel3, dsField, labelDecimalPlaces);\n            } else {\n              fieldValue = stx.formatYAxisPrice(dsField, _panel3, labelDecimalPlaces, _yAxis3);\n            }\n          } else if (dsField.constructor === Date) {\n            var floatDate = stx.controls.floatDate;\n\n            if (name === 'DT' && floatDate && floatDate.innerHTML) {\n              if (stx.chart.xAxis.noDraw) {\n                continue;\n              } else {\n                fieldValue = floatDate.innerHTML;\n              }\n            } else {\n              fieldValue = CIQ.yyyymmdd(dsField);\n\n              if (!CIQ.ChartEngine.isDailyInterval(stx.layout.interval)) {\n                fieldValue += \" \".concat(dsField.toTimeString().substr(0, 8));\n              }\n            }\n          } else {\n            fieldValue = dsField;\n          }\n\n          rows.push({\n            name: fieldName.toUpperCase(),\n            value: fieldValue\n          });\n        }\n      }\n\n      return rows;\n    }\n  }, {\n    key: \"updateTooltipPosition\",\n    // YES! we are manually patching DOM, Because we don't want to pay\n    // for react reconciler & mox tracking observables.\n    value: function updateTooltipPosition(_ref) {\n      var top = _ref.top,\n          left = _ref.left,\n          rows = _ref.rows;\n      var crosshair = this.stx.container.querySelector('.cq-crosshair');\n      crosshair.style.transform = \"translate(\".concat(left, \"px, \").concat(top, \"px)\");\n      var arrow = left <= MAX_TOOLTIP_WIDTH ? 'arrow-left' : 'arrow-right';\n\n      if (arrow !== this.prev_arrow) {\n        crosshair.classList.remove(this.prev_arrow);\n        crosshair.classList.add(arrow);\n        this.prev_arrow = arrow;\n      } // if there is a need to update the rows.\n\n\n      if (rows !== null) {\n        var content = crosshair.querySelector('.cq-crosshair-content');\n        content.innerHTML = rows.map(function (r) {\n          return \"\\n                <div class=\\\"row\\\">\\n                    <span>\".concat(r.name !== 'DT' ? r.name : r.value, \"</span>\\n                    <span>\").concat(r.name !== 'DT' ? r.value : '', \"</span>\\n                </div>\\n            \");\n        }).join('');\n      }\n    }\n  }, {\n    key: \"activeSymbol\",\n    get: function get() {\n      return this.mainStore.chart.currentActiveSymbol;\n    }\n  }, {\n    key: \"decimalPlaces\",\n    get: function get() {\n      return this.activeSymbol.decimal_places;\n    }\n  }, {\n    key: \"showOhl\",\n    get: function get() {\n      return this.stx.layout.timeUnit !== 'second';\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.context.stx;\n    }\n  }, {\n    key: \"isChartReady\",\n    get: function get() {\n      return this.mainStore.state.isChartReady;\n    }\n  }]);\n\n  return CrosshairStore;\n}(), _temp), (_applyDecoratedDescriptor(_class.prototype, \"activeSymbol\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"activeSymbol\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"decimalPlaces\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"decimalPlaces\"), _class.prototype), _descriptor = _applyDecoratedDescriptor(_class.prototype, \"state\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 2;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"toggleState\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"toggleState\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateProps\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"updateProps\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setCrosshairState\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"setCrosshairState\"), _class.prototype)), _class));\n/* harmony default export */ __webpack_exports__[\"default\"] = (CrosshairStore);\n\n/***/ }),\n\n/***/ \"./src/store/CurrentSpotStore.js\":\n/*!***************************************!*\\\n  !*** ./src/store/CurrentSpotStore.js ***!\n  \\***************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\n/* harmony import */ var _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../sass/_themes.scss */ \"./sass/_themes.scss\");\n/* harmony import */ var _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_sass_themes_scss__WEBPACK_IMPORTED_MODULE_2__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar is_firefox = navigator.userAgent.search('Firefox') > 0;\n\nvar CurrentSpotStore =\n/*#__PURE__*/\nfunction () {\n  function CurrentSpotStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, CurrentSpotStore);\n\n    this.onContextReady = function () {\n      if (_this.mainStore.state.isAnimationEnabled) _this.stx.append('draw', _this.drawSpot);\n      Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"patchPixelFromChart\"])(_this.stx);\n    };\n\n    this.drawSpot = function () {\n      if (_this.state.endEpoch) {\n        return;\n      }\n\n      var stx = _this.stx;\n      var chart = stx.chart;\n      var len = chart.dataSet.length;\n\n      if (!len) {\n        return;\n      }\n\n      var bar = chart.dataSet[len - 1];\n      var prevBar = chart.dataSet[len - 2];\n\n      if (!bar || !prevBar || !bar.Close || !prevBar.Close) {\n        return;\n      }\n\n      var x = stx.pixelFromTick(len - 1, chart);\n      var deltaX = bar.chartJustAdvanced ? x - stx.pixelFromTick(len - 2, chart) : 0;\n      var y = stx.pixelFromPrice(bar.Close, chart.panel);\n      var progress = Math.min(bar.tickAnimationProgress || 0, 1);\n\n      if (progress) {\n        x -= (1 - progress) * deltaX;\n      }\n\n      if (x < 0 || x > chart.yAxis.left || y < chart.yAxis.top || y > chart.yAxis.bottom) {\n        return;\n      } // glow is set by Animation.js\n\n\n      var glow = is_firefox ? 0 : progress;\n      /** @type {CanvasRenderingContext2D} */\n\n      var ctx = stx.chart.context;\n      ctx.save();\n\n      if (glow) {\n        ctx.shadowBlur = glow * 35 + 4 | 0;\n        var opacity = Math.sqrt(1.0 - glow) * 255;\n        opacity |= 0;\n        opacity = opacity.toString(16);\n        ctx.shadowColor = _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2__[\"red\"] + opacity;\n      }\n\n      ctx.fillStyle = _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2__[\"red\"];\n\n      for (var i = 0; i < (glow ? 3 : 1); ++i) {\n        ctx.beginPath();\n        ctx.arc(x - 1, y, 4, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n\n      ctx.restore();\n    };\n\n    this.mainStore = mainStore;\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.context;\n    }, this.onContextReady);\n  }\n\n  _createClass(CurrentSpotStore, [{\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.context.stx;\n    }\n  }, {\n    key: \"state\",\n    get: function get() {\n      return this.mainStore.state;\n    }\n  }]);\n\n  return CurrentSpotStore;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CurrentSpotStore);\n\n/***/ }),\n\n/***/ \"./src/store/DialogStore.js\":\n/*!**********************************!*\\\n  !*** ./src/store/DialogStore.js ***!\n  \\**********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DialogStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash.debounce */ \"./node_modules/lodash.debounce/index.js\");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Connect */ \"./src/store/Connect.js\");\nvar _dec, _dec2, _dec3, _dec4, _class, _descriptor, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\n\nvar activeDialog;\nvar DialogStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec4 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function DialogStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, DialogStore);\n\n    _initializerDefineProperty(this, \"open\", _descriptor, this);\n\n    this.setOpen = lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default()(function (val) {\n      _this.openDialog(val);\n    }, 300, {\n      leading: true,\n      trailing: false\n    });\n\n    this.handleClickOutside = function (e) {\n      var isRightClick = false;\n\n      if ('which' in e) {\n        isRightClick = e.which === 3;\n      } else if ('button' in e) {\n        isRightClick = e.button === 2;\n      }\n\n      if (!e.isHandledByDialog && !isRightClick) {\n        _this.setOpen(false);\n      }\n    };\n\n    this.closeOnEscape = function (e) {\n      var ESCAPE = 27;\n\n      if (e.keyCode === ESCAPE) {\n        _this.setOpen(false);\n      }\n    };\n\n    this.connect = Object(_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function () {\n      return {\n        open: _this.open,\n        setOpen: _this.setOpen,\n        onContainerClick: _this.onContainerClick,\n        isMobile: _this.mainStore.chart.isMobile\n      };\n    });\n    this.mainStore = mainStore;\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.context;\n    }, function () {\n      _this.routingStore.registerDialog(_this);\n    });\n  }\n\n  _createClass(DialogStore, [{\n    key: \"openDialog\",\n    value: function openDialog(val) {\n      if (this.open !== val) {\n        this.open = val;\n\n        if (this.open) {\n          this.register();\n        } else {\n          this.unregister();\n        }\n\n        if (val === true) {\n          // close active dialog.\n          if (activeDialog) {\n            activeDialog.openDialog(false);\n          }\n\n          activeDialog = this;\n        } else {\n          activeDialog = undefined;\n        }\n      }\n    }\n  }, {\n    key: \"register\",\n    value: function register() {\n      document.addEventListener('click', this.handleClickOutside, false);\n      document.addEventListener('keydown', this.closeOnEscape, false);\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister() {\n      document.removeEventListener('click', this.handleClickOutside);\n      document.removeEventListener('keydown', this.closeOnEscape);\n    }\n  }, {\n    key: \"onContainerClick\",\n    value: function onContainerClick(e) {\n      /* TODO: why stopPropagation() is not working ಠ_ಠ */\n      // e.stopPropagation();\n      e.nativeEvent.isHandledByDialog = true;\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"routingStore\",\n    get: function get() {\n      return this.mainStore.routing;\n    }\n  }]);\n\n  return DialogStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"open\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"openDialog\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"openDialog\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"register\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"register\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"unregister\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"unregister\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onContainerClick\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"onContainerClick\"), _class.prototype)), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/DrawToolsStore.js\":\n/*!*************************************!*\\\n  !*** ./src/store/DrawToolsStore.js ***!\n  \\*************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DrawToolsStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MenuStore */ \"./src/store/MenuStore.js\");\n/* harmony import */ var _SettingsDialogStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SettingsDialogStore */ \"./src/store/SettingsDialogStore.js\");\n/* harmony import */ var _components_Menu_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Menu.jsx */ \"./src/components/Menu.jsx\");\n/* harmony import */ var _components_SettingsDialog_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/SettingsDialog.jsx */ \"./src/components/SettingsDialog.jsx\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/ga */ \"./src/utils/ga.js\");\nvar _dec, _dec2, _dec3, _dec4, _dec5, _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\n\n\n\n\n\n // camelCase to spaces separated capitalized string.\n\nvar formatCamelCase = function formatCamelCase(s) {\n  var capitalized = s.charAt(0).toUpperCase() + s.slice(1);\n  return capitalized.replace(/([a-z](?=[A-Z]))/g, '$1 ');\n};\n\nvar DrawToolsStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec4 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec5 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function DrawToolsStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, DrawToolsStore);\n\n    this.activeDrawing = null;\n    this.isContinuous = false;\n    this.drawToolsItems = [];\n\n    this.onContextReady = function () {\n      document.addEventListener('keydown', _this.closeOnEscape, false);\n\n      _this.stx.addEventListener('drawing', _this.noTool);\n\n      _this.stx.prepend('deleteHighlighted', _this.onDeleteHighlighted);\n\n      _this.drawToolsItems = [{\n        id: 'annotation',\n        text: t.translate('Annotation')\n      }, {\n        id: 'average',\n        text: t.translate('Average Line')\n      }, {\n        id: 'callout',\n        text: t.translate('Callout')\n      }, {\n        id: 'channel',\n        text: t.translate('Channel')\n      }, {\n        id: 'continuous',\n        text: t.translate('Continuous')\n      }, {\n        id: 'crossline',\n        text: t.translate('Crossline')\n      }, {\n        id: 'freeform',\n        text: t.translate('Doodle')\n      }, {\n        id: 'ellipse',\n        text: t.translate('Ellipse')\n      }, {\n        id: 'retracement',\n        text: t.translate('Fib Retracement')\n      }, {\n        id: 'fibarc',\n        text: t.translate('Fib Arc')\n      }, {\n        id: 'fibfan',\n        text: t.translate('Fib Fan')\n      }, {\n        id: 'fibtimezone',\n        text: t.translate('Fib Time Zone')\n      }, {\n        id: 'gannfan',\n        text: t.translate('Gann Fan')\n      }, {\n        id: 'gartley',\n        text: t.translate('Gartley')\n      }, {\n        id: 'horizontal',\n        text: t.translate('Horizontal')\n      }, {\n        id: 'line',\n        text: t.translate('Line')\n      }, {\n        id: 'pitchfork',\n        text: t.translate('Pitchfork')\n      }, {\n        id: 'quadrant',\n        text: t.translate('Quadrant Lines')\n      }, {\n        id: 'ray',\n        text: t.translate('Ray')\n      }, {\n        id: 'rectangle',\n        text: t.translate('Rectangle')\n      }, {\n        id: 'regression',\n        text: t.translate('Regression Line')\n      }, {\n        id: 'segment',\n        text: t.translate('Segment')\n      }, {\n        id: 'arrow',\n        text: t.translate('Shape - Arrow')\n      }, {\n        id: 'check',\n        text: t.translate('Shape - Check')\n      }, {\n        id: 'xcross',\n        text: t.translate('Shape - Cross')\n      }, {\n        id: 'focusarrow',\n        text: t.translate('Shape - Focus')\n      }, {\n        id: 'heart',\n        text: t.translate('Shape - Heart')\n      }, {\n        id: 'star',\n        text: t.translate('Shape - Star')\n      }, {\n        id: 'speedarc',\n        text: t.translate('Speed Resistance Arc')\n      }, {\n        id: 'speedline',\n        text: t.translate('Speed Resistance Line')\n      }, {\n        id: 'timecycle',\n        text: t.translate('Time Cycle')\n      }, {\n        id: 'tirone',\n        text: t.translate('Tirone Levels')\n      }, {\n        id: 'vertical',\n        text: t.translate('Vertical')\n      }];\n    };\n\n    this.closeOnEscape = function (e) {\n      var ESCAPE = 27;\n\n      if (e.keyCode === ESCAPE) {\n        _this.stx.changeVectorType('');\n      }\n    };\n\n    this.noTool = function () {\n      var count = _this.stx.drawingObjects.length;\n\n      if (_this.menu.open && _this.context || !_this.isContinuous && _this._pervDrawingObjectCount !== count) {\n        _this.stx.changeVectorType('');\n      }\n\n      _this._pervDrawingObjectCount = count;\n    };\n\n    this.mainStore = mainStore;\n    this.menu = new _MenuStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"](mainStore, {\n      route: 'draw-tool'\n    });\n    this.DrawToolsMenu = this.menu.connect(_components_Menu_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n    this.settingsDialog = new _SettingsDialogStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n      mainStore: mainStore,\n      onDeleted: this.onDeleted,\n      onChanged: this.onChanged\n    });\n    this.DrawToolsSettingsDialog = this.settingsDialog.connect(_components_SettingsDialog_jsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.context;\n    }, this.onContextReady);\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"reaction\"])(function () {\n      return _this.menu.open;\n    }, this.noTool);\n  }\n\n  _createClass(DrawToolsStore, [{\n    key: \"onDeleteHighlighted\",\n    value: function onDeleteHighlighted(callRightClick) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.stx.drawingObjects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var drawing = _step.value;\n\n          if (callRightClick) {\n            this.showDrawToolDialog(drawing);\n            return true; // Override default behaviour; prevent ChartIQ from deleting the drawing\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"showDrawToolDialog\",\n    value: function showDrawToolDialog(drawing) {\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogActions\"].DrawTools, \"Edit \".concat(drawing.name));\n      var dontDeleteMe = drawing.abort(); // eslint-disable-line no-unused-vars\n\n      var parameters = CIQ.Drawing.getDrawingParameters(this.stx, drawing.name);\n      var typeMap = {\n        color: 'colorpicker',\n        fillColor: 'colorpicker',\n        pattern: 'pattern',\n        axisLabel: 'switch',\n        font: 'font',\n        lineWidth: 'none'\n      };\n      this.settingsDialog.items = Object.keys(parameters).filter(function (key) {\n        return !( // Remove pattern option from Fibonacci tools\n        (drawing.name.startsWith('fib') || drawing.name === 'retracement') && key === 'pattern');\n      }).map(function (key) {\n        return {\n          id: key,\n          title: formatCamelCase(key),\n          value: drawing[key],\n          defaultValue: parameters[key],\n          type: typeMap[key]\n        };\n      });\n      this.activeDrawing = drawing;\n      this.activeDrawing.highlighted = false;\n      this.settingsDialog.title = formatCamelCase(drawing.name);\n      this.settingsDialog.setOpen(true);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogActions\"].DrawTools, 'Clear All');\n      this.stx.clearDrawings();\n    }\n  }, {\n    key: \"selectTool\",\n    value: function selectTool(id) {\n      this.isContinuous = false;\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogActions\"].DrawTools, \"Add \".concat(id));\n      var stx = this.context.stx;\n      stx.clearMeasure(); // TODO remove this line\n\n      stx.changeVectorType(id);\n\n      if (id === 'continuous') {\n        this.isContinuous = true;\n      }\n\n      this.menu.setOpen(false); // let drawingParameters = CIQ.Drawing.getDrawingParameters(stx, id);\n    }\n  }, {\n    key: \"onChanged\",\n    value: function onChanged(items) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = items[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n          this.activeDrawing[item.id] = item.value;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      this.activeDrawing.highlighted = false;\n      this.activeDrawing.adjust();\n      this.mainStore.state.saveDrawings();\n    }\n  }, {\n    key: \"onDeleted\",\n    value: function onDeleted() {\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogActions\"].DrawTools, \"Remove \".concat(this.activeDrawing.name));\n      this.stx.removeDrawing(this.activeDrawing);\n      this.activeDrawing = null;\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.context.stx;\n    }\n  }]);\n\n  return DrawToolsStore;\n}(), _temp), (_applyDecoratedDescriptor(_class.prototype, \"onDeleteHighlighted\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"onDeleteHighlighted\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"clearAll\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"clearAll\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"selectTool\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"selectTool\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onChanged\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"onChanged\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onDeleted\", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, \"onDeleted\"), _class.prototype)), _class));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/store/DrawingCursorStore.js\":\n/*!*****************************************!*\\\n  !*** ./src/store/DrawingCursorStore.js ***!\n  \\*****************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DrawingCursorStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\nvar _dec, _dec2, _dec3, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\nvar DrawingCursorStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function DrawingCursorStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, DrawingCursorStore);\n\n    _initializerDefineProperty(this, \"isDrawing\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"top\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"left\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"display\", _descriptor4, this);\n\n    this.onContextReady = function () {\n      _this.stx.append('mousemoveinner', _this.onMouseMove);\n\n      _this.stx.container.addEventListener('touchend', _this.onTouchEnd);\n    };\n\n    _initializerDefineProperty(this, \"onMouseMove\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"onTouchEnd\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"updateDisplay\", _descriptor7, this);\n\n    this.mainStore = mainStore;\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.context;\n    }, this.onContextReady);\n  }\n\n  _createClass(DrawingCursorStore, [{\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.context.stx;\n    }\n  }]);\n\n  return DrawingCursorStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"isDrawing\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"top\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"left\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"display\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"onMouseMove\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function (epX, epY) {\n      _this2.isDrawing = _this2.stx.currentVectorParameters.vectorType;\n\n      if (_this2.isDrawing) {\n        _this2.display = 'block';\n        _this2.left = epX - _this2.stx.left;\n        _this2.top = epY - _this2.stx.top - 16;\n      } else {\n        _this2.display = 'none';\n      }\n    };\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"onTouchEnd\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return function () {\n      // A delay is needed to remove drawing cursor after drawing ends on touch end in mobile\n      setTimeout(_this3.updateDisplay, 500);\n    };\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"updateDisplay\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this4 = this;\n\n    return function () {\n      _this4.isDrawing = _this4.stx.currentVectorParameters.vectorType;\n\n      if (!_this4.isDrawing) {\n        _this4.display = 'none';\n      }\n    };\n  }\n})), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/FavoriteStore.js\":\n/*!************************************!*\\\n  !*** ./src/store/FavoriteStore.js ***!\n  \\************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! event-emitter-es6 */ \"./node_modules/event-emitter-es6/index.js\");\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\nvar _dec, _dec2, _class, _descriptor, _class2, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\n\n\nfunction loadFavorites() {\n  var local = Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"createObjectFromLocalStorage\"])('cq-favorites');\n\n  if (!local) {\n    return;\n  }\n\n  var favorites = {};\n\n  for (var categoryName in local) {\n    var category = {};\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = local[categoryName][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var id = _step.value;\n        category[id] = true;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    favorites[categoryName] = category;\n  }\n\n  return favorites;\n}\n\nvar FavoriteStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, (_class = (_temp = _class2 =\n/*#__PURE__*/\nfunction () {\n  _createClass(FavoriteStore, null, [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (!FavoriteStore.instance) {\n        FavoriteStore.instance = new FavoriteStore();\n      }\n\n      return FavoriteStore.instance;\n    }\n  }, {\n    key: \"EVENT_FAVORITES_UPDATE\",\n    get: function get() {\n      return 'EVENT_FAVORITES_UPDATE';\n    }\n  }]);\n\n  function FavoriteStore() {\n    _classCallCheck(this, FavoriteStore);\n\n    _initializerDefineProperty(this, \"favoritesMap\", _descriptor, this);\n\n    this._emitter = new event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default.a({\n      emitDelay: 0\n    });\n  }\n\n  _createClass(FavoriteStore, [{\n    key: \"onFavoriteUpdate\",\n    value: function onFavoriteUpdate(callback) {\n      this._emitter.on(FavoriteStore.EVENT_FAVORITES_UPDATE, callback);\n    }\n  }, {\n    key: \"offFavoriteUpdate\",\n    value: function offFavoriteUpdate(callback) {\n      this._emitter.off(FavoriteStore.EVENT_FAVORITES_UPDATE, callback);\n    }\n  }, {\n    key: \"isFavorite\",\n    value: function isFavorite(category, id) {\n      return id in this.favoritesMap[category];\n    }\n  }, {\n    key: \"toggleFavorite\",\n    value: function toggleFavorite(category, id) {\n      var cat = this.favoritesMap[category];\n\n      if (cat[id]) {\n        delete cat[id];\n      } else {\n        cat[id] = true;\n      }\n\n      this._emitter.emit(FavoriteStore.EVENT_FAVORITES_UPDATE, {\n        category: category,\n        id: id,\n        value: cat[id] || false\n      }); // this.favoritesMap = { ...this.favoritesMap }; // force observable to update\n\n\n      this.saveFavorites();\n    }\n  }, {\n    key: \"saveFavorites\",\n    value: function saveFavorites() {\n      var favorites = {};\n\n      for (var categoryName in this.favoritesMap) {\n        var category = [];\n\n        for (var id in this.favoritesMap[categoryName]) {\n          category.push(id);\n        }\n\n        favorites[categoryName] = category;\n      }\n\n      CIQ.localStorageSetItem('cq-favorites', JSON.stringify(favorites));\n    }\n  }]);\n\n  return FavoriteStore;\n}(), _class2.instance = void 0, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"favoritesMap\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return loadFavorites() || {\n      indicators: {},\n      'chartTitle&Comparison': {}\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"isFavorite\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"isFavorite\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"toggleFavorite\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"toggleFavorite\"), _class.prototype)), _class));\n/* harmony default export */ __webpack_exports__[\"default\"] = (FavoriteStore);\n\n/***/ }),\n\n/***/ \"./src/store/HighestLowestStore.js\":\n/*!*****************************************!*\\\n  !*** ./src/store/HighestLowestStore.js ***!\n  \\*****************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar HighestLowestStore =\n/*#__PURE__*/\nfunction () {\n  _createClass(HighestLowestStore, [{\n    key: \"feed\",\n    get: function get() {\n      return this.mainStore.chart.feed;\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.mainStore.chart.stxx;\n    }\n  }, {\n    key: \"isHighestLowestMarkerEnabled\",\n    get: function get() {\n      return this.mainStore.chartSetting.isHighestLowestMarkerEnabled;\n    }\n  }, {\n    key: \"decimalPlaces\",\n    get: function get() {\n      return this.mainStore.chart.currentActiveSymbol.decimal_places || 0;\n    }\n  }]);\n\n  function HighestLowestStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, HighestLowestStore);\n\n    this.highest = null;\n    this.lowest = null;\n    this.injectionId = null;\n\n    this.clearInjection = function () {\n      if (_this.injectionId) {\n        _this.highestRef = null;\n        _this.lowestRef = null;\n\n        _this.stx.removeInjection(_this.injectionId);\n\n        _this.injectionId = null;\n      }\n    };\n\n    this.enableMarker = function () {\n      if (_this.isHighestLowestMarkerEnabled) {\n        _this.injectionId = _this.stx.append('createDataSegment', _this.calculateHighestLowestByNewData);\n      } else {\n        _this.clearInjection();\n      }\n    };\n\n    this.setHighestRef = function (ref) {\n      _this.highestRef = ref;\n\n      if (ref !== null) {\n        _this.highestRef.value = ref.div.querySelector('.spot__value');\n      }\n    };\n\n    this.setLowestRef = function (ref) {\n      _this.lowestRef = ref;\n\n      if (ref !== null) {\n        _this.lowestRef.value = ref.div.querySelector('.spot__value');\n      }\n    };\n\n    this.onContextReady = this.enableMarker;\n\n    this.calculateHighestLowestByNewData = function () {\n      if (!_this.highestRef || !_this.lowestRef) {\n        return;\n      }\n\n      if (_this.stx.chart && _this.stx.chart.dataSegment.length) {\n        _this.highest = null;\n        _this.lowest = null;\n\n        _this.stx.chart.dataSegment.forEach(function (tick) {\n          if (!tick) {\n            return;\n          }\n\n          if (!_this.highest || _this.highest.Close <= tick.Close) {\n            _this.highest = tick;\n          }\n\n          if (!_this.lowest || _this.lowest.Close >= tick.Close) {\n            _this.lowest = tick;\n          }\n        });\n      }\n\n      if (!_this.highest || !_this.lowest || _this.highest.Close === _this.lowest.Close) {\n        _this.highestRef.setPosition({\n          epoch: null,\n          price: null\n        });\n\n        _this.lowestRef.setPosition({\n          epoch: null,\n          price: null\n        });\n\n        return;\n      }\n\n      if (_this.highest) {\n        var price = _this.highest.Close.toFixed(_this.decimalPlaces);\n\n        _this.highestRef.setPosition({\n          epoch: Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"getUTCEpoch\"])(CIQ.strToDateTime(_this.highest.Date)),\n          price: price\n        });\n\n        _this.highestRef.value.textContent = price;\n      }\n\n      if (_this.lowest) {\n        var _price = _this.lowest.Close.toFixed(_this.decimalPlaces);\n\n        _this.lowestRef.setPosition({\n          epoch: Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"getUTCEpoch\"])(CIQ.strToDateTime(_this.lowest.Date)),\n          price: _price\n        });\n\n        _this.lowestRef.value.textContent = _price;\n      }\n    };\n\n    this.mainStore = mainStore;\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.context;\n    }, this.onContextReady);\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"reaction\"])(function () {\n      return _this.isHighestLowestMarkerEnabled;\n    }, this.enableMarker);\n  }\n\n  return HighestLowestStore;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (HighestLowestStore);\n\n/***/ }),\n\n/***/ \"./src/store/LastDigitStatsStore.js\":\n/*!******************************************!*\\\n  !*** ./src/store/LastDigitStatsStore.js ***!\n  \\******************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return LastDigitStatsStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\nvar _dec, _dec2, _dec3, _class, _descriptor, _descriptor2, _temp;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\nvar LastDigitStatsStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function LastDigitStatsStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, LastDigitStatsStore);\n\n    this.count = 1000;\n    this.digits = [];\n    this.latestData = [];\n    this.lastSymbol = null;\n\n    _initializerDefineProperty(this, \"bars\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"lastTick\", _descriptor2, this);\n\n    this.mainStore = mainStore; // since last digits stats is going to be rendered in deriv-app\n    // we always keep track of the last digit stats.\n\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.context;\n    }, function () {\n      _this.lastSymbol = _this.marketDisplayName;\n\n      _this.updateLastDigitStats(); // TODO: call onMasterDataUpdate on symobl change.\n\n\n      _this.mainStore.chart.feed.onMasterDataUpdate(_this.onMasterDataUpdate);\n\n      _this.mainStore.chart.feed.onMasterDataReinitialize(function () {\n        _this.mainStore.chart.feed.onMasterDataUpdate(_this.onMasterDataUpdate);\n      });\n    });\n  }\n\n  _createClass(LastDigitStatsStore, [{\n    key: \"updateLastDigitStats\",\n    value: function () {\n      var _updateLastDigitStats = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var i, tickHistory;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.digits = [];\n                this.bars = [];\n                this.latestData = [];\n\n                for (i = 0; i < 10; i++) {\n                  this.digits.push(0);\n                  this.bars.push({\n                    height: 0,\n                    cName: ''\n                  });\n                }\n\n                if (!(this.stx.masterData && this.stx.masterData.length >= this.count)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                this.latestData = this.stx.masterData.slice(-this.count).map(function (x) {\n                  return x.Close.toFixed(_this2.decimalPlaces);\n                });\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.next = 10;\n                return this.api.getTickHistory({\n                  symbol: this.mainStore.chart.currentActiveSymbol.symbol,\n                  count: this.count\n                });\n\n              case 10:\n                tickHistory = _context.sent;\n                this.latestData = tickHistory && tickHistory.history ? tickHistory.history.prices : [];\n\n              case 12:\n                this.latestData.forEach(function (price) {\n                  var lastDigit = (+price).toFixed(_this2.decimalPlaces).slice(-1);\n                  _this2.digits[lastDigit]++;\n                });\n                this.updateBars();\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateLastDigitStats() {\n        return _updateLastDigitStats.apply(this, arguments);\n      }\n\n      return updateLastDigitStats;\n    }()\n  }, {\n    key: \"onMasterDataUpdate\",\n    value: function onMasterDataUpdate(_ref) {\n      var Close = _ref.Close,\n          tick = _ref.tick;\n      this.lastTick = tick;\n\n      if (this.marketDisplayName !== this.lastSymbol) {\n        this.lastSymbol = this.marketDisplayName; // Symbol has changed\n\n        this.updateLastDigitStats();\n      } else if (this.latestData.length) {\n        var firstDigit = (+this.latestData.shift()).toFixed(this.decimalPlaces).slice(-1);\n        var price = (+Close).toFixed(this.decimalPlaces);\n        var lastDigit = price.slice(-1);\n        this.latestData.push(+price);\n        this.digits[lastDigit]++;\n        this.digits[firstDigit]--;\n        this.updateBars();\n      }\n    }\n  }, {\n    key: \"updateBars\",\n    value: function updateBars() {\n      var _this3 = this;\n\n      var min = Math.min.apply(Math, _toConsumableArray(this.digits));\n      var max = Math.max.apply(Math, _toConsumableArray(this.digits));\n      this.digits.forEach(function (digit, idx) {\n        _this3.bars[idx].height = digit * 100 / _this3.count;\n        if (digit === min) _this3.bars[idx].cName = 'min';else if (digit === max) _this3.bars[idx].cName = 'max';else _this3.bars[idx].cName = '';\n      });\n      this.bars = this.bars.slice(0); // force array update\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.context.stx;\n    }\n  }, {\n    key: \"api\",\n    get: function get() {\n      return this.mainStore.chart.api;\n    }\n  }, {\n    key: \"decimalPlaces\",\n    get: function get() {\n      return this.mainStore.chart.currentActiveSymbol.decimal_places;\n    }\n  }, {\n    key: \"isVisible\",\n    get: function get() {\n      return this.mainStore.state.showLastDigitStats;\n    }\n  }, {\n    key: \"marketDisplayName\",\n    get: function get() {\n      return this.mainStore.chart.currentActiveSymbol ? this.mainStore.chart.currentActiveSymbol.name : '';\n    }\n  }, {\n    key: \"shouldMinimiseLastDigits\",\n    get: function get() {\n      return this.mainStore.state.shouldMinimiseLastDigits;\n    }\n  }]);\n\n  return LastDigitStatsStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"bars\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"lastTick\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"decimalPlaces\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"decimalPlaces\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isVisible\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"isVisible\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"marketDisplayName\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"marketDisplayName\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"shouldMinimiseLastDigits\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"shouldMinimiseLastDigits\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateLastDigitStats\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"updateLastDigitStats\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onMasterDataUpdate\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"onMasterDataUpdate\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateBars\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"updateBars\"), _class.prototype)), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/ListStore.js\":\n/*!********************************!*\\\n  !*** ./src/store/ListStore.js ***!\n  \\********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ListStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Connect */ \"./src/store/Connect.js\");\nvar _dec, _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\n\n\nvar ListStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function ListStore(_ref) {\n    var _this = this;\n\n    var getContext = _ref.getContext,\n        getItems = _ref.getItems,\n        onItemSelected = _ref.onItemSelected;\n\n    _classCallCheck(this, ListStore);\n\n    this.connect = Object(_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function () {\n      return {\n        items: _this.getItems(),\n        onItemClick: _this.onItemClick\n      };\n    });\n    this.getContext = getContext;\n    this.getItems = getItems; // items : [{id: '', text: '', disabled?: false, active?: false}]\n\n    this.onItemSelected = onItemSelected;\n  }\n\n  _createClass(ListStore, [{\n    key: \"onItemClick\",\n    value: function onItemClick(idx, item) {\n      this.onItemSelected(item);\n    }\n  }]);\n\n  return ListStore;\n}(), _temp), (_applyDecoratedDescriptor(_class.prototype, \"onItemClick\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"onItemClick\"), _class.prototype)), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/LoaderStore.js\":\n/*!**********************************!*\\\n  !*** ./src/store/LoaderStore.js ***!\n  \\**********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return LoaderStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\nvar _dec, _dec2, _dec3, _class, _descriptor, _descriptor2, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\nvar LoaderStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function LoaderStore() {\n    _classCallCheck(this, LoaderStore);\n\n    _initializerDefineProperty(this, \"isActive\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"currentState\", _descriptor2, this);\n\n    this.states = {};\n    this.states = {\n      'chart-engine': t.translate('Retrieving Chart Engine...'),\n      'market-symbol': t.translate('Retrieving Market Symbols...'),\n      'trading-time': t.translate('Retrieving Trading Times...'),\n      'chart-data': t.translate('Retrieving Chart Data...')\n    };\n  }\n\n  _createClass(LoaderStore, [{\n    key: \"setState\",\n    value: function setState(state) {\n      if (!this.states[state]) {\n        console.error('Wrong state requested!');\n        return;\n      }\n\n      this.currentState = this.states[state];\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.isActive = true;\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.isActive = false;\n    }\n  }]);\n\n  return LoaderStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"isActive\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"currentState\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"setState\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"setState\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"show\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"show\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"hide\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"hide\"), _class.prototype)), _class));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/store/MenuStore.js\":\n/*!********************************!*\\\n  !*** ./src/store/MenuStore.js ***!\n  \\********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MenuStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _DialogStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DialogStore */ \"./src/store/DialogStore.js\");\n/* harmony import */ var _components_Dialog_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Dialog.jsx */ \"./src/components/Dialog.jsx\");\nvar _dec, _dec2, _class, _descriptor, _descriptor2, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\n\n\nvar MenuStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function MenuStore(mainStore, options) {\n    var _this = this;\n\n    _classCallCheck(this, MenuStore);\n\n    this.onContextReady = function () {\n      _this.modalNode = _this.mainStore.chart.modalNode;\n    };\n\n    _initializerDefineProperty(this, \"modalNode\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"route\", _descriptor2, this);\n\n    this.connect = Object(_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function (_ref) {\n      var c = _ref.chart;\n      return {\n        setOpen: _this.setOpen,\n        open: _this.open,\n        onTitleClick: _this.onTitleClick,\n        DropdownDialog: _this.DropDownDialog,\n        modalNode: _this.modalNode,\n        isMobile: c.isMobile,\n        shouldRenderDialogs: c.shouldRenderDialogs\n      };\n    });\n    this.mainStore = mainStore;\n    this.dialog = new _DialogStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"](mainStore);\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"reaction\"])(function () {\n      return _this.open;\n    }, function () {\n      return _this.blurInput();\n    });\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.mainStore.chart.context;\n    }, this.onContextReady);\n\n    if (options && options.route) {\n      this.route = options.route;\n    }\n\n    this.DropDownDialog = this.dialog.connect(_components_Dialog_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n  }\n\n  _createClass(MenuStore, [{\n    key: \"setOpen\",\n    value: function setOpen(val) {\n      this.dialog.setOpen(val);\n      /**\n       *  Update the url hash by considering the dialog `route` and `open`\n       */\n\n      this.routingStore.updateRoute(this.route, val);\n    }\n  }, {\n    key: \"blurInput\",\n    value: function blurInput() {\n      var stx = this.context.stx;\n\n      if (this.open === false) {\n        document.activeElement.blur();\n        stx.modalEnd();\n      } else {\n        stx.modalBegin();\n      }\n\n      stx.allowScroll = stx.allowZoom = !this.open;\n    }\n  }, {\n    key: \"onTitleClick\",\n    value: function onTitleClick(e) {\n      if (e) {\n        e.stopPropagation();\n      }\n\n      this.setOpen(!this.open);\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"routingStore\",\n    get: function get() {\n      return this.mainStore.routing;\n    }\n  }, {\n    key: \"open\",\n    get: function get() {\n      return this.dialog.open;\n    }\n  }]);\n\n  return MenuStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"modalNode\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"route\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"open\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"open\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setOpen\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"setOpen\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onTitleClick\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"onTitleClick\"), _class.prototype)), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/NavigationWidgetStore.js\":\n/*!********************************************!*\\\n  !*** ./src/store/NavigationWidgetStore.js ***!\n  \\********************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return NavigationWidgetStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\nvar _dec, _dec2, _dec3, _dec4, _dec5, _class, _descriptor, _descriptor2, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\nvar NavigationWidgetStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec4 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec5 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  _createClass(NavigationWidgetStore, [{\n    key: \"chart\",\n    get: function get() {\n      return this.mainStore.chart;\n    }\n  }, {\n    key: \"stateStore\",\n    get: function get() {\n      return this.mainStore.state;\n    }\n  }, {\n    key: \"crosshairStore\",\n    get: function get() {\n      return this.mainStore.crosshair;\n    }\n  }, {\n    key: \"stxx\",\n    get: function get() {\n      return this.chart.stxx;\n    }\n  }]);\n\n  function NavigationWidgetStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, NavigationWidgetStore);\n\n    _initializerDefineProperty(this, \"isHomeEnabled\", _descriptor, this);\n\n    this.moveTimer = void 0;\n\n    this.onContextReady = function () {\n      _this.stxx.addEventListener('move', function () {\n        clearTimeout(_this.moveTimer);\n        _this.moveTimer = setTimeout(_this.updateHomeButton, 50);\n      });\n\n      _this.stxx.prepend('mouseWheel', function () {\n        _this.stxx.chart.lockScroll = false;\n      });\n    };\n\n    _initializerDefineProperty(this, \"updateHomeButton\", _descriptor2, this);\n\n    this.mainStore = mainStore;\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.mainStore.chart.context;\n    }, this.onContextReady);\n  }\n\n  _createClass(NavigationWidgetStore, [{\n    key: \"onMouseEnter\",\n    value: function onMouseEnter() {\n      this.crosshairStore.updateVisibility(false);\n    }\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave() {\n      this.crosshairStore.updateVisibility(true);\n    }\n  }, {\n    key: \"onHome\",\n    value: function onHome() {\n      this.isHomeEnabled = false;\n      this.stxx.chart.lockAutoScroll = false;\n      this.stxx.chart.isScrollLocationChanged = false;\n      this.stxx.home();\n      this.stxx.draw();\n    }\n  }, {\n    key: \"onScale\",\n    value: function onScale() {\n      var point = null;\n      this.isHomeEnabled = false;\n      var dataSet = this.stxx.chart.dataSet;\n      if (dataSet && dataSet.length) point = dataSet[0];\n      this.stateStore.scrollChartToLeft(point, true);\n    }\n  }]);\n\n  return NavigationWidgetStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"isHomeEnabled\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"updateHomeButton\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function () {\n      _this2.isHomeEnabled = !_this2.stxx.isHome();\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"onMouseEnter\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"onMouseEnter\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onMouseLeave\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"onMouseLeave\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onHome\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"onHome\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onScale\", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, \"onScale\"), _class.prototype)), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/Notifier.js\":\n/*!*******************************!*\\\n  !*** ./src/store/Notifier.js ***!\n  \\*******************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Notifier =\n/*#__PURE__*/\nfunction () {\n  function Notifier() {\n    _classCallCheck(this, Notifier);\n\n    this.onMessage = void 0;\n  }\n\n  _createClass(Notifier, [{\n    key: \"notify\",\n\n    /*\n     * a Notification object has the following structure:\n     * {\n     *     text, // displayed messages\n     *     type, // message type; choose from `info`, `warning`, `success`, `error`. Defaults to `warning`\n     *     category, // choose from `activesymbol`\n     * }\n     */\n    value: function notify(notification) {\n      if (this.onMessage) {\n        this.onMessage(_objectSpread({\n          type: 'warning'\n        }, notification));\n      }\n    }\n  }, {\n    key: \"notifyMarketOpen\",\n    value: function notifyMarketOpen(symbol) {\n      this.notify({\n        text: t.translate('[symbol] market is now opened.', {\n          symbol: symbol\n        }),\n        type: 'info',\n        category: Notifier.CATEGORY_ACTIVE_SYMBOL\n      });\n    }\n  }, {\n    key: \"notifyMarketClose\",\n    value: function notifyMarketClose(symbol) {\n      this.notify({\n        text: t.translate('[symbol] market is presently closed.', {\n          symbol: symbol\n        }),\n        category: Notifier.CATEGORY_ACTIVE_SYMBOL\n      });\n    }\n  }, {\n    key: \"notifyDelayedMarket\",\n    value: function notifyDelayedMarket(symbol, delay) {\n      this.notify({\n        text: t.translate('[symbol] feed is delayed by [delay] minutes', {\n          symbol: symbol,\n          delay: delay\n        }),\n        category: Notifier.CATEGORY_ACTIVE_SYMBOL\n      });\n    }\n  }, {\n    key: \"notifyFeedUnavailable\",\n    value: function notifyFeedUnavailable(symbol) {\n      this.notify({\n        text: t.translate('Streaming for [symbol] is not available due to license restrictions', {\n          symbol: symbol\n        }),\n        type: 'error',\n        category: Notifier.CATEGORY_ACTIVE_SYMBOL\n      });\n    }\n  }], [{\n    key: \"CATEGORY_ACTIVE_SYMBOL\",\n    get: function get() {\n      return 'activesymbol';\n    }\n  }]);\n\n  return Notifier;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Notifier);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/store/PaginationLoaderStore.js\":\n/*!********************************************!*\\\n  !*** ./src/store/PaginationLoaderStore.js ***!\n  \\********************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\nvar _dec, _class, _descriptor, _descriptor2, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\nvar PaginationLoaderStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  _createClass(PaginationLoaderStore, [{\n    key: \"feed\",\n    get: function get() {\n      return this.mainStore.chart.feed;\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.mainStore.chart.stxx;\n    }\n  }]);\n\n  function PaginationLoaderStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, PaginationLoaderStore);\n\n    _initializerDefineProperty(this, \"isOnPagination\", _descriptor, this);\n\n    this.paginationEndEpoch = null;\n\n    this.onContextReady = function () {\n      _this.feed.onStartPagination(_this.setOnPagination);\n\n      _this.feed.onPagination(_this.setOnPagination); // this injection will slows down the swiping and mouse wheel operations\n      // by ignoring requests that are too close from one another or\n      // when isOnPagination is true\n\n\n      _this.stx.prepend('mouseWheel', _this.onMouseWheel);\n    };\n\n    this.onMouseWheel = function (e) {\n      e.preventDefault();\n      var diff = null;\n      var timeLimit = 40;\n      if (_this.stx.lastMouseWheelEvent) diff = Date.now() - _this.stx.lastMouseWheelEvent;\n      if (diff && diff < timeLimit || _this.isOnPagination) return true; // skip swiping\n\n      return false; // continue swiping\n    };\n\n    this.setRef = function (ref) {\n      _this.ref = ref;\n\n      if (_this.ref !== null) {\n        _this.ref.setPosition({\n          epoch: _this.paginationEndEpoch,\n          price: 0\n        });\n      }\n    };\n\n    _initializerDefineProperty(this, \"setOnPagination\", _descriptor2, this);\n\n    this.mainStore = mainStore;\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.context;\n    }, this.onContextReady);\n  }\n\n  return PaginationLoaderStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"isOnPagination\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"setOnPagination\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function (_ref) {\n      var end = _ref.end;\n      _this2.isOnPagination = !_this2.isOnPagination;\n      _this2.paginationEndEpoch = _this2.isOnPagination ? end : null;\n\n      if (_this2.ref) {\n        _this2.ref.setPosition({\n          epoch: _this2.paginationEndEpoch,\n          price: 0\n        });\n      }\n    };\n  }\n})), _class));\n/* harmony default export */ __webpack_exports__[\"default\"] = (PaginationLoaderStore);\n\n/***/ }),\n\n/***/ \"./src/store/PriceLineStore.js\":\n/*!*************************************!*\\\n  !*** ./src/store/PriceLineStore.js ***!\n  \\*************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PriceLineStore; });\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! event-emitter-es6 */ \"./node_modules/event-emitter-es6/index.js\");\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\nvar _dec, _dec2, _dec3, _dec4, _dec5, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\n\n\nvar LINE_OFFSET_HEIGHT = 4;\nvar LINE_OFFSET_HEIGHT_HALF = LINE_OFFSET_HEIGHT >> 1;\nvar PriceLineStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec4 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, _dec5 = mobx__WEBPACK_IMPORTED_MODULE_1__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  _createClass(PriceLineStore, [{\n    key: \"zIndex\",\n    // @observable top = 0;\n    // @observable zIndex;\n    // @observable uncentered = false;\n    set: function set(value) {\n      if (this._line) {\n        this._line.style.zIndex = value;\n      }\n    }\n  }, {\n    key: \"pip\",\n    get: function get() {\n      return this.mainStore.chart.currentActiveSymbol.decimal_places;\n    }\n  }]);\n\n  function PriceLineStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, PriceLineStore);\n\n    this._relative = false;\n\n    _initializerDefineProperty(this, \"draggable\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"isDragging\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"visible\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"_price\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"offScreen\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"title\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"isOverlapping\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"offScreenDirection\", _descriptor8, this);\n\n    this.onContextReady = function () {\n      _this._injectionId = _this.stx.append('draw', _this._draw);\n    };\n\n    this.init = function () {\n      var exitIfNotisDraggable = function exitIfNotisDraggable(e, callback) {\n        if (_this.visible && _this.draggable) {\n          callback.call(_this, e);\n        }\n      };\n\n      CIQ.safeDrag(_this._line, function (e) {\n        return exitIfNotisDraggable(e, _this._startDrag);\n      }, function (e) {\n        return exitIfNotisDraggable(e, _this._dragLine);\n      }, function (e) {\n        return exitIfNotisDraggable(e, _this._endDrag);\n      });\n    };\n\n    _initializerDefineProperty(this, \"_calculateTop\", _descriptor9, this);\n\n    this._draw = function () {\n      if (_this.visible && _this._line) {\n        _this.top = _this._calculateTop();\n      }\n    };\n\n    this.connect = Object(_Connect__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(function () {\n      return {\n        priceDisplay: _this.priceDisplay,\n        visible: _this.visible,\n        setDragLine: _this.setDragLine,\n        className: _this.className,\n        draggable: _this.draggable,\n        isDragging: _this.isDragging,\n        init: _this.init,\n        title: _this.title,\n        yAxiswidth: _this.yAxiswidth,\n        offScreen: _this.offScreen,\n        hideBarrierLine: _this.hideBarrierLine,\n        hideOffscreenLine: _this.hideOffscreenLine,\n        offScreenDirection: _this.offScreenDirection,\n        isOverlapping: _this.isOverlapping // zIndex: this.zIndex,\n\n      };\n    });\n    this.mainStore = mainStore;\n    this._emitter = new event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default.a({\n      emitDelay: 0\n    });\n    Object(mobx__WEBPACK_IMPORTED_MODULE_1__[\"when\"])(function () {\n      return _this.context;\n    }, this.onContextReady);\n  }\n\n  _createClass(PriceLineStore, [{\n    key: \"destructor\",\n    value: function destructor() {\n      this.stx.removeInjection(this._injectionId);\n    }\n  }, {\n    key: \"setDragLine\",\n    value: function setDragLine(el) {\n      this._line = el;\n\n      if (this._line) {\n        this._draw();\n      }\n    }\n  }, {\n    key: \"_modalBegin\",\n    value: function _modalBegin() {\n      if (this.stx.grabbingScreen) {\n        return;\n      }\n\n      this.stx.editingAnnotation = true;\n      this.stx.modalBegin();\n    }\n  }, {\n    key: \"_modalEnd\",\n    value: function _modalEnd() {\n      this.stx.modalEnd();\n      this.stx.editingAnnotation = false;\n    }\n  }, {\n    key: \"_startDrag\",\n    value: function _startDrag() {\n      this._modalBegin();\n\n      this.isDragging = true;\n      this._initialPosition = this.top;\n      this._startDragPrice = this._price;\n    }\n  }, {\n    key: \"_dragLine\",\n    value: function _dragLine(e) {\n      if (!this._line) {\n        return;\n      }\n\n      var newTop = this._initialPosition + e.displacementY;\n      var newCenter = newTop + LINE_OFFSET_HEIGHT_HALF;\n\n      var newPrice = this._priceFromLocation(newCenter);\n\n      if (this._priceConstrainer) {\n        newPrice = this._priceConstrainer(newPrice);\n      }\n\n      if (this.relative) {\n        newPrice -= this.stx.currentQuote().Close;\n      }\n\n      this.price = newPrice;\n    }\n  }, {\n    key: \"_endDrag\",\n    value: function _endDrag() {\n      this._modalEnd();\n\n      this.isDragging = false;\n\n      if (this._startDragPrice.toFixed(this.pip) !== this._price.toFixed(this.pip)) {\n        this._emitter.emit(PriceLineStore.EVENT_DRAG_RELEASED, this._price);\n      }\n    }\n  }, {\n    key: \"_locationFromPrice\",\n    value: function _locationFromPrice(p) {\n      return this.stx.pixelFromPrice(p, this.chart.panel) - this.chart.panel.top;\n    }\n  }, {\n    key: \"_priceFromLocation\",\n    value: function _priceFromLocation(y) {\n      var price = this.stx.valueFromPixel(y + this.chart.panel.top, this.chart.panel);\n      return price;\n    }\n  }, {\n    key: \"onPriceChanged\",\n    value: function onPriceChanged(callback) {\n      this._emitter.on(PriceLineStore.EVENT_PRICE_CHANGED, callback);\n    }\n  }, {\n    key: \"onDragReleased\",\n    value: function onDragReleased(callback) {\n      this._emitter.on(PriceLineStore.EVENT_DRAG_RELEASED, callback);\n    }\n  }, {\n    key: \"overlapCheck\",\n    value: function overlapCheck(top) {\n      var _this2 = this;\n\n      var _barriers = this.mainStore.chart._barriers;\n\n      var filtered_barriers = _barriers.filter(function (a) {\n        return a._high_barrier.price !== 0;\n      });\n\n      var current_barrier_idx = filtered_barriers.findIndex(function (b) {\n        return b._high_barrier === _this2;\n      });\n\n      for (var i = 0; i < filtered_barriers.length; i++) {\n        if (i === current_barrier_idx) {\n          continue;\n        }\n\n        var barrier = filtered_barriers[i];\n        var diffTop = Math.abs(barrier._high_barrier.top - top);\n\n        if (diffTop < 25) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"priceDisplay\",\n    get: function get() {\n      var display = this._price.toFixed(this.pip);\n\n      if (this.relative && this._price > 0) {\n        display = \"+\".concat(display);\n      }\n\n      return display;\n    }\n  }, {\n    key: \"price\",\n    get: function get() {\n      return this._price;\n    },\n    set: function set(value) {\n      if (value !== this._price) {\n        this._price = value;\n\n        this._draw();\n\n        this._emitter.emit(PriceLineStore.EVENT_PRICE_CHANGED, this._price);\n      }\n    }\n  }, {\n    key: \"relative\",\n    get: function get() {\n      return this._relative;\n    },\n    set: function set(value) {\n      if (this._relative === value) {\n        return;\n      }\n\n      this._relative = value; // convert between relative and absolute\n\n      var currentQuote = this.stx.currentQuote();\n      var currentPrice = currentQuote ? currentQuote.Close : 0;\n\n      if (this._relative) {\n        currentPrice = -currentPrice;\n      }\n\n      this.price = this._price + currentPrice;\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.context.stx;\n    }\n  }, {\n    key: \"chart\",\n    get: function get() {\n      return this.stx.chart;\n    }\n  }, {\n    key: \"priceConstrainer\",\n    set: function set(value) {\n      this._priceConstrainer = value;\n    }\n  }, {\n    key: \"realPrice\",\n    get: function get() {\n      return this.relative ? this.stx.currentQuote().Close + this._price : this._price;\n    }\n  }, {\n    key: \"yAxiswidth\",\n    get: function get() {\n      return this.mainStore.chart.yAxiswidth;\n    }\n  }, {\n    key: \"top\",\n    // Mantually update the dop to improve performance.\n    // We don't pay for react reconciler and mobx observable tracking in animation frames.\n    set: function set(v) {\n      this.__top = v;\n      this._line.style.transform = \"translateY(\".concat(this.top, \"px)\");\n    },\n    get: function get() {\n      return this.__top;\n    }\n  }], [{\n    key: \"EVENT_PRICE_CHANGED\",\n    get: function get() {\n      return 'EVENT_PRICE_CHANGED';\n    }\n  }, {\n    key: \"EVENT_DRAG_RELEASED\",\n    get: function get() {\n      return 'EVENT_DRAG_RELEASED';\n    }\n  }]);\n\n  return PriceLineStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"draggable\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return true;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"isDragging\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"visible\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return true;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"_price\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"offScreen\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"title\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"isOverlapping\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"offScreenDirection\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class.prototype, \"pip\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"pip\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"priceDisplay\", [mobx__WEBPACK_IMPORTED_MODULE_1__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"priceDisplay\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setDragLine\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"setDragLine\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_startDrag\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"_startDrag\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_dragLine\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"_dragLine\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_endDrag\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"_endDrag\"), _class.prototype), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"_calculateTop\", [_dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return function () {\n      if (_this3.stx.currentQuote() === null) {\n        return;\n      }\n\n      var top = _this3._locationFromPrice(_this3.realPrice); // keep line on chart even if price is off viewable area:\n\n\n      if (top < 0) {\n        // this.uncentered = true;\n        if (top < -LINE_OFFSET_HEIGHT_HALF) {\n          _this3.offScreenDirection = _utils__WEBPACK_IMPORTED_MODULE_3__[\"DIRECTIONS\"].UP;\n        }\n\n        top = 0;\n      } else if (top + LINE_OFFSET_HEIGHT > _this3.chart.panel.height) {\n        // this.uncentered = true;\n        if (top + LINE_OFFSET_HEIGHT - _this3.chart.panel.height > LINE_OFFSET_HEIGHT_HALF) {\n          _this3.offScreenDirection = _utils__WEBPACK_IMPORTED_MODULE_3__[\"DIRECTIONS\"].DOWN;\n        }\n\n        top = _this3.chart.panel.height - LINE_OFFSET_HEIGHT;\n      } else {\n        // this.uncentered = false;\n        _this3.offScreenDirection = null;\n      }\n\n      _this3.offScreen = !!_this3.offScreenDirection;\n\n      if (top + 30 > _this3.chart.panel.height) {\n        top = _this3.chart.panel.height - 30;\n      } else if (top < 10) {\n        top = 10;\n      }\n\n      if (_this3.offScreenDirection && _this3.showOffscreenArrows) {\n        top += _this3.offScreenDirection === _utils__WEBPACK_IMPORTED_MODULE_3__[\"DIRECTIONS\"].UP ? +_utils__WEBPACK_IMPORTED_MODULE_3__[\"ARROW_HEIGHT\"] : -_utils__WEBPACK_IMPORTED_MODULE_3__[\"ARROW_HEIGHT\"];\n      }\n\n      if (_this3.opacityOnOverlap) {\n        _this3.isOverlapping = _this3.overlapCheck(top);\n      }\n\n      return Math.round(top) | 0;\n    };\n  }\n})), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/RoutingStore.js\":\n/*!***********************************!*\\\n  !*** ./src/store/RoutingStore.js ***!\n  \\***********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RoutingStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\nvar _dec, _dec2, _dec3, _dec4, _class;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\n\nvar allDialogs = [];\nvar RoutingStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec4 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class =\n/*#__PURE__*/\nfunction () {\n  function RoutingStore(mainStore) {\n    _classCallCheck(this, RoutingStore);\n\n    this.mainStore = mainStore;\n  }\n\n  _createClass(RoutingStore, [{\n    key: \"handleRouting\",\n    value: function handleRouting() {\n      var _this = this;\n\n      window.addEventListener('hashchange', function () {\n        var hash = window.history.state.urlPath.replace('#', '');\n\n        if (hash === '') {\n          _this.closeAll();\n        }\n      }, false);\n    }\n  }, {\n    key: \"updateRoute\",\n    value: function updateRoute(route, dialogStatus) {\n      var enableRouting = this.mainStore.chart.enableRouting;\n\n      if (enableRouting && dialogStatus && route) {\n        window.history.replaceState({\n          urlPath: '#'\n        }, '', '#');\n        window.history.pushState({\n          urlPath: \"#\".concat(route)\n        }, '', \"#\".concat(route));\n      } else if (enableRouting && !dialogStatus && route) {\n        window.history.replaceState({\n          urlPath: '#'\n        }, '', '#');\n      }\n    }\n  }, {\n    key: \"registerDialog\",\n    value: function registerDialog(dialogStore) {\n      allDialogs.push(dialogStore);\n    }\n  }, {\n    key: \"closeAll\",\n    value: function closeAll() {\n      allDialogs.forEach(function (m) {\n        return m.setOpen(false);\n      });\n    }\n  }]);\n\n  return RoutingStore;\n}(), (_applyDecoratedDescriptor(_class.prototype, \"handleRouting\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"handleRouting\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateRoute\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"updateRoute\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"registerDialog\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"registerDialog\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"closeAll\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"closeAll\"), _class.prototype)), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/SettingsDialogStore.js\":\n/*!******************************************!*\\\n  !*** ./src/store/SettingsDialogStore.js ***!\n  \\******************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SettingsDialogStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Connect */ \"./src/store/Connect.js\");\n/* harmony import */ var _components_Dialog_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/Dialog.jsx */ \"./src/components/Dialog.jsx\");\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MenuStore */ \"./src/store/MenuStore.js\");\nvar _dec, _dec2, _dec3, _dec4, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\n\n\nvar SettingsDialogStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec4 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  _createClass(SettingsDialogStore, [{\n    key: \"showTabs\",\n    // [{id: '', title: '', value: ''}]\n    // 'settings' | 'description'\n    get: function get() {\n      return !!this.description;\n    }\n  }]);\n\n  function SettingsDialogStore(_ref) {\n    var _this = this;\n\n    var mainStore = _ref.mainStore,\n        getContext = _ref.getContext,\n        onChanged = _ref.onChanged;\n\n    _classCallCheck(this, SettingsDialogStore);\n\n    _initializerDefineProperty(this, \"items\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"title\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"description\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"activeTab\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"scrollPanel\", _descriptor5, this);\n\n    this.connect = Object(_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function () {\n      return {\n        items: _this.items,\n        itemGroups: _this.itemGroups,\n        title: _this.title,\n        description: _this.description,\n        showTabs: _this.showTabs,\n        setOpen: _this.setOpen,\n        onResetClick: _this.onResetClick,\n        onItemChange: _this.onItemChange,\n        onItemActive: _this.onItemActive,\n        Dialog: _this.Dialog,\n        open: _this.open,\n        theme: _this.theme,\n        setScrollPanel: _this.setScrollPanel\n      };\n    });\n    this.mainStore = mainStore;\n    this.getContext = getContext;\n    this.onChanged = onChanged;\n    this.menu = new _MenuStore__WEBPACK_IMPORTED_MODULE_3__[\"default\"](mainStore, {\n      route: 'indicator-setting'\n    });\n    this.Dialog = this.menu.dialog.connect(_components_Dialog_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n  }\n\n  _createClass(SettingsDialogStore, [{\n    key: \"setOpen\",\n    value: function setOpen(value) {\n      if (value) {\n        this.scrollPanel.scrollTop(0);\n      }\n\n      return this.menu.setOpen(value);\n    }\n  }, {\n    key: \"onResetClick\",\n    value: function onResetClick() {\n      var items = this.items.map(function (item) {\n        return _objectSpread({}, item, {\n          value: item.defaultValue\n        });\n      });\n      this.items = items;\n      this.onChanged(items);\n    }\n  }, {\n    key: \"onItemChange\",\n    value: function onItemChange(id, newValue) {\n      var item = this.items.find(function (x) {\n        return x.id === id;\n      });\n\n      if (item && item.value !== newValue) {\n        item.value = newValue;\n        this.items = this.items.slice(0); // force array update\n\n        this.onChanged(this.items);\n      }\n    }\n  }, {\n    key: \"setScrollPanel\",\n    value: function setScrollPanel(element) {\n      this.scrollPanel = element;\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.context.stx;\n    }\n  }, {\n    key: \"theme\",\n    get: function get() {\n      return this.mainStore.chartSetting.theme;\n    }\n  }, {\n    key: \"open\",\n    get: function get() {\n      return this.menu.open;\n    }\n  }, {\n    key: \"itemGroups\",\n    get: function get() {\n      var _this2 = this;\n\n      var restGroup = [];\n      var groups = [];\n      groups.push({\n        key: '%K',\n        fields: []\n      });\n      groups.push({\n        key: '%D',\n        fields: []\n      });\n      groups.push({\n        key: 'OverBought',\n        fields: []\n      });\n      groups.push({\n        key: 'OverSold',\n        fields: []\n      });\n      groups.push({\n        key: 'Show Zones',\n        fields: []\n      });\n\n      var _loop = function _loop(index) {\n        var title = _this2.items[index].title;\n        var group = groups.find(function (x) {\n          return title.indexOf(x.key) !== -1;\n        });\n\n        if (group) {\n          group.fields.push(_this2.items[index]);\n        } else {\n          restGroup.push(_this2.items[index]);\n        }\n      };\n\n      for (var index in this.items) {\n        _loop(index);\n      }\n\n      groups.unshift({\n        key: this.title,\n        fields: restGroup\n      });\n      return groups;\n    }\n  }]);\n\n  return SettingsDialogStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"items\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"title\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"description\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"activeTab\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 'settings';\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"showTabs\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"showTabs\"), _class.prototype), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"scrollPanel\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class.prototype, \"open\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"open\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setOpen\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"setOpen\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onResetClick\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"onResetClick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onItemChange\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"onItemChange\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"itemGroups\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"itemGroups\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setScrollPanel\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"setScrollPanel\"), _class.prototype)), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/ShadeStore.js\":\n/*!*********************************!*\\\n  !*** ./src/store/ShadeStore.js ***!\n  \\*********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ShadeStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Connect */ \"./src/store/Connect.js\");\nvar _class, _descriptor, _descriptor2, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\nvar ShadeStore = (_class = (_temp = function ShadeStore(className) {\n  var _this = this;\n\n  _classCallCheck(this, ShadeStore);\n\n  _initializerDefineProperty(this, \"className\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"visible\", _descriptor2, this);\n\n  this.setPosition = function (_ref) {\n    var top = _ref.top,\n        bottom = _ref.bottom,\n        right = _ref.right;\n\n    if (_this._div) {\n      var pos = null;\n\n      if (bottom && top) {\n        // between shade\n        var y = (bottom + top) / 2 + 60; // manually scale from default 120px (_barrier.scss)\n\n        var scale = (bottom - top) / 120.0;\n        pos = \"translate(\".concat(-right, \"px, \").concat(y, \"px) scale(1, \").concat(scale, \")\");\n      } else if (bottom) {\n        // above shade\n        pos = \"translate(\".concat(-right, \"px, \").concat(bottom, \"px)\");\n      } else if (top) {\n        // below shade\n        pos = \"translate(\".concat(-right, \"px, \").concat(top + 120, \"px)\");\n      }\n\n      _this._div.style.transform = pos;\n    }\n  };\n\n  this.setShadeRef = function (ref) {\n    _this._div = ref;\n  };\n\n  this.connect = Object(_Connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function () {\n    return {\n      visible: _this.visible,\n      className: _this.className,\n      setShadeRef: _this.setShadeRef\n    };\n  });\n  this.className = className;\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"className\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"visible\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n})), _class);\n\n\n/***/ }),\n\n/***/ \"./src/store/ShareStore.js\":\n/*!*********************************!*\\\n  !*** ./src/store/ShareStore.js ***!\n  \\*********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ShareStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MenuStore */ \"./src/store/MenuStore.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\n/* harmony import */ var _components_Menu_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Menu.jsx */ \"./src/components/Menu.jsx\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/ga */ \"./src/utils/ga.js\");\nvar _dec, _dec2, _dec3, _class, _descriptor, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\n\n\n\n\n\nvar ShareStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function ShareStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, ShareStore);\n\n    _initializerDefineProperty(this, \"isLoadingPNG\", _descriptor, this);\n\n    this.onContextReady = function () {\n      _this.screenshotArea = _this.context.topNode.querySelector('.ciq-chart');\n    };\n\n    this.mainStore = mainStore;\n    this.menu = new _MenuStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"](mainStore, {\n      route: 'download'\n    });\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.context;\n    }, this.onContextReady);\n    this.Dialog = this.menu.connect(_components_Menu_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n  }\n\n  _createClass(ShareStore, [{\n    key: \"createNewTab\",\n    value: function createNewTab() {\n      // Create a new tab for browsers that doesn't support HTML5 download attribute\n      return !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform) ? window.open() : null;\n    }\n  }, {\n    key: \"downloadPNG\",\n    value: function downloadPNG() {\n      var _this2 = this;\n\n      this.isLoadingPNG = true;\n      var newTab = this.createNewTab();\n      __webpack_require__.e(/*! import() | html2canvas */ \"html2canvas\").then(__webpack_require__.t.bind(null, /*! ../../chartiq/html2canvas.min.js */ \"./chartiq/html2canvas.min.js\", 7)).then(function (html2canvas) {\n        // since react rerenders is not immediate, we use CIQ.appendClassName to\n        // immediately append/unappend class name before taking screenshot.\n        CIQ.appendClassName(_this2.screenshotArea, 'ciq-screenshot');\n        html2canvas[\"default\"](_this2.screenshotArea).then(function (canvas) {\n          return _this2._onCanvasReady(canvas, newTab);\n        });\n      });\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_4__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_4__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_4__[\"LogActions\"].Download, 'Download PNG');\n    }\n  }, {\n    key: \"_onCanvasReady\",\n    value: function _onCanvasReady(canvas, newTab) {\n      var content = canvas.toDataURL('image/png');\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"downloadFileInBrowser\"])(\"\".concat(new Date().toUTCString(), \".png\"), content, 'image/png;', newTab);\n      this.isLoadingPNG = false;\n      CIQ.unappendClassName(this.screenshotArea, 'ciq-screenshot');\n    }\n  }, {\n    key: \"downloadCSV\",\n    value: function downloadCSV() {\n      var _this3 = this;\n\n      var isTick = this.timeUnit === 'tick';\n      var header = \"Date,Time,\".concat(isTick ? this.marketDisplayName : 'Open,High,Low,Close');\n      var lines = [header];\n      var totalItemCount = this.stx.masterData.length;\n      var allowableItems = totalItemCount <= 100 ? this.stx.masterData : this.stx.masterData.slice(totalItemCount - 100, totalItemCount);\n      allowableItems.forEach(function (_ref) {\n        var DT = _ref.DT,\n            Open = _ref.Open,\n            High = _ref.High,\n            Low = _ref.Low,\n            Close = _ref.Close;\n        var year = DT.getFullYear();\n        var month = DT.getMonth() + 1; // months from 1-12\n\n        var day = DT.getDate();\n        var hours = DT.getHours();\n        var minutes = DT.getMinutes();\n        var seconds = DT.getSeconds();\n        var formattedSeconds = seconds > 9 ? \":\".concat(seconds) : \":0\".concat(seconds);\n        var date = \"\".concat(year, \"-\").concat(month > 9 ? month : \"0\".concat(month), \"-\").concat(day > 9 ? day : \"0\".concat(day));\n        var time = \"\".concat(hours > 9 ? hours : \"0\".concat(hours), \":\").concat(minutes > 9 ? minutes : \"0\".concat(minutes)).concat(isTick ? formattedSeconds : '');\n\n        if (isTick && Close) {\n          lines.push(\"\".concat(date, \",\").concat(time, \",\").concat(Close));\n        }\n\n        if (!isTick && Open && High && Low && Close) {\n          lines.push([date, time, Open.toFixed(_this3.decimalPlaces), High.toFixed(_this3.decimalPlaces), Low.toFixed(_this3.decimalPlaces), Close.toFixed(_this3.decimalPlaces)].join(','));\n        }\n      });\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"downloadFileInBrowser\"])(\"\".concat(this.marketDisplayName, \" (\").concat(this.timeperiodDisplay, \").csv\"), lines.join('\\n'), 'text/csv;charset=utf-8;', this.createNewTab());\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_4__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_4__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_4__[\"LogActions\"].Download, 'Download CSV');\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.context.stx;\n    }\n  }, {\n    key: \"timeUnit\",\n    get: function get() {\n      return this.mainStore.timeperiod.timeUnit;\n    }\n  }, {\n    key: \"timeperiodDisplay\",\n    get: function get() {\n      return this.mainStore.timeperiod.display;\n    }\n  }, {\n    key: \"marketDisplayName\",\n    get: function get() {\n      return this.mainStore.chart.currentActiveSymbol.market_display_name;\n    }\n  }, {\n    key: \"decimalPlaces\",\n    get: function get() {\n      return this.mainStore.chart.currentActiveSymbol.decimal_places;\n    }\n  }]);\n\n  return ShareStore;\n}(), _temp), (_applyDecoratedDescriptor(_class.prototype, \"timeUnit\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"timeUnit\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"timeperiodDisplay\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"timeperiodDisplay\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"marketDisplayName\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"marketDisplayName\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"decimalPlaces\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"decimalPlaces\"), _class.prototype), _descriptor = _applyDecoratedDescriptor(_class.prototype, \"isLoadingPNG\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"downloadPNG\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"downloadPNG\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_onCanvasReady\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"_onCanvasReady\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"downloadCSV\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"downloadCSV\"), _class.prototype)), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/StudyLegendStore.js\":\n/*!***************************************!*\\\n  !*** ./src/store/StudyLegendStore.js ***!\n  \\***************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StudyLegendStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MenuStore */ \"./src/store/MenuStore.js\");\n/* harmony import */ var _CategoricalDisplayStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CategoricalDisplayStore */ \"./src/store/CategoricalDisplayStore.js\");\n/* harmony import */ var _SettingsDialogStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SettingsDialogStore */ \"./src/store/SettingsDialogStore.js\");\n/* harmony import */ var _components_SettingsDialog_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/SettingsDialog.jsx */ \"./src/components/SettingsDialog.jsx\");\n/* harmony import */ var _components_Menu_jsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/Menu.jsx */ \"./src/components/Menu.jsx\");\n/* harmony import */ var _components_categoricaldisplay__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/categoricaldisplay */ \"./src/components/categoricaldisplay/index.js\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/ga */ \"./src/utils/ga.js\");\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _class, _descriptor, _descriptor2, _temp;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\n\n\n\n\n\n // TODO:\n// import StudyInfo from '../study-info';\n\nvar StudyLegendStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec4 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec5 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec6 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec7 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec8 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec9 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec10 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function StudyLegendStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, StudyLegendStore);\n\n    this.onContextReady = function () {\n      _this.stx.callbacks.studyOverlayEdit = _this.editStudy;\n      _this.stx.callbacks.studyPanelEdit = _this.editStudy; // to remove studies if user has already more than 5\n      // and remove studies which are excluded\n\n      _this.removeExtraStudies();\n\n      _this.stx.append('createDataSet', _this.renderLegend);\n\n      _this.stx.append('drawPanels', function () {\n        var panel = Object.keys(_this.stx.panels)[1];\n\n        if (panel) {\n          // Hide the up arrow from first indicator to prevent user\n          // from moving the indicator panel above the main chart\n          _this.stx.panels[panel].up.style.display = 'none';\n        }\n      });\n\n      _this.renderLegend();\n    };\n\n    this.previousStudies = {};\n    this.searchInputClassName = void 0;\n\n    _initializerDefineProperty(this, \"hasReachedLimits\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"activeStudies\", _descriptor2, this);\n\n    this.renderLegend = function () {\n      if (!_this.shouldRenderLegend()) {\n        return;\n      }\n\n      _this.updateActiveStudies(); // Temporary prevent user from adding more than 5 indicators\n      // All traces can be removed after new design for studies\n\n\n      _this.updateStyle();\n    };\n\n    this.excludedStudies = {\n      Beta: true,\n      // volume is not supported in chart\n      Klinger: true,\n      'Trade Vol': true,\n      'Vol ROC': true,\n      'Price Vol': true,\n      'Pos Vol': true,\n      'Neg Vol': true,\n      'On Bal Vol': true,\n      'Vol Osc': true,\n      volume: true,\n      'vol undr': true,\n      'vol profile': true,\n      'W MFI': true,\n      EOM: true,\n      'Chaikin MF': true,\n      Twiggs: true,\n      // end volume\n      'Aroon Osc': true,\n      'Lin R2': true,\n      'Lin Fcst': true,\n      'Lin Incpt': true,\n      'Time Fcst': true,\n      'VT Filter': true,\n      TRIX: true,\n      'STD Dev': true,\n      Swing: true,\n      'Acc Swing': true,\n      'Price ROC': true,\n      Momentum: true,\n      'Hist Vol': true,\n      'Pretty Good': true,\n      Ultimate: true,\n      'Chaikin Vol': true,\n      'Price Osc': true,\n      'True Range': true,\n      ATR: true,\n      'Ehler Fisher': true,\n      Schaff: true,\n      QStick: true,\n      Coppock: true,\n      'Chande Mtm': true,\n      'Chande Fcst': true,\n      'Intraday Mtm': true,\n      RAVI: true,\n      'Random Walk': true,\n      'High Low': true,\n      'High-Low': true,\n      'Med Price': true,\n      'Fractal Chaos': true,\n      GAPO: true,\n      'Prime Number Bands': true,\n      'Prime Number': true,\n      HHV: true,\n      LLV: true,\n      'Mass Idx': true,\n      Keltner: true,\n      'Elder Ray': true,\n      'Elder Force': true,\n      'LR Slope': true,\n      COG: true,\n      'Typical Price': true,\n      'Weighted Close': true,\n      'M Flow': true,\n      'W Acc Dist': true,\n      'val lines': true,\n      correl: true,\n      PMO: true,\n      'Rel Vol': true,\n      'ATR Bands': true,\n      'STARC Bands': true,\n      'ATR Trailing Stop': true,\n      'Boll BW': true,\n      'Boll %b': true,\n      'Rel Vig': true,\n      'Elder Impulse': true,\n      'Pivot Points': true,\n      VWAP: true,\n      AVWAP: true,\n      'P Rel': true,\n      'Perf Idx': true,\n      Ulcer: true,\n      'Bal Pwr': true,\n      'Trend Int': true,\n      Choppiness: true,\n      Disparity: true,\n      'Rainbow MA': true,\n      'Rainbow Osc': true,\n      'Pring KST': true,\n      'Pring Sp-K': true,\n      Darvas: true,\n      Supertrend: true,\n      Vortex: true,\n      PSY: true,\n      'MA Dev': true,\n      Shinohara: true,\n      'VT HZ Filter': true\n    };\n    this.mainStore = mainStore;\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.context;\n    }, this.onContextReady);\n    this.menu = new _MenuStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"](mainStore, {\n      route: 'indicators'\n    });\n    this.categoricalDisplay = new _CategoricalDisplayStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n      activeOptions: [{\n        id: 'edit',\n        onClick: function onClick(item) {\n          return _this.editStudy(item);\n        }\n      }, {\n        id: 'delete',\n        onClick: function onClick(item) {\n          return _this.deleteStudy(item);\n        }\n      }],\n      getIsShown: function getIsShown() {\n        return _this.menu.open;\n      },\n      getCategoricalItems: function getCategoricalItems() {\n        return _this.categorizedStudies;\n      },\n      getActiveCategory: function getActiveCategory() {\n        return _this.activeStudies;\n      },\n      onSelectItem: this.onSelectItem.bind(this),\n      placeholderText: t.translate('\"Mass Index\" or \"Doji Star\"'),\n      favoritesId: 'indicators',\n      mainStore: mainStore,\n      searchInputClassName: function searchInputClassName() {\n        return _this.searchInputClassName;\n      },\n      limitInfo: t.translate('Up to 5 active indicators allowed.')\n    });\n    this.settingsDialog = new _SettingsDialogStore__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n      mainStore: mainStore,\n      onDeleted: function onDeleted() {\n        return _this.deleteStudy(_this.helper);\n      },\n      favoritesId: 'indicators',\n      onChanged: function onChanged(items) {\n        return _this.updateStudy(_this.helper.sd, items);\n      }\n    });\n    this.StudyCategoricalDisplay = this.categoricalDisplay.connect(_components_categoricaldisplay__WEBPACK_IMPORTED_MODULE_6__[\"CategoricalDisplay\"]);\n    this.StudyMenu = this.menu.connect(_components_Menu_jsx__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n    this.StudySettingsDialog = this.settingsDialog.connect(_components_SettingsDialog_jsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n  }\n\n  _createClass(StudyLegendStore, [{\n    key: \"removeExtraStudies\",\n    value: function removeExtraStudies() {\n      var _this2 = this;\n\n      if (this.stx.layout && this.stx.layout.studies) {\n        Object.keys(this.stx.layout.studies).forEach(function (study, idx) {\n          var type = _this2.stx.layout.studies[study].type;\n\n          if (idx >= 5 || _this2.excludedStudies[type]) {\n            setTimeout(function () {\n              CIQ.Studies.removeStudy(_this2.stx, _this2.stx.layout.studies[study]);\n\n              _this2.renderLegend();\n            }, 0);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"onSelectItem\",\n    value: function onSelectItem(item) {\n      if (this.stx.layout && Object.keys(this.stx.layout.studies || []).length < 5) {\n        var sd = CIQ.Studies.addStudy(this.stx, item);\n        this.changeStudyPanelTitle(sd);\n        Object(_utils_ga__WEBPACK_IMPORTED_MODULE_7__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_7__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_7__[\"LogActions\"].Indicator, \"Add \".concat(item));\n        this.menu.setOpen(false);\n      }\n    } // Temporary prevent user from adding more than 5 indicators\n    // TODO All traces can be removed after new design for studies\n\n  }, {\n    key: \"updateStyle\",\n    value: function updateStyle() {\n      var should_minimise_last_digit = Object.keys(this.stx.panels).length > 2;\n      this.mainStore.state.setShouldMinimiseLastDigit(should_minimise_last_digit);\n    }\n  }, {\n    key: \"updateProps\",\n    value: function updateProps(_ref) {\n      var searchInputClassName = _ref.searchInputClassName;\n      this.searchInputClassName = searchInputClassName;\n    }\n  }, {\n    key: \"editStudy\",\n    value: function editStudy(study) {\n      var helper = new CIQ.Studies.DialogHelper(study);\n      this.helper = helper;\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_7__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_7__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_7__[\"LogActions\"].Indicator, \"Edit \".concat(helper.name));\n      var attributes = helper.attributes;\n      var inputs = helper.inputs.map(function (inp) {\n        return _objectSpread({\n          id: inp.name,\n          title: t.translate(inp.heading),\n          value: inp.value,\n          defaultValue: inp.defaultInput,\n          type: inp.type === 'checkbox' ? 'switch' : inp.type,\n          options: inp.options || null\n        }, attributes[inp.name], {\n          // {min:1, max: 20}\n          category: 'inputs'\n        });\n      });\n      var outputs = helper.outputs.map(function (out) {\n        return {\n          id: out.name,\n          title: t.translate(out.heading),\n          defaultValue: out.defaultOutput,\n          value: out.color,\n          type: 'colorpicker',\n          category: 'outputs'\n        };\n      });\n      var parameters = helper.parameters.map(function (par) {\n        var shared = _objectSpread({\n          title: t.translate(par.heading)\n        }, attributes[par.name], {\n          category: 'parameters'\n        });\n\n        if (par.defaultValue.constructor === Boolean) {\n          return _objectSpread({}, shared, {\n            id: \"\".concat(par.name, \"Enabled\"),\n            value: par.value,\n            defaultValue: par.defaultValue,\n            type: 'switch'\n          });\n        }\n\n        if (par.defaultValue.constructor === Number) {\n          return _objectSpread({}, shared, {\n            id: par.name,\n            type: 'numbercolorpicker',\n            defaultValue: {\n              Color: par.defaultColor,\n              Value: par.defaultValue\n            },\n            value: {\n              Color: par.color,\n              Value: par.value\n            }\n          });\n        }\n\n        throw new Error('Unrecognised parameter!');\n      });\n      this.settingsDialog.id = study.sd.type;\n      this.settingsDialog.items = [].concat(_toConsumableArray(outputs), _toConsumableArray(inputs), _toConsumableArray(parameters));\n      this.settingsDialog.title = t.translate(study.sd.libraryEntry.name); // TODO:\n      // const description = StudyInfo[study.sd.type];\n      // this.settingsDialog.description = description || t.translate(\"No description yet\");\n\n      this.settingsDialog.description = '';\n      this.settingsDialog.setOpen(true);\n    }\n  }, {\n    key: \"deleteStudy\",\n    value: function deleteStudy(study) {\n      var _this3 = this;\n\n      var sd = study.sd;\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_7__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_7__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_7__[\"LogActions\"].Indicator, \"Remove \".concat(sd.name));\n\n      if (!sd.permanent) {\n        // Need to run this in the nextTick because the study legend can be removed by this click\n        // causing the underlying chart to receive the mousedown (on IE win7)\n        setTimeout(function () {\n          CIQ.Studies.removeStudy(_this3.stx, sd);\n\n          _this3.renderLegend();\n        }, 0);\n      }\n    }\n  }, {\n    key: \"updateStudy\",\n    value: function updateStudy(study, items) {\n      var updates = {};\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _step$value = _step.value,\n              id = _step$value.id,\n              category = _step$value.category,\n              value = _step$value.value,\n              type = _step$value.type;\n          var isChanged = void 0;\n\n          if (type === 'numbercolorpicker') {\n            isChanged = study[category][\"\".concat(id, \"Color\")] !== value.Color || study[category][\"\".concat(id, \"Value\")] !== value.Value;\n          } else {\n            isChanged = study[category][id] !== value;\n          }\n\n          if (isChanged) {\n            updates[category] = updates[category] || {};\n\n            if (_typeof(value) === 'object') {\n              for (var suffix in value) {\n                updates[category][\"\".concat(id).concat(suffix)] = value[suffix];\n              }\n            } else {\n              updates[category][id] = value;\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (Object.keys(updates).length === 0) return;\n      this.helper.updateStudy(updates);\n      this.updateActiveStudies();\n      this.stx.draw();\n      this.changeStudyPanelTitle(this.helper.sd);\n      this.settingsDialog.title = t.translate(this.helper.sd.libraryEntry.name);\n    }\n  }, {\n    key: \"changeStudyPanelTitle\",\n    value: function changeStudyPanelTitle(sd) {\n      // Remove numbers from the end of indicator titles in mobile\n      if (this.mainStore.chart.isMobile) {\n        this.stx.panels[sd.panel].display = sd.type;\n        this.stx.draw();\n        this.mainStore.state.saveLayout();\n      }\n    }\n  }, {\n    key: \"shouldRenderLegend\",\n    value: function shouldRenderLegend() {\n      var stx = this.stx;\n\n      if (!stx.layout.studies) {\n        return false;\n      } // Logic to determine if the studies have changed, otherwise don't re-create the legend\n\n\n      if (CIQ.objLength(this.previousStudies) === CIQ.objLength(stx.layout.studies)) {\n        var foundAChange = false;\n\n        for (var id in stx.layout.studies) {\n          if (!this.previousStudies[id]) {\n            foundAChange = true;\n            break;\n          }\n        }\n\n        if (!foundAChange) {\n          return false;\n        }\n      }\n\n      this.previousStudies = CIQ.shallowClone(stx.layout.studies);\n      return true;\n    }\n    /**\n     * Gets called continually in the draw animation loop.\n     * Be careful not to render unnecessarily. */\n\n  }, {\n    key: \"setReachedLimit\",\n    value: function setReachedLimit() {\n      var hasReachedLimit = this.activeStudies.data.length >= 5;\n      this.hasReachedLimits = hasReachedLimit;\n    }\n  }, {\n    key: \"updateActiveStudies\",\n    value: function updateActiveStudies() {\n      var _this4 = this;\n\n      var stx = this.stx;\n      var studies = [];\n      Object.keys(stx.layout.studies || []).forEach(function (id) {\n        var sd = stx.layout.studies[id];\n\n        if (sd.customLegend) {\n          return;\n        }\n\n        studies.push({\n          enabled: true,\n          display: _this4.mainStore.chart.isMobile ? t.translate(sd.libraryEntry.name) : sd.inputs.display,\n          dataObject: {\n            stx: stx,\n            sd: sd,\n            inputs: sd.inputs,\n            outputs: sd.outputs,\n            parameters: sd.parameters\n          }\n        });\n      });\n      this.activeStudies.data = studies;\n      this.activeStudies.categoryNamePostfix = \"(\".concat(studies.length, \"/5)\");\n      this.setReachedLimit();\n    }\n  }, {\n    key: \"clearStudies\",\n    value: function clearStudies() {\n      if (this.context) {\n        this.context.advertised.Layout.clearStudies();\n      }\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.context.stx;\n    }\n  }, {\n    key: \"categorizedStudies\",\n    get: function get() {\n      var _this5 = this;\n\n      var data = [];\n      Object.keys(CIQ.Studies.studyLibrary).forEach(function (studyId) {\n        if (!_this5.excludedStudies[studyId]) {\n          var study = CIQ.Studies.studyLibrary[studyId];\n          data.push({\n            enabled: true,\n            display: t.translate(study.name),\n            dataObject: studyId,\n            itemId: studyId\n          });\n        }\n      });\n      var categoryNamePostfix = \"(\".concat(this.activeStudies.data.length, \"/5)\");\n      var category = {\n        categoryName: t.translate('Indicators'),\n        categoryNamePostfix: categoryNamePostfix,\n        categoryNamePostfixShowIfActive: true,\n        categoryId: 'indicators',\n        categorySubtitle: t.translate('Up to 5 active indicators allowed.'),\n        hasSubcategory: false,\n        data: data\n      };\n      return [category];\n    }\n  }]);\n\n  return StudyLegendStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"hasReachedLimits\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"activeStudies\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {\n      categoryName: t.translate('Active'),\n      categoryNamePostfix: '',\n      categoryId: 'active',\n      hasSubcategory: false,\n      emptyDescription: t.translate('There are no active indicators yet.'),\n      data: []\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"removeExtraStudies\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"removeExtraStudies\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onSelectItem\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"onSelectItem\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateStyle\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"updateStyle\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateProps\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"updateProps\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"editStudy\", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, \"editStudy\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"deleteStudy\", [_dec6], Object.getOwnPropertyDescriptor(_class.prototype, \"deleteStudy\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateStudy\", [_dec7], Object.getOwnPropertyDescriptor(_class.prototype, \"updateStudy\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setReachedLimit\", [_dec8], Object.getOwnPropertyDescriptor(_class.prototype, \"setReachedLimit\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateActiveStudies\", [_dec9], Object.getOwnPropertyDescriptor(_class.prototype, \"updateActiveStudies\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"clearStudies\", [_dec10], Object.getOwnPropertyDescriptor(_class.prototype, \"clearStudies\"), _class.prototype)), _class));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/store/TimeperiodStore.js\":\n/*!**************************************!*\\\n  !*** ./src/store/TimeperiodStore.js ***!\n  \\**************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(t) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TimeperiodStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MenuStore */ \"./src/store/MenuStore.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\n/* harmony import */ var _components_Menu_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Menu.jsx */ \"./src/components/Menu.jsx\");\n/* harmony import */ var _utils_ServerTime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/ServerTime */ \"./src/utils/ServerTime.js\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/ga */ \"./src/utils/ga.js\");\nvar _dec, _dec2, _dec3, _class, _descriptor, _descriptor2, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\n\n\n\n\n\n\nvar TimeperiodStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function TimeperiodStore(mainStore) {\n    var _this = this;\n\n    _classCallCheck(this, TimeperiodStore);\n\n    _initializerDefineProperty(this, \"timeUnit\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"interval\", _descriptor2, this);\n\n    this.onGranularityChange = function () {\n      return null;\n    };\n\n    this.remain = null;\n\n    this.onContextReady = function () {\n      var _this$context$stx$lay = _this.context.stx.layout,\n          timeUnit = _this$context$stx$lay.timeUnit,\n          interval = _this$context$stx$lay.interval;\n      _this.timeUnit = Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"getTimeUnit\"])({\n        timeUnit: timeUnit,\n        interval: interval\n      });\n      _this.interval = interval;\n\n      _this.updateCountdown();\n\n      Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"reaction\"])(function () {\n        return [_this.timeUnit, _this.interval, _this.mainStore.chartSetting.countdown, _this.mainStore.chartType.type];\n      }, _this.updateCountdown.bind(_this));\n\n      _this.context.stx.addEventListener('newChart', _this.updateDisplay);\n\n      Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"reaction\"])(function () {\n        return _this.mainStore.state.granularity;\n      }, function (granularity) {\n        return _this.onGranularityChange(granularity);\n      });\n    };\n\n    this.countdownInterval = null;\n    this.mainStore = mainStore;\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"when\"])(function () {\n      return _this.context;\n    }, this.onContextReady);\n    this.menu = new _MenuStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"](mainStore, {\n      route: 'time-period'\n    });\n    this.TimePeriodMenu = this.menu.connect(_components_Menu_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n    this._serverTime = _utils_ServerTime__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getInstance();\n  }\n\n  _createClass(TimeperiodStore, [{\n    key: \"clearCountdown\",\n    value: function clearCountdown() {\n      if (this.countdownInterval) {\n        clearInterval(this.countdownInterval);\n      }\n\n      if (this._injectionId) {\n        this.context.stx.removeInjection(this._injectionId);\n      }\n\n      this._injectionId = undefined;\n      this.countdownInterval = undefined;\n      this.context.stx.draw();\n    }\n  }, {\n    key: \"updateCountdown\",\n    value: function updateCountdown() {\n      var _this2 = this;\n\n      var stx = this.context.stx;\n      this.remain = null;\n      this.clearCountdown();\n\n      var setRemain = function setRemain() {\n        if (stx.isDestroyed || _this2.isTick) {\n          _this2.clearCountdown();\n\n          return;\n        }\n\n        var dataSet = stx.chart.dataSet;\n\n        if (dataSet && dataSet.length !== 0) {\n          var now = _this2._serverTime.getUTCDate();\n\n          var diff = now - dataSet[dataSet.length - 1].DT;\n          _this2.remain = Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"displayMilliseconds\"])(Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"getIntervalInSeconds\"])(stx.layout) * 1000 - diff);\n          stx.draw();\n        }\n      };\n\n      var isCountdownChart = !this.mainStore.chartType.isAggregateChart;\n      var hasCountdown = this.mainStore.chartSetting.countdown && !this.isTick && isCountdownChart;\n\n      if (hasCountdown) {\n        if (!this._injectionId) {\n          this._injectionId = stx.append('draw', function () {\n            if (_this2.isTick) {\n              _this2.clearCountdown();\n\n              return;\n            }\n\n            if (_this2.remain && stx.currentQuote() !== null) {\n              stx.yaxisLabelStyle = 'rect';\n              stx.labelType = 'countdown';\n              stx.createYAxisLabel(stx.chart.panel, _this2.remain, _this2.remainLabelY, '#15212d', '#FFFFFF');\n              stx.labelType = undefined;\n              stx.yaxisLabelStyle = 'roundRect';\n            }\n          });\n        }\n\n        if (!this.countdownInterval) {\n          this.countdownInterval = setInterval(setRemain, 1000);\n          setRemain();\n        }\n      }\n    }\n  }, {\n    key: \"setGranularity\",\n    value: function setGranularity(granularity) {\n      if (this.mainStore.state.granularity !== undefined) {\n        console.error('Setting granularity does nothing since granularity prop is set. Consider overriding the onChange prop in <TimePeriod />');\n        return;\n      }\n\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_5__[\"LogActions\"].Interval, granularity.toString());\n      this.mainStore.chart.changeSymbol(undefined, granularity);\n    }\n  }, {\n    key: \"updateProps\",\n    value: function updateProps(onChange) {\n      if (this.mainStore.state.granularity !== undefined) {\n        this.onGranularityChange = onChange;\n      }\n    }\n  }, {\n    key: \"updateDisplay\",\n    value: function updateDisplay() {\n      var stx = this.context.stx;\n      this.timeUnit = Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"getTimeUnit\"])(stx.layout);\n      this.interval = stx.layout.interval;\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"loader\",\n    get: function get() {\n      return this.mainStore.loader;\n    }\n  }, {\n    key: \"isTick\",\n    get: function get() {\n      return this.timeUnit === 'tick';\n    }\n  }, {\n    key: \"remainLabelY\",\n    get: function get() {\n      var stx = this.context.stx;\n      var topPos = 36;\n      var labelHeight = 24;\n      var bottomPos = 66;\n      var y = stx.chart.currentPriceLabelY + labelHeight;\n\n      if (stx.chart.currentPriceLabelY > stx.chart.panel.bottom - bottomPos) {\n        y = stx.chart.panel.bottom - bottomPos;\n        y = y < stx.chart.currentPriceLabelY - labelHeight ? y : stx.chart.currentPriceLabelY - labelHeight;\n      } else if (stx.chart.currentPriceLabelY < stx.chart.panel.top) {\n        y = topPos;\n      }\n\n      return y;\n    }\n  }, {\n    key: \"timeUnit_display\",\n    get: function get() {\n      if (!this.timeUnit) {\n        return;\n      } // Convert to camel case:\n\n\n      return t.translate(this.timeUnit.replace(/(\\w)/, function (str) {\n        return str.toUpperCase();\n      }));\n    }\n  }, {\n    key: \"interval_display\",\n    get: function get() {\n      if (this.interval % 60 === 0) {\n        return this.interval / 60;\n      }\n\n      return +this.interval ? this.interval : 1;\n    }\n  }, {\n    key: \"display\",\n    get: function get() {\n      var t = this.timeUnit ? this.timeUnit[0] : '';\n      return this.interval_display + t; // 1d, 1t, 5m, 2h\n    }\n  }]);\n\n  return TimeperiodStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"timeUnit\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"interval\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"setGranularity\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"setGranularity\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateProps\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"updateProps\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateDisplay\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"updateDisplay\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"remainLabelY\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"remainLabelY\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"timeUnit_display\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"timeUnit_display\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"interval_display\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"interval_display\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"display\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]], Object.getOwnPropertyDescriptor(_class.prototype, \"display\"), _class.prototype)), _class));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./src/Translation.js */ \"./src/Translation.js\")[\"t\"]))\n\n/***/ }),\n\n/***/ \"./src/store/ViewStore.js\":\n/*!********************************!*\\\n  !*** ./src/store/ViewStore.js ***!\n  \\********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ViewStore; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"mobx\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mobx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"./src/utils/index.js\");\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MenuStore */ \"./src/store/MenuStore.js\");\n/* harmony import */ var _components_Menu_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Menu.jsx */ \"./src/components/Menu.jsx\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/ga */ \"./src/utils/ga.js\");\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _init, _descriptor, _descriptor2, _descriptor3, _class2, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.'); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\n\n\n\n\n\nvar ViewStore = (_dec = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec2 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec3 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec4 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec5 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec6 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec7 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, _dec8 = mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"].bound, (_class = (_temp = _class2 =\n/*#__PURE__*/\nfunction () {\n  function ViewStore(mainStore) {\n    _classCallCheck(this, ViewStore);\n\n    _initializerDefineProperty(this, \"templateName\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"currentRoute\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"routes\", _descriptor3, this);\n\n    this.inputRef = function (ref) {\n      if (ref) {\n        ref.focus();\n      }\n    };\n\n    this.mainStore = mainStore;\n    this.menu = new _MenuStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"](mainStore, {\n      route: 'templates'\n    });\n    this.ViewsMenu = this.menu.connect(_components_Menu_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n  }\n\n  _createClass(ViewStore, [{\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.templateName = e.target.value;\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      if (e.keyCode === 13) {\n        this.saveViews();\n        Object(_utils_ga__WEBPACK_IMPORTED_MODULE_4__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_4__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_4__[\"LogActions\"].Template, 'Save Template');\n      }\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.templateName = '';\n      this.updateRoute('main');\n    }\n  }, {\n    key: \"updateRoute\",\n    value: function updateRoute(name) {\n      this.currentRoute = name;\n    }\n  }, {\n    key: \"saveViews\",\n    value: function saveViews() {\n      var _this = this;\n\n      if (ViewStore.views.some(function (x) {\n        return x.name.toLowerCase() === _this.templateName.toLowerCase();\n      })) {\n        this.updateRoute('overwrite');\n      } else if (this.templateName.length > 0) {\n        this.updateRoute('main');\n        var layout = this.stx.exportLayout();\n        ViewStore.views.push({\n          name: this.templateName,\n          layout: layout\n        });\n        ViewStore.updateLocalStorage();\n        this.templateName = '';\n      }\n    }\n  }, {\n    key: \"overwrite\",\n    value: function overwrite() {\n      var _this2 = this;\n\n      var layout = this.stx.exportLayout();\n      var templateIndex = ViewStore.views.findIndex(function (x) {\n        return x.name.toLowerCase() === _this2.templateName.toLowerCase();\n      });\n      ViewStore.views[templateIndex].layout = layout;\n      ViewStore.views[templateIndex].name = this.templateName;\n      ViewStore.updateLocalStorage();\n      this.updateRoute('main');\n      this.templateName = '';\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(idx, e) {\n      ViewStore.views = ViewStore.views.filter(function (x, index) {\n        return idx !== index;\n      });\n      e.nativeEvent.is_item_removed = true;\n      ViewStore.updateLocalStorage();\n      Object(_utils_ga__WEBPACK_IMPORTED_MODULE_4__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_4__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_4__[\"LogActions\"].Template, 'Remove Template');\n    }\n  }, {\n    key: \"applyLayout\",\n    value: function applyLayout(idx, e) {\n      var _this3 = this;\n\n      if (e.nativeEvent.is_item_removed) {\n        return;\n      }\n\n      if (this.loader) {\n        this.loader.show();\n      }\n\n      this.mainStore.state.setChartIsReady(false);\n      var stx = this.stx;\n      var granularity = Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"getIntervalInSeconds\"])(ViewStore.views[idx].layout);\n      this.mainStore.timeperiod.onGranularityChange(granularity);\n\n      var importLayout = function importLayout() {\n        var finishImportLayout = function finishImportLayout() {\n          stx.changeOccurred('layout');\n\n          _this3.mainStore.studies.updateActiveStudies();\n\n          if (_this3.loader) {\n            _this3.loader.hide();\n          }\n\n          _this3.mainStore.state.setChartIsReady(true);\n        };\n\n        stx.importLayout(ViewStore.views[idx].layout, {\n          managePeriodicity: true,\n          preserveTicksAndCandleWidth: true,\n          cb: finishImportLayout\n        }); // This condition is to make spline chart appear as spline chart\n        // Both line chart and spline chart are of type mountain but with different tensions\n\n        var chartType = ViewStore.views[idx].layout.chartType;\n\n        if (chartType === 'mountain') {\n          var tension = ViewStore.views[idx].layout.tension;\n\n          if (tension === 0.5) {\n            chartType = 'spline';\n          }\n        }\n\n        _this3.mainStore.chartType.setType(chartType);\n\n        _this3.mainStore.state.setChartType(chartType);\n\n        _this3.menu.setOpen(false);\n\n        Object(_utils_ga__WEBPACK_IMPORTED_MODULE_4__[\"logEvent\"])(_utils_ga__WEBPACK_IMPORTED_MODULE_4__[\"LogCategories\"].ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_4__[\"LogActions\"].Template, 'Load Template');\n      };\n\n      setTimeout(importLayout, 100);\n    }\n  }, {\n    key: \"context\",\n    get: function get() {\n      return this.mainStore.chart.context;\n    }\n  }, {\n    key: \"stx\",\n    get: function get() {\n      return this.context.stx;\n    }\n  }, {\n    key: \"loader\",\n    get: function get() {\n      return this.mainStore.loader;\n    }\n  }], [{\n    key: \"updateLocalStorage\",\n    value: function updateLocalStorage() {\n      CIQ.localStorageSetItem('cq-views', JSON.stringify(ViewStore.views));\n    }\n  }]);\n\n  return ViewStore;\n}(), _class2.views = Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"createObjectFromLocalStorage\"])('cq-views') || [], _temp), (_applyDecoratedDescriptor(_class, \"views\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], (_init = Object.getOwnPropertyDescriptor(_class, \"views\"), _init = _init ? _init.value : undefined, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  initializer: function initializer() {\n    return _init;\n  }\n}), _class), _descriptor = _applyDecoratedDescriptor(_class.prototype, \"templateName\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"currentRoute\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 'main';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"routes\", [mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"]], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this4 = this;\n\n    return {\n      add: function add() {\n        return _this4.saveViews();\n      },\n      main: function main() {\n        return _this4.updateRoute('add');\n      },\n      cancel: function cancel() {\n        return _this4.onCancel();\n      },\n      overwrite: function overwrite() {\n        return _this4.overwrite();\n      }\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"onChange\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"onChange\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onSubmit\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"onSubmit\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onCancel\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"onCancel\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateRoute\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"updateRoute\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"saveViews\", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, \"saveViews\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"overwrite\", [_dec6], Object.getOwnPropertyDescriptor(_class.prototype, \"overwrite\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"remove\", [_dec7], Object.getOwnPropertyDescriptor(_class.prototype, \"remove\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"applyLayout\", [_dec8], Object.getOwnPropertyDescriptor(_class.prototype, \"applyLayout\"), _class.prototype)), _class));\n\n\n/***/ }),\n\n/***/ \"./src/store/index.js\":\n/*!****************************!*\\\n  !*** ./src/store/index.js ***!\n  \\****************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MainStore; });\n/* harmony import */ var _BottomWidgetsContainerStore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BottomWidgetsContainerStore */ \"./src/store/BottomWidgetsContainerStore.js\");\n/* harmony import */ var _TimeperiodStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TimeperiodStore */ \"./src/store/TimeperiodStore.js\");\n/* harmony import */ var _ChartStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ChartStore */ \"./src/store/ChartStore.js\");\n/* harmony import */ var _ChartTypeStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ChartTypeStore */ \"./src/store/ChartTypeStore.js\");\n/* harmony import */ var _StudyLegendStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./StudyLegendStore */ \"./src/store/StudyLegendStore.js\");\n/* harmony import */ var _ComparisonStore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ComparisonStore */ \"./src/store/ComparisonStore.js\");\n/* harmony import */ var _DrawToolsStore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./DrawToolsStore */ \"./src/store/DrawToolsStore.js\");\n/* harmony import */ var _ChartTitleStore__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ChartTitleStore */ \"./src/store/ChartTitleStore.js\");\n/* harmony import */ var _AssetInformationStore__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./AssetInformationStore */ \"./src/store/AssetInformationStore.js\");\n/* harmony import */ var _ComparisonListStore__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ComparisonListStore */ \"./src/store/ComparisonListStore.js\");\n/* harmony import */ var _ViewStore__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ViewStore */ \"./src/store/ViewStore.js\");\n/* harmony import */ var _CrosshairStore__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./CrosshairStore */ \"./src/store/CrosshairStore.js\");\n/* harmony import */ var _ShareStore__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ShareStore */ \"./src/store/ShareStore.js\");\n/* harmony import */ var _ChartSettingStore__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./ChartSettingStore */ \"./src/store/ChartSettingStore.js\");\n/* harmony import */ var _LoaderStore__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./LoaderStore */ \"./src/store/LoaderStore.js\");\n/* harmony import */ var _FavoriteStore__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./FavoriteStore */ \"./src/store/FavoriteStore.js\");\n/* harmony import */ var _ChartSizeStore__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./ChartSizeStore */ \"./src/store/ChartSizeStore.js\");\n/* harmony import */ var _RoutingStore__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./RoutingStore */ \"./src/store/RoutingStore.js\");\n/* harmony import */ var _CurrentSpotStore__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./CurrentSpotStore */ \"./src/store/CurrentSpotStore.js\");\n/* harmony import */ var _DrawingCursorStore__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./DrawingCursorStore */ \"./src/store/DrawingCursorStore.js\");\n/* harmony import */ var _ChartState__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./ChartState */ \"./src/store/ChartState.js\");\n/* harmony import */ var _Notifier__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./Notifier */ \"./src/store/Notifier.js\");\n/* harmony import */ var _ChartTableStore__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./ChartTableStore */ \"./src/store/ChartTableStore.js\");\n/* harmony import */ var _LastDigitStatsStore__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./LastDigitStatsStore */ \"./src/store/LastDigitStatsStore.js\");\n/* harmony import */ var _NavigationWidgetStore__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./NavigationWidgetStore */ \"./src/store/NavigationWidgetStore.js\");\n/* harmony import */ var _HighestLowestStore__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./HighestLowestStore */ \"./src/store/HighestLowestStore.js\");\n/* harmony import */ var _PaginationLoaderStore__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./PaginationLoaderStore */ \"./src/store/PaginationLoaderStore.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar MainStore = function MainStore() {\n  _classCallCheck(this, MainStore);\n\n  this.notifier = new _Notifier__WEBPACK_IMPORTED_MODULE_21__[\"default\"]();\n  this.favorites = _FavoriteStore__WEBPACK_IMPORTED_MODULE_15__[\"default\"].getInstance();\n  this.chart = new _ChartStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this);\n  this.state = new _ChartState__WEBPACK_IMPORTED_MODULE_20__[\"default\"](this);\n  this.chartType = new _ChartTypeStore__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\n  this.studies = new _StudyLegendStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this);\n  this.comparison = new _ComparisonStore__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this);\n  this.drawTools = new _DrawToolsStore__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this);\n  this.chartTitle = new _ChartTitleStore__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this);\n  this.timeperiod = new _TimeperiodStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this);\n  this.assetInformation = new _AssetInformationStore__WEBPACK_IMPORTED_MODULE_8__[\"default\"](this);\n  this.comparisonList = new _ComparisonListStore__WEBPACK_IMPORTED_MODULE_9__[\"default\"](this);\n  this.view = new _ViewStore__WEBPACK_IMPORTED_MODULE_10__[\"default\"](this);\n  this.crosshair = new _CrosshairStore__WEBPACK_IMPORTED_MODULE_11__[\"default\"](this);\n  this.share = new _ShareStore__WEBPACK_IMPORTED_MODULE_12__[\"default\"](this);\n  this.chartSetting = new _ChartSettingStore__WEBPACK_IMPORTED_MODULE_13__[\"default\"](this);\n  this.loader = new _LoaderStore__WEBPACK_IMPORTED_MODULE_14__[\"default\"]();\n  this.chartSize = new _ChartSizeStore__WEBPACK_IMPORTED_MODULE_16__[\"default\"](this);\n  this.routing = new _RoutingStore__WEBPACK_IMPORTED_MODULE_17__[\"default\"](this);\n  this.currentSpot = new _CurrentSpotStore__WEBPACK_IMPORTED_MODULE_18__[\"default\"](this);\n  this.drawingCursor = new _DrawingCursorStore__WEBPACK_IMPORTED_MODULE_19__[\"default\"](this);\n  this.chartTable = new _ChartTableStore__WEBPACK_IMPORTED_MODULE_22__[\"default\"](this);\n  this.lastDigitStats = new _LastDigitStatsStore__WEBPACK_IMPORTED_MODULE_23__[\"default\"](this);\n  this.bottomWidgetsContainer = new _BottomWidgetsContainerStore__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this);\n  this.navigationWidget = new _NavigationWidgetStore__WEBPACK_IMPORTED_MODULE_24__[\"default\"](this);\n  this.highestLowest = new _HighestLowestStore__WEBPACK_IMPORTED_MODULE_25__[\"default\"](this);\n  this.paginationLoader = new _PaginationLoaderStore__WEBPACK_IMPORTED_MODULE_26__[\"default\"](this);\n};\n\n\n\n/***/ }),\n\n/***/ \"./src/utils/PendingPromise.js\":\n/*!*************************************!*\\\n  !*** ./src/utils/PendingPromise.js ***!\n  \\*************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PendingPromise; });\nfunction PendingPromise() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var resolve;\n  var reject;\n  var promise = new Promise(function (_resolve, _reject) {\n    resolve = _resolve;\n    reject = _reject;\n  });\n\n  promise.resolve = function (res) {\n    promise.isPending = false;\n    resolve(res);\n  };\n\n  promise.reject = function (error) {\n    promise.isPending = false;\n    reject(error);\n  };\n\n  promise.data = data;\n  return promise;\n}\n\n/***/ }),\n\n/***/ \"./src/utils/ServerTime.js\":\n/*!*********************************!*\\\n  !*** ./src/utils/ServerTime.js ***!\n  \\*********************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ \"./src/utils/index.js\");\n/* harmony import */ var _PendingPromise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PendingPromise */ \"./src/utils/PendingPromise.js\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar ServerTime =\n/*#__PURE__*/\nfunction () {\n  function ServerTime() {\n    var _this = this;\n\n    _classCallCheck(this, ServerTime);\n\n    this.clockStarted = false;\n    this.clockStartedPromise = new _PendingPromise__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n\n    this._timeResponse = function (response) {\n      if (response.error) {\n        _this.clockStarted = false;\n      }\n\n      if (!_this.clockStarted) {\n        _this.init();\n\n        return;\n      }\n\n      var serverTime = response.time;\n      var clientTimeAtResponse = Object(_index__WEBPACK_IMPORTED_MODULE_0__[\"getUTCEpoch\"])(new Date());\n      _this.serverTimeAtResponse = serverTime + (clientTimeAtResponse - _this.clientTimeAtRequest) / 2;\n\n      var updateTime = function updateTime() {\n        _this.serverTimeAtResponse += 1;\n      };\n\n      clearInterval(_this.updateTimeInterval);\n      _this.updateTimeInterval = setInterval(updateTime, 1000);\n    };\n  }\n\n  _createClass(ServerTime, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(api) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this._api = api;\n\n                if (this.clockStarted) {\n                  _context.next = 9;\n                  break;\n                }\n\n                this.clockStarted = true;\n                clearInterval(this.getTimeInterval);\n                _context.next = 6;\n                return this.requestTime();\n\n              case 6:\n                this.getTimeInterval = setInterval(this.requestTime.bind(this), 30000);\n                _context.next = 10;\n                break;\n\n              case 9:\n                return _context.abrupt(\"return\", this.clockStartedPromise);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"requestTime\",\n    value: function () {\n      var _requestTime = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.clientTimeAtRequest = Object(_index__WEBPACK_IMPORTED_MODULE_0__[\"getUTCEpoch\"])(new Date());\n                _context2.next = 3;\n                return this._api.getServerTime().then(this._timeResponse);\n\n              case 3:\n                this.clockStartedPromise.resolve();\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function requestTime() {\n        return _requestTime.apply(this, arguments);\n      }\n\n      return requestTime;\n    }()\n  }, {\n    key: \"getEpoch\",\n    value: function getEpoch() {\n      if (this.serverTimeAtResponse) {\n        return this.serverTimeAtResponse;\n      }\n\n      throw new Error('Server time is undefined!');\n    }\n  }, {\n    key: \"getLocalDate\",\n    value: function getLocalDate() {\n      return Object(_index__WEBPACK_IMPORTED_MODULE_0__[\"getLocalDate\"])(this.getEpoch());\n    }\n  }, {\n    key: \"getUTCDate\",\n    value: function getUTCDate() {\n      return CIQ.strToDateTime(Object(_index__WEBPACK_IMPORTED_MODULE_0__[\"getUTCDate\"])(this.getEpoch()));\n    }\n  }], [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (!this._instance) {\n        this._instance = new ServerTime();\n      }\n\n      return this._instance;\n    }\n  }]);\n\n  return ServerTime;\n}();\n\nServerTime._instance = void 0;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ServerTime);\n\n/***/ }),\n\n/***/ \"./src/utils/ga.js\":\n/*!*************************!*\\\n  !*** ./src/utils/ga.js ***!\n  \\*************************/\n/*! exports provided: LogCategories, LogActions, initGA, logPageView, logEvent */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LogCategories\", function() { return LogCategories; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LogActions\", function() { return LogActions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initGA\", function() { return initGA; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"logPageView\", function() { return logPageView; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"logEvent\", function() { return logEvent; });\nvar LogCategories = Object.freeze({\n  ChartTitle: 'Chart Title',\n  CategoricalDisplay: 'Categorical Display',\n  ChartControl: 'Chart Control'\n});\nvar LogActions = Object.freeze({\n  MarketSelector: 'Market Selector',\n  Favorite: 'Favorite',\n  ChartSetting: 'Chart Setting',\n  ChartSize: 'Chart Size',\n  ChartType: 'Chart Type',\n  Comparison: 'Comparison',\n  DrawTools: 'Draw Tools',\n  Download: 'Download',\n  Indicator: 'Indicator',\n  Interval: 'Interval',\n  Template: 'Template'\n});\n/* eslint-disable */\n\nfunction initGA() {}\nfunction logPageView() {}\nfunction logEvent(category, action, label) {}\n\n/***/ }),\n\n/***/ \"./src/utils/index.js\":\n/*!****************************!*\\\n  !*** ./src/utils/index.js ***!\n  \\****************************/\n/*! exports provided: createObjectFromLocalStorage, isValidProp, getTimeUnit, getIntervalInSeconds, stableSort, sameBar, downloadFileInBrowser, stxtap, getUTCEpoch, getUTCDate, getLocalDate, updatePropIfChanged, calculateTimeUnitInterval, calculateGranularity, displayMilliseconds, cloneCategory, cloneCategories, patchPixelFromChart, ARROW_HEIGHT, ARROW_COLORS, DIRECTIONS */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createObjectFromLocalStorage\", function() { return createObjectFromLocalStorage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isValidProp\", function() { return isValidProp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTimeUnit\", function() { return getTimeUnit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getIntervalInSeconds\", function() { return getIntervalInSeconds; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stableSort\", function() { return stableSort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sameBar\", function() { return sameBar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"downloadFileInBrowser\", function() { return downloadFileInBrowser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stxtap\", function() { return stxtap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUTCEpoch\", function() { return getUTCEpoch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUTCDate\", function() { return getUTCDate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLocalDate\", function() { return getLocalDate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updatePropIfChanged\", function() { return updatePropIfChanged; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calculateTimeUnitInterval\", function() { return calculateTimeUnitInterval; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calculateGranularity\", function() { return calculateGranularity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"displayMilliseconds\", function() { return displayMilliseconds; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cloneCategory\", function() { return cloneCategory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cloneCategories\", function() { return cloneCategories; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"patchPixelFromChart\", function() { return patchPixelFromChart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ARROW_HEIGHT\", function() { return ARROW_HEIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ARROW_COLORS\", function() { return ARROW_COLORS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DIRECTIONS\", function() { return DIRECTIONS; });\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction createObjectFromLocalStorage(key) {\n  var val = localStorage.getItem(key);\n  var isValid = val !== null;\n\n  if (isValid) {\n    try {\n      return JSON.parse(val);\n    } catch (e) {\n      return undefined;\n    }\n  }\n\n  return undefined;\n}\nfunction isValidProp(p) {\n  return p !== undefined && !isNaN(p); // eslint-disable-line no-restricted-globals\n}\nvar getTimeUnit = function getTimeUnit(_ref) {\n  var timeUnit = _ref.timeUnit,\n      interval = _ref.interval;\n\n  if (timeUnit === null && interval === 'day') {\n    return 'day';\n  }\n\n  if (timeUnit === 'minute' && interval % 60 === 0) {\n    return 'hour';\n  }\n\n  if (timeUnit === 'second') {\n    return 'tick';\n  }\n\n  return timeUnit;\n};\nvar getIntervalInSeconds = function getIntervalInSeconds(_ref2) {\n  var timeUnit = _ref2.timeUnit,\n      interval = _ref2.interval;\n  var unit = timeUnit;\n  var interv = interval;\n\n  if (interv === 'day') {\n    unit = 86400;\n    interv = 1;\n  } else if (timeUnit === 'minute') {\n    unit = 60;\n  } else if (timeUnit === 'second') {\n    unit = 1;\n  }\n\n  return unit * interv;\n};\nfunction stableSort(arr) {\n  var compare = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (a, b) {\n    return a < b;\n  };\n  var original = arr.slice(0);\n  arr.sort(function (a, b) {\n    var result = compare(a, b);\n    return result === 0 ? original.indexOf(a) - original.indexOf(b) : result;\n  });\n  return arr;\n}\nfunction sameBar(bar1, bar2) {\n  return !(!bar1 || !bar2 || +bar1.DT !== +bar2.DT || bar1.Close !== bar2.Close || bar1.Open !== bar2.Open || bar1.Volume !== bar2.Volume);\n}\nfunction downloadFileInBrowser(filename, content, type, newTab) {\n  var blob = new Blob([content], {\n    type: type\n  });\n\n  if (navigator.msSaveBlob) {\n    // IE 10+\n    navigator.msSaveBlob(blob, filename);\n    return;\n  }\n\n  var url = type === 'image/png;' ? content : URL.createObjectURL(blob);\n  var link = document.createElement('a');\n\n  if (link.download !== undefined) {\n    // Browsers that support HTML5 download attribute\n    link.setAttribute('href', url);\n    link.setAttribute('download', filename);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    return;\n  }\n\n  if (newTab) {\n    if (type === 'image/png;') {\n      newTab.document.write(\"<iframe src=\\\"\".concat(url, \"\\\" frameborder=\\\"0\\\" style=\\\"border:0; top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%;\\\" allowfullscreen></iframe>\"));\n    } else {\n      var lines = content.split('\\n');\n\n      for (var i = 0; i < lines.length; i++) {\n        newTab.document.write(\"\".concat(lines[i], \"<br/>\"));\n      }\n    }\n  }\n}\nfunction stxtap(el, func) {\n  if (el && !el.safeClickTouchEvents) {\n    CIQ.installTapEvent(el);\n    el.addEventListener('stxtap', func);\n  }\n}\nfunction getUTCEpoch(date) {\n  return date.getTime() / 1000 - date.getTimezoneOffset() * 60 | 0;\n}\nfunction getUTCDate(epoch) {\n  var UTCdate = new Date(epoch * 1000).toISOString();\n  return UTCdate.substring(0, 19);\n}\nfunction getLocalDate(epoch) {\n  return new Date(epoch * 1000);\n}\nfunction updatePropIfChanged(source, props, onChanged) {\n  var isChanged = false;\n\n  for (var attr in props) {\n    if (props[attr] !== undefined && source[attr] !== props[attr]) {\n      source[attr] = props[attr];\n      isChanged = true;\n    }\n  }\n\n  if (isChanged && onChanged) {\n    onChanged();\n  }\n}\nfunction calculateTimeUnitInterval(granularity) {\n  var interval = 1;\n  var timeUnit = 'second';\n\n  if (granularity === 86400) {\n    timeUnit = 'day';\n  } else if (granularity > 59) {\n    interval = granularity / 60;\n    timeUnit = 'minute';\n  }\n\n  return {\n    interval: interval,\n    timeUnit: timeUnit\n  };\n}\nfunction calculateGranularity(period, interval) {\n  var toSeconds = {\n    second: 0,\n    minute: 60,\n    day: 24 * 60 * 60\n  };\n  return toSeconds[interval] * period;\n}\nfunction displayMilliseconds(ms) {\n  var totalSec = ms / 1000;\n\n  if (totalSec <= 0) {\n    return null;\n  }\n\n  var padNum = function padNum(n) {\n    return \"0\".concat(n).slice(-2);\n  };\n\n  var seconds = padNum(Math.trunc(totalSec % 60));\n  var minutes = padNum(Math.trunc(totalSec / 60 % 60));\n  var hours = Math.trunc(totalSec / 3600 % 24);\n  hours = hours ? \"\".concat(hours, \":\") : '';\n  return \"\".concat(hours).concat(minutes, \":\").concat(seconds);\n}\nfunction cloneCategory(category) {\n  var transformItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (x) {\n    return x;\n  };\n  var categoryData = [];\n\n  var categoryCopy = _objectSpread({}, category, {\n    data: categoryData\n  });\n\n  if (category.hasSubcategory) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = category.data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var subcategory = _step.value;\n        var subcategoryData = [];\n\n        var subcategoryCopy = _objectSpread({}, subcategory, {\n          data: subcategoryData\n        });\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = subcategory.data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var item = _step2.value;\n            subcategoryData.push(transformItem(item));\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        categoryData.push(subcategoryCopy);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  } else {\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = category.data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var _item = _step3.value;\n        categoryData.push(transformItem(_item));\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n          _iterator3[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n  }\n\n  return categoryCopy;\n}\nfunction cloneCategories(categories) {\n  var transformItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (x) {\n    return x;\n  };\n  var categorized = [];\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = categories[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var category = _step4.value;\n      categorized.push(cloneCategory(category, transformItem));\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n        _iterator4[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return categorized;\n} // Get a raw callback with underlying canvas2dcontext\n// This component is used to render directly into the chart canvas.\n//\n// Props:\n//\n//  - epoch_array: array of epoch values to get coordinates for.\n//  - price_array: array of price values to get y-coordinates for.\n//  - draw_callback: called on every frame with ({ctx, points, prices}).\n//  -- points will be an array of [{left, top, epoch}] in pixels.\n//  -- ctx is the Context2dDrawingContext\n// Unfortunately chartiq.js does a Math.floor() on pixel values,\n// Which causes a jerky effect on the markers in auto-scroll,\n// However we need the pixel value down to the decimal points.\n// This is copy from chartiq.js file WITHOUT rounding down the pixel value.\n\nfunction patchPixelFromChart(stx) {\n  stx.pixelFromTick = function (tick, _chart) {\n    var chart = _chart || stx.chart;\n    var dataSegment = chart.dataSegment,\n        dataSet = chart.dataSet,\n        segmentImage = chart.segmentImage,\n        mp = stx.micropixels,\n        length = dataSegment ? dataSegment.length : 0;\n    var panel = chart.panel,\n        scroll = chart.scroll;\n    var bar = tick - dataSet.length + scroll;\n    var quote = length ? dataSegment[bar] : null;\n    if (segmentImage) quote = segmentImage[bar];\n\n    if (quote && quote.leftOffset) {\n      // return Math.floor(panel.left + quote.leftOffset + mp)\n      return panel.left + quote.leftOffset + mp;\n    }\n\n    var rightOffset = 0,\n        dsTicks = 0;\n    quote = length ? dataSegment[length - 1] : null;\n    if (segmentImage) quote = segmentImage[length - 1];\n\n    if (quote && quote.leftOffset) {\n      if (length < tick - dataSet.length + scroll) {\n        rightOffset = quote.leftOffset - quote.candleWidth / 2;\n        dsTicks = length;\n      }\n    } // return Math.floor(/* ... */)\n\n\n    return rightOffset + panel.left + (tick - dsTicks - dataSet.length + scroll + 0.5) * stx.layout.candleWidth + mp;\n  };\n}\nvar ARROW_HEIGHT = 39;\nvar ARROW_COLORS = Object.freeze({\n  GREEN: '#4bb4b3',\n  ORANGE: '#ff6444'\n});\nvar DIRECTIONS = Object.freeze({\n  UP: 'UP',\n  DOWN: 'DOWN'\n});\n\n/***/ }),\n\n/***/ \"./translation lazy recursive ^\\\\.\\\\/.*\\\\.po$\":\n/*!********************************************************!*\\\n  !*** ./translation lazy ^\\.\\/.*\\.po$ namespace object ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./de.po\": [\n\t\t\"./translation/de.po\",\n\t\t\"de-po\"\n\t],\n\t\"./es.po\": [\n\t\t\"./translation/es.po\",\n\t\t\"es-po\"\n\t],\n\t\"./fr.po\": [\n\t\t\"./translation/fr.po\",\n\t\t\"fr-po\"\n\t],\n\t\"./id.po\": [\n\t\t\"./translation/id.po\",\n\t\t\"id-po\"\n\t],\n\t\"./it.po\": [\n\t\t\"./translation/it.po\",\n\t\t\"it-po\"\n\t],\n\t\"./nl.po\": [\n\t\t\"./translation/nl.po\",\n\t\t\"nl-po\"\n\t],\n\t\"./pl.po\": [\n\t\t\"./translation/pl.po\",\n\t\t\"pl-po\"\n\t],\n\t\"./pt.po\": [\n\t\t\"./translation/pt.po\",\n\t\t\"pt-po\"\n\t],\n\t\"./ru.po\": [\n\t\t\"./translation/ru.po\",\n\t\t\"ru-po\"\n\t],\n\t\"./th.po\": [\n\t\t\"./translation/th.po\",\n\t\t\"th-po\"\n\t],\n\t\"./vi.po\": [\n\t\t\"./translation/vi.po\",\n\t\t\"vi-po\"\n\t],\n\t\"./zh_cn.po\": [\n\t\t\"./translation/zh_cn.po\",\n\t\t\"zh_cn-po\"\n\t],\n\t\"./zh_tw.po\": [\n\t\t\"./translation/zh_tw.po\",\n\t\t\"zh_tw-po\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./translation lazy recursive ^\\\\.\\\\/.*\\\\.po$\";\nmodule.exports = webpackAsyncContext;\n\n/***/ }),\n\n/***/ \"./translation/messages.pot\":\n/*!**********************************!*\\\n  !*** ./translation/messages.pot ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = {\" already exists.\":0,\"[symbol] feed is delayed by [delay] minutes\":1,\"[symbol] market is now opened.\":2,\"[symbol] market is presently closed.\":3,\"\\\"Mass Index\\\" or \\\"Doji Star\\\"\":4,\"Active\":5,\"Add new\":6,\"Annotation\":7,\"Asset Information\":8,\"Auto Scale\":9,\"Average Line\":10,\"Baseline\":11,\"Box Size\":12,\"C\":13,\"Callout\":14,\"Cancel\":15,\"CANCEL\":16,\"Candle\":17,\"Change\":18,\"Channel\":19,\"Chart data is not available for this symbol.\":20,\"Chart Table\":21,\"Chart types\":22,\"Clear All\":23,\"Close\":24,\"CLOSE\":25,\"CLOSED\":26,\"Color\":27,\"Colored Dot\":28,\"Comparison\":29,\"Continuous\":30,\"Countdown\":31,\"Crosshair\":32,\"Crossline\":33,\"Dark Mode\":34,\"Date\":35,\"Day\":36,\"Doodle\":37,\"Dot\":38,\"Download\":39,\"Download as CSV\":40,\"Download as PNG\":41,\"Download Chart\":42,\"Draw tools\":43,\"Ellipse\":44,\"Favorites\":45,\"Fib Arc\":46,\"Fib Fan\":47,\"Fib Retracement\":48,\"Fib Time Zone\":49,\"Gann Fan\":50,\"Gartley\":51,\"H\":52,\"Heikin Ashi\":53,\"High\":54,\"HIGH\":55,\"Historical Data Mode\":56,\"Hollow Candle\":57,\"Horizontal\":58,\"Hour\":59,\"Indicators\":60,\"Interval\":61,\"Kagi\":62,\"L\":63,\"Language\":64,\"Last digits stats for latest 1000 ticks on \":65,\"Line\":66,\"Line Break\":67,\"Low\":68,\"LOW\":69,\"Measure\":70,\"Minute\":71,\"O\":72,\"OHLC\":73,\"Open\":74,\"OPEN\":75,\"Opens in:\":76,\"OVERWRITE\":77,\"Pitchfork\":78,\"Point & Figure\":79,\"Position\":80,\"Price Lines\":81,\"Quadrant Lines\":82,\"Range\":83,\"Range Bars\":84,\"Ray\":85,\"Rectangle\":86,\"Regression Line\":87,\"Renko\":88,\"Reset\":89,\"Retrieving Chart Data...\":90,\"Retrieving Chart Engine...\":91,\"Retrieving Market Symbols...\":92,\"Retrieving Trading Times...\":93,\"Reversal\":94,\"Reversal Percentage\":95,\"right-click to delete\":96,\"right-click to manage\":97,\"Save\":98,\"Search...\":99,\"Segment\":100,\"Settings\":101,\"Shape - Arrow\":102,\"Shape - Check\":103,\"Shape - Cross\":104,\"Shape - Focus\":105,\"Shape - Heart\":106,\"Shape - Star\":107,\"Show Highest/Lowest Spot\":108,\"Size\":109,\"Speed Resistance Arc\":110,\"Speed Resistance Line\":111,\"Spline\":112,\"SPOT\":113,\"Streaming for [symbol] is not available due to license restrictions\":114,\"Table\":115,\"Template name\":116,\"Templates\":117,\"There are no active comparisons yet.\":118,\"There are no active indicators yet.\":119,\"There are no favorites yet.\":120,\"Tick\":121,\"Time Cycle\":122,\"Tirone Levels\":123,\"Underlying Assets\":124,\"Up to 5 active indicators allowed.\":125,\"Vertical\":126,\"Would you like to overwrite it?\":127,\"Zoom in\":128,\"Zoom out\":129,\"RSI\":130,\"Period\":131,\"Show Zones\":132,\"OverBought\":133,\"OverSold\":134,\"Moving Average\":135,\"Field\":136,\"Type\":137,\"Offset\":138,\"MA\":139,\"MACD\":140,\"Fast MA Period\":141,\"Slow MA Period\":142,\"Signal Period\":143,\"Signal\":144,\"Increasing Bar\":145,\"Decreasing Bar\":146,\"Stochastics\":147,\"Smooth\":148,\"Fast\":149,\"Slow\":150,\"Aroon\":151,\"Aroon Up\":152,\"Aroon Down\":153,\"Aroon Oscillator\":154,\"Linear Reg R2\":155,\"RSquared\":156,\"Linear Reg Forecast\":157,\"Forecast\":158,\"Linear Reg Intercept\":159,\"Intercept\":160,\"Time Series Forecast\":161,\"Vertical Horizontal Filter\":162,\"Result\":163,\"TRIX\":164,\"Standard Deviation\":165,\"Standard Deviations\":166,\"Moving Average Type\":167,\"Trade Volume Index\":168,\"Min Tick Value\":169,\"Swing Index\":170,\"Limit Move Value\":171,\"Accumulative Swing Index\":172,\"Price Rate of Change\":173,\"Volume Rate of Change\":174,\"Momentum Indicator\":175,\"Price Volume Trend\":176,\"Positive Volume Index\":177,\"Index\":178,\"Negative Volume Index\":179,\"On Balance Volume\":180,\"Stochastic Momentum Index\":181,\"%K Periods\":182,\"%K Smoothing Periods\":183,\"%K Double Smoothing Periods\":184,\"%D Periods\":185,\"%D Moving Average Type\":186,\"%K\":187,\"%D\":188,\"Historical Volatility\":189,\"Days Per Year\":190,\"Pretty Good Oscillator\":191,\"Ultimate Oscillator\":192,\"Cycle 1\":193,\"Cycle 2\":194,\"Cycle 3\":195,\"Volume Oscillator\":196,\"Short Cycle\":197,\"Long Cycle\":198,\"Points Or Percent\":199,\"Twiggs Money Flow\":200,\"Chaikin Money Flow\":201,\"Chaikin Volatility\":202,\"Rate Of Change\":203,\"Price Oscillator\":204,\"Ease of Movement\":205,\"Commodity Channel Index\":206,\"Detrended Price Oscillator\":207,\"True Range\":208,\"Average True Range\":209,\"ATR\":210,\"Ehler Fisher Transform\":211,\"EF\":212,\"EF Trigger\":213,\"Schaff Trend Cycle\":214,\"QStick\":215,\"Coppock Curve\":216,\"Short RoC\":217,\"Long RoC\":218,\"Chande Momentum Oscillator\":219,\"Chande Forecast Oscillator\":220,\"Intraday Momentum Index\":221,\"RAVI\":222,\"Random Walk Index\":223,\"Random Walk High\":224,\"Random Walk Low\":225,\"ADX/DMS\":226,\"Smoothing Period\":227,\"Series\":228,\"Shading\":229,\"Histogram\":230,\"+DI\":231,\"-DI\":232,\"ADX\":233,\"Positive Bar\":234,\"Negative Bar\":235,\"High Low Bands\":236,\"Shift Percentage\":237,\"Channel Fill\":238,\"High Low Top\":239,\"High Low Median\":240,\"High Low Bottom\":241,\"High Minus Low\":242,\"Median Price\":243,\"Moving Average Envelope\":244,\"Shift Type\":245,\"Shift\":246,\"MA Env Top\":247,\"MA Env Median\":248,\"MA Env Bottom\":249,\"Fractal Chaos Bands\":250,\"Fractal High\":251,\"Fractal Low\":252,\"Fractal Channel\":253,\"Fractal Chaos Oscillator\":254,\"Gopalakrishnan Range Index\":255,\"Prime Number Bands\":256,\"Prime Bands Top\":257,\"Prime Bands Bottom\":258,\"Prime Bands Channel\":259,\"Prime Number Oscillator\":260,\"Tolerance Percentage\":261,\"Bollinger Bands\":262,\"Bollinger Bands Top\":263,\"Bollinger Bands Median\":264,\"Bollinger Bands Bottom\":265,\"Donchian Channel\":266,\"High Period\":267,\"Low Period\":268,\"Donchian High\":269,\"Donchian Median\":270,\"Donchian Low\":271,\"Highest High Value\":272,\"Lowest Low Value\":273,\"Mass Index\":274,\"Bulge Threshold\":275,\"Keltner Channel\":276,\"Keltner Top\":277,\"Keltner Median\":278,\"Keltner Bottom\":279,\"Parabolic SAR\":280,\"Minimum AF\":281,\"Maximum AF\":282,\"Klinger Volume Oscillator\":283,\"Signal Periods\":284,\"Klinger\":285,\"KlingerSignal\":286,\"Elder Ray Index\":287,\"Elder Bull Power\":288,\"Elder Bear Power\":289,\"Elder Force Index\":290,\"Linear Reg Slope\":291,\"Slope\":292,\"Center Of Gravity\":293,\"Typical Price\":294,\"Weighted Close\":295,\"Money Flow Index\":296,\"Williams %R\":297,\"Accumulation/Distribution\":298,\"Use Volume\":299,\"Volume Chart\":300,\"Up Volume\":301,\"Down Volume\":302,\"Volume Underlay\":303,\"Valuation Lines\":304,\"Average Type\":305,\"Display Average\":306,\"Display 1 Standard Deviation (1σ)\":307,\"Display 2 Standard Deviation (2σ)\":308,\"Display 3 Standard Deviation (3σ)\":309,\"Average\":310,\"1 Standard Deviation (1σ)\":311,\"2 Standard Deviation (2σ)\":312,\"3 Standard Deviation (3σ)\":313,\"Correlation Coefficient\":314,\"Price Momentum Oscillator\":315,\"Double Smoothing Period\":316,\"PMO\":317,\"PMOSignal\":318,\"Relative Volatility\":319,\"STD Period\":320,\"Rel Vol\":321,\"Awesome Oscillator\":322,\"Market Facilitation Index\":323,\"Scale Factor\":324,\"Green\":325,\"Fade\":326,\"Fake\":327,\"Squat\":328,\"ATR Bands\":329,\"ATR Bands Top\":330,\"ATR Bands Bottom\":331,\"ATR Bands Channel\":332,\"STARC Bands\":333,\"MA Period\":334,\"Multiplier\":335,\"STARC Bands Top\":336,\"STARC Bands Median\":337,\"STARC Bands Bottom\":338,\"ATR Trailing Stops\":339,\"Plot Type\":340,\"HighLow\":341,\"Buy Stops\":342,\"Sell Stops\":343,\"Bollinger %b\":344,\"%b\":345,\"Bollinger Bandwidth\":346,\"Bandwidth\":347,\"Donchian Width\":348,\"Relative Vigor Index\":349,\"Rel Vig\":350,\"RelVigSignal\":351,\"Elder Impulse System\":352,\"Bullish\":353,\"Bearish\":354,\"Neutral\":355,\"Pivot Points\":356,\"Pivot\":357,\"Resistance 1\":358,\"Support 1\":359,\"Resistance 2\":360,\"Support 2\":361,\"Resistance 3\":362,\"Support 3\":363,\"VWAP\":364,\"Alligator\":365,\"Jaw Period\":366,\"Jaw Offset\":367,\"Teeth Period\":368,\"Teeth Offset\":369,\"Lips Period\":370,\"Lips Offset\":371,\"Show Fractals\":372,\"Jaw\":373,\"Teeth\":374,\"Lips\":375,\"Gator Oscillator\":376,\"Ichimoku Clouds\":377,\"Conversion Line Period\":378,\"Base Line Period\":379,\"Leading Span B Period\":380,\"Lagging Span Period\":381,\"Conversion Line\":382,\"Base Line\":383,\"Leading Span A\":384,\"Leading Span B\":385,\"Lagging Span\":386,\"Price Relative\":387,\"Comparison Symbol\":388,\"Performance Index\":389,\"Gain\":390,\"Loss\":391,\"Beta\":392,\"Ulcer Index\":393,\"Balance of Power\":394,\"Trend Intensity Index\":395,\"TII\":396,\"Choppiness Index\":397,\"Disparity Index\":398,\"Rainbow Moving Average\":399,\"SMA1\":400,\"SMA2\":401,\"SMA3\":402,\"SMA4\":403,\"SMA5\":404,\"SMA6\":405,\"SMA7\":406,\"SMA8\":407,\"SMA9\":408,\"SMA10\":409,\"Rainbow Oscillator\":410,\"HHV/LLV Lookback\":411,\"Pring's Know Sure Thing\":412,\"Lightest Rate of Change Period\":413,\"Lightest SMA Period\":414,\"Light Rate of Change Period\":415,\"Light SMA Period\":416,\"Heavy Rate of Change Period\":417,\"Heavy SMA Period\":418,\"Heaviest Rate of Change Period\":419,\"Heaviest SMA Period\":420,\"KST\":421,\"KSTSignal\":422,\"Pring's Special K\":423,\"Darvas Box\":424,\"ATH Lookback Period\":425,\"Exit Field\":426,\"Ghost Boxes\":427,\"Stop Levels\":428,\"Level Offset\":429,\"Price Minimum\":430,\"Volume Spike\":431,\"Volume % of Avg\":432,\"Darvas\":433,\"Ghost\":434,\"Levels\":435,\"Supertrend\":436,\"Uptrend\":437,\"Downtrend\":438,\"Volume Profile\":439,\"Bars Color\":440,\"Vortex Indicator\":441,\"+VI\":442,\"-VI\":443,\"ZigZag\":444,\"Distance(%)\":445,\"Psychological Line\":446,\"Moving Average Deviation\":447,\"Shinohara Intensity Ratio\":448,\"Strong Ratio\":449,\"Weak Ratio\":450}\n\n/***/ }),\n\n/***/ \"mobx\":\n/*!***********************!*\\\n  !*** external \"mobx\" ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_mobx__;\n\n/***/ }),\n\n/***/ \"mobx-react\":\n/*!**************************************************************************************!*\\\n  !*** external {\"commonjs\":\"mobx-react\",\"commonjs2\":\"mobx-react\",\"root\":\"mobxReact\"} ***!\n  \\**************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_mobx_react__;\n\n/***/ }),\n\n/***/ \"moment\":\n/*!***************************************************************************!*\\\n  !*** external {\"root\":\"moment\",\"commonjs\":\"moment\",\"commonjs2\":\"moment\"} ***!\n  \\***************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_moment__;\n\n/***/ }),\n\n/***/ \"react\":\n/*!************************************************************************!*\\\n  !*** external {\"root\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\"} ***!\n  \\************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react__;\n\n/***/ }),\n\n/***/ \"react-dom\":\n/*!***********************************************************************************!*\\\n  !*** external {\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"root\":\"ReactDOM\"} ***!\n  \\***********************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;\n\n/***/ }),\n\n/***/ \"react-transition-group\":\n/*!*************************************************************************************************************************!*\\\n  !*** external {\"commonjs\":\"react-transition-group\",\"commonjs2\":\"react-transition-group\",\"root\":\"ReactTransitionGroup\"} ***!\n  \\*************************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react_transition_group__;\n\n/***/ })\n\n/******/ })[\"default\"];\n});\n//# sourceMappingURL=smartcharts.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/smartcharts-beta/dist/smartcharts.js\n");

/***/ })

}]);