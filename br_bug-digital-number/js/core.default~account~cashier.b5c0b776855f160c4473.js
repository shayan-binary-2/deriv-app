(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~account~cashier"],{

/***/ "../../components/lib/button-link.css":
/*!******************************************************************!*\
  !*** /var/www/deriv-app/packages/components/lib/button-link.css ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vY29tcG9uZW50cy9saWIvYnV0dG9uLWxpbmsuY3NzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy92YXIvd3d3L2Rlcml2LWFwcC9wYWNrYWdlcy9jb21wb25lbnRzL2xpYi9idXR0b24tbGluay5jc3M/NjNkYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../components/lib/button-link.css\n");

/***/ }),

/***/ "../../components/lib/button-link.js":
/*!*****************************************************************!*\
  !*** /var/www/deriv-app/packages/components/lib/button-link.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(_,e){ true?module.exports=e(__webpack_require__(/*! prop-types */ \"../../components/node_modules/prop-types/index.js\"),__webpack_require__(/*! react */ \"../node_modules/react/index.js\"),__webpack_require__(/*! classnames */ \"../../components/node_modules/classnames/index.js\"),__webpack_require__(/*! react-router-dom */ \"../node_modules/react-router-dom/esm/react-router-dom.js\")):undefined}(window,function(__WEBPACK_EXTERNAL_MODULE__0__,__WEBPACK_EXTERNAL_MODULE__1__,__WEBPACK_EXTERNAL_MODULE__2__,__WEBPACK_EXTERNAL_MODULE__22__){return function(_){var e={};function n(t){if(e[t])return e[t].exports;var r=e[t]={i:t,l:!1,exports:{}};return _[t].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=_,n.c=e,n.d=function(_,e,t){n.o(_,e)||Object.defineProperty(_,e,{enumerable:!0,get:t})},n.r=function(_){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(_,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(_,\"__esModule\",{value:!0})},n.t=function(_,e){if(1&e&&(_=n(_)),8&e)return _;if(4&e&&\"object\"==typeof _&&_&&_.__esModule)return _;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:_}),2&e&&\"string\"!=typeof _)for(var r in _)n.d(t,r,function(e){return _[e]}.bind(null,r));return t},n.n=function(_){var e=_&&_.__esModule?function(){return _.default}:function(){return _};return n.d(e,\"a\",e),e},n.o=function(_,e){return Object.prototype.hasOwnProperty.call(_,e)},n.p=\"\",n(n.s=57)}({0:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__0__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJwcm9wLXR5cGVzXCI/MzgzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzBfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///0\\n\")},1:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__1__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18xX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///1\\n\")},2:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__2__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCI/YWFhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzJfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///2\\n\")},22:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__22__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50L2V4dGVybmFsIFwicmVhY3Qtcm91dGVyLWRvbVwiPzUzYjkiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18yMl9fOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///22\\n\")},40:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);\\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(22);\\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_router_dom__WEBPACK_IMPORTED_MODULE_3__);\\n\\n\\n\\n\\n\\nvar ButtonLink = function ButtonLink(_ref) {\\n  var children = _ref.children,\\n      className = _ref.className,\\n      to = _ref.to,\\n      onClick = _ref.onClick,\\n      _ref$size = _ref.size,\\n      size = _ref$size === void 0 ? \\'medium\\' : _ref$size;\\n  return react__WEBPACK_IMPORTED_MODULE_2__[\"createElement\"](react_router_dom__WEBPACK_IMPORTED_MODULE_3__[\"Link\"], {\\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(\\'dc-btn dc-btn--primary\\', className, \\'effect\\', \"dc-btn__\".concat(size)),\\n    to: to,\\n    onClick: onClick\\n  }, children);\\n};\\n\\nButtonLink.propTypes = {\\n  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,\\n  className: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\\n  onClick: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,\\n  size: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\\n  to: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string\\n};\\n/* harmony default export */ __webpack_exports__[\"a\"] = (ButtonLink);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvYnV0dG9uLWxpbmsvYnV0dG9uLWxpbmsuanN4PzA0MWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxuY29uc3QgQnV0dG9uTGluayA9ICh7IGNoaWxkcmVuLCBjbGFzc05hbWUsIHRvLCBvbkNsaWNrLCBzaXplID0gJ21lZGl1bScgfSkgPT4gKFxuICAgIDxMaW5rXG4gICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcygnZGMtYnRuIGRjLWJ0bi0tcHJpbWFyeScsIGNsYXNzTmFtZSwgJ2VmZmVjdCcsIGBkYy1idG5fXyR7c2l6ZX1gKX1cbiAgICAgICAgdG89e3RvfVxuICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgID5cbiAgICAgICAge2NoaWxkcmVufVxuICAgIDwvTGluaz5cbik7XG5cbkJ1dHRvbkxpbmsucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBzaXplOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHRvOiBQcm9wVHlwZXMuc3RyaW5nLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uTGluaztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBSEE7QUFEQTtBQUNBO0FBU0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTEE7QUFRQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///40\\n')},57:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _button_link_jsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(40);\\n/* harmony import */ var _button_link_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(58);\\n/* harmony import */ var _button_link_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_button_link_scss__WEBPACK_IMPORTED_MODULE_1__);\\n\\n\\n/* harmony default export */ __webpack_exports__[\"default\"] = (_button_link_jsx__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"]);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvYnV0dG9uLWxpbmsvaW5kZXguanM/OGU3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQnV0dG9uTGluayBmcm9tICcuL2J1dHRvbi1saW5rLmpzeCc7XG5pbXBvcnQgJy4vYnV0dG9uLWxpbmsuc2Nzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IEJ1dHRvbkxpbms7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///57\\n')},58:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvYnV0dG9uLWxpbmsvYnV0dG9uLWxpbmsuc2Nzcz9hNzgxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE1OTEwODQxODI0OTBcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtaG90LWxvYWRlci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImZpbGVNYXBcIjpcIntmaWxlTmFtZX1cIn0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7O1xuICAgIH1cbiAgIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGdDQUtBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///58\\n\")}}).default});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vY29tcG9uZW50cy9saWIvYnV0dG9uLWxpbmsuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL3Zhci93d3cvZGVyaXYtYXBwL3BhY2thZ2VzL2NvbXBvbmVudHMvbGliL2J1dHRvbi1saW5rLmpzPzFhOWEiXSwic291cmNlc0NvbnRlbnQiOlsiIWZ1bmN0aW9uKF8sZSl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9ZShyZXF1aXJlKFwicHJvcC10eXBlc1wiKSxyZXF1aXJlKFwicmVhY3RcIikscmVxdWlyZShcImNsYXNzbmFtZXNcIikscmVxdWlyZShcInJlYWN0LXJvdXRlci1kb21cIikpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW1wicHJvcC10eXBlc1wiLFwicmVhY3RcIixcImNsYXNzbmFtZXNcIixcInJlYWN0LXJvdXRlci1kb21cIl0sZSk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0c1tcIkBkZXJpdi9jb21wb25lbnRcIl09ZShyZXF1aXJlKFwicHJvcC10eXBlc1wiKSxyZXF1aXJlKFwicmVhY3RcIikscmVxdWlyZShcImNsYXNzbmFtZXNcIikscmVxdWlyZShcInJlYWN0LXJvdXRlci1kb21cIikpOl9bXCJAZGVyaXYvY29tcG9uZW50XCJdPWUoX1tcInByb3AtdHlwZXNcIl0sXy5yZWFjdCxfLmNsYXNzbmFtZXMsX1tcInJlYWN0LXJvdXRlci1kb21cIl0pfSh3aW5kb3csZnVuY3Rpb24oX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9fMF9fLF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzFfXyxfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18yX18sX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9fMjJfXyl7cmV0dXJuIGZ1bmN0aW9uKF8pe3ZhciBlPXt9O2Z1bmN0aW9uIG4odCl7aWYoZVt0XSlyZXR1cm4gZVt0XS5leHBvcnRzO3ZhciByPWVbdF09e2k6dCxsOiExLGV4cG9ydHM6e319O3JldHVybiBfW3RdLmNhbGwoci5leHBvcnRzLHIsci5leHBvcnRzLG4pLHIubD0hMCxyLmV4cG9ydHN9cmV0dXJuIG4ubT1fLG4uYz1lLG4uZD1mdW5jdGlvbihfLGUsdCl7bi5vKF8sZSl8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfLGUse2VudW1lcmFibGU6ITAsZ2V0OnR9KX0sbi5yPWZ1bmN0aW9uKF8pe1widW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC50b1N0cmluZ1RhZyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KF8sU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZTpcIk1vZHVsZVwifSksT2JqZWN0LmRlZmluZVByb3BlcnR5KF8sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9LG4udD1mdW5jdGlvbihfLGUpe2lmKDEmZSYmKF89bihfKSksOCZlKXJldHVybiBfO2lmKDQmZSYmXCJvYmplY3RcIj09dHlwZW9mIF8mJl8mJl8uX19lc01vZHVsZSlyZXR1cm4gXzt2YXIgdD1PYmplY3QuY3JlYXRlKG51bGwpO2lmKG4ucih0KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcImRlZmF1bHRcIix7ZW51bWVyYWJsZTohMCx2YWx1ZTpffSksMiZlJiZcInN0cmluZ1wiIT10eXBlb2YgXylmb3IodmFyIHIgaW4gXyluLmQodCxyLGZ1bmN0aW9uKGUpe3JldHVybiBfW2VdfS5iaW5kKG51bGwscikpO3JldHVybiB0fSxuLm49ZnVuY3Rpb24oXyl7dmFyIGU9XyYmXy5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIF8uZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gX307cmV0dXJuIG4uZChlLFwiYVwiLGUpLGV9LG4ubz1mdW5jdGlvbihfLGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoXyxlKX0sbi5wPVwiXCIsbihuLnM9NTcpfSh7MDpmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7ZXZhbChcIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9fMF9fOy8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaU1DNXFjeUlzSW5OdmRYSmpaWE1pT2xzaWQyVmljR0ZqYXpvdkwwQmtaWEpwZGk5amIyMXdiMjVsYm5RdlpYaDBaWEp1WVd3Z1hDSndjbTl3TFhSNWNHVnpYQ0kvTXpnek1pSmRMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUp0YjJSMWJHVXVaWGh3YjNKMGN5QTlJRjlmVjBWQ1VFRkRTMTlGV0ZSRlVrNUJURjlOVDBSVlRFVmZYekJmWHpzaVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQklpd2ljMjkxY21ObFVtOXZkQ0k2SWlKOVxcbi8vIyBzb3VyY2VVUkw9d2VicGFjay1pbnRlcm5hbDovLy8wXFxuXCIpfSwxOmZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXtldmFsKFwibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18xX187Ly8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTVM1cWN5SXNJbk52ZFhKalpYTWlPbHNpZDJWaWNHRmphem92TDBCa1pYSnBkaTlqYjIxd2IyNWxiblF2WlhoMFpYSnVZV3dnWENKeVpXRmpkRndpUHpVNE9HVWlYU3dpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpYlc5a2RXeGxMbVY0Y0c5eWRITWdQU0JmWDFkRlFsQkJRMHRmUlZoVVJWSk9RVXhmVFU5RVZVeEZYMTh4WDE4N0lsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTSXNJbk52ZFhKalpWSnZiM1FpT2lJaWZRPT1cXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vMVxcblwiKX0sMjpmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7ZXZhbChcIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9fMl9fOy8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaU1pNXFjeUlzSW5OdmRYSmpaWE1pT2xzaWQyVmljR0ZqYXpvdkwwQmtaWEpwZGk5amIyMXdiMjVsYm5RdlpYaDBaWEp1WVd3Z1hDSmpiR0Z6YzI1aGJXVnpYQ0kvWVdGaFlpSmRMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUp0YjJSMWJHVXVaWGh3YjNKMGN5QTlJRjlmVjBWQ1VFRkRTMTlGV0ZSRlVrNUJURjlOVDBSVlRFVmZYekpmWHpzaVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQklpd2ljMjkxY21ObFVtOXZkQ0k2SWlKOVxcbi8vIyBzb3VyY2VVUkw9d2VicGFjay1pbnRlcm5hbDovLy8yXFxuXCIpfSwyMjpmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7ZXZhbChcIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9fMjJfXzsvLyMgc291cmNlVVJMPVttb2R1bGVdXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lNakl1YW5NaUxDSnpiM1Z5WTJWeklqcGJJbmRsWW5CaFkyczZMeTlBWkdWeWFYWXZZMjl0Y0c5dVpXNTBMMlY0ZEdWeWJtRnNJRndpY21WaFkzUXRjbTkxZEdWeUxXUnZiVndpUHpVellqa2lYU3dpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpYlc5a2RXeGxMbVY0Y0c5eWRITWdQU0JmWDFkRlFsQkJRMHRmUlZoVVJWSk9RVXhmVFU5RVZVeEZYMTh5TWw5Zk95SmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUluMD1cXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vMjJcXG5cIil9LDQwOmZ1bmN0aW9uKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2V2YWwoJy8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBjbGFzc25hbWVzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBjbGFzc25hbWVzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oY2xhc3NuYW1lc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTtcXG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgcHJvcF90eXBlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcXG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgcHJvcF90eXBlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHByb3BfdHlwZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyk7XFxuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIHJlYWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciByZWFjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHJlYWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18pO1xcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciByZWFjdF9yb3V0ZXJfZG9tX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIyKTtcXG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgcmVhY3Rfcm91dGVyX2RvbV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHJlYWN0X3JvdXRlcl9kb21fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyk7XFxuXFxuXFxuXFxuXFxuXFxudmFyIEJ1dHRvbkxpbmsgPSBmdW5jdGlvbiBCdXR0b25MaW5rKF9yZWYpIHtcXG4gIHZhciBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW4sXFxuICAgICAgY2xhc3NOYW1lID0gX3JlZi5jbGFzc05hbWUsXFxuICAgICAgdG8gPSBfcmVmLnRvLFxcbiAgICAgIG9uQ2xpY2sgPSBfcmVmLm9uQ2xpY2ssXFxuICAgICAgX3JlZiRzaXplID0gX3JlZi5zaXplLFxcbiAgICAgIHNpemUgPSBfcmVmJHNpemUgPT09IHZvaWQgMCA/IFxcJ21lZGl1bVxcJyA6IF9yZWYkc2l6ZTtcXG4gIHJldHVybiByZWFjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fW1wiY3JlYXRlRWxlbWVudFwiXShyZWFjdF9yb3V0ZXJfZG9tX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bXCJMaW5rXCJdLCB7XFxuICAgIGNsYXNzTmFtZTogY2xhc3NuYW1lc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQoKShcXCdkYy1idG4gZGMtYnRuLS1wcmltYXJ5XFwnLCBjbGFzc05hbWUsIFxcJ2VmZmVjdFxcJywgXCJkYy1idG5fX1wiLmNvbmNhdChzaXplKSksXFxuICAgIHRvOiB0byxcXG4gICAgb25DbGljazogb25DbGlja1xcbiAgfSwgY2hpbGRyZW4pO1xcbn07XFxuXFxuQnV0dG9uTGluay5wcm9wVHlwZXMgPSB7XFxuICBjaGlsZHJlbjogcHJvcF90eXBlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fX2RlZmF1bHQuYS5vYmplY3QsXFxuICBjbGFzc05hbWU6IHByb3BfdHlwZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX19kZWZhdWx0LmEuc3RyaW5nLFxcbiAgb25DbGljazogcHJvcF90eXBlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fX2RlZmF1bHQuYS5mdW5jLFxcbiAgc2l6ZTogcHJvcF90eXBlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fX2RlZmF1bHQuYS5zdHJpbmcsXFxuICB0bzogcHJvcF90eXBlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fX2RlZmF1bHQuYS5zdHJpbmdcXG59O1xcbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImFcIl0gPSAoQnV0dG9uTGluayk7Ly8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTkRBdWFuTWlMQ0p6YjNWeVkyVnpJanBiSW5kbFluQmhZMnM2THk5QVpHVnlhWFl2WTI5dGNHOXVaVzUwTHk0dmMzSmpMMk52YlhCdmJtVnVkSE12WW5WMGRHOXVMV3hwYm1zdlluVjBkRzl1TFd4cGJtc3Vhbk40UHpBME1XRWlYU3dpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpYVcxd2IzSjBJR05zWVhOelRtRnRaWE1nWm5KdmJTQW5ZMnhoYzNOdVlXMWxjeWM3WEc1cGJYQnZjblFnVUhKdmNGUjVjR1Z6SUdaeWIyMGdKM0J5YjNBdGRIbHdaWE1uTzF4dWFXMXdiM0owSUZKbFlXTjBJR1p5YjIwZ0ozSmxZV04wSnp0Y2JtbHRjRzl5ZENCN0lFeHBibXNnZlNCbWNtOXRJQ2R5WldGamRDMXliM1YwWlhJdFpHOXRKenRjYmx4dVkyOXVjM1FnUW5WMGRHOXVUR2x1YXlBOUlDaDdJR05vYVd4a2NtVnVMQ0JqYkdGemMwNWhiV1VzSUhSdkxDQnZia05zYVdOckxDQnphWHBsSUQwZ0oyMWxaR2wxYlNjZ2ZTa2dQVDRnS0Z4dUlDQWdJRHhNYVc1clhHNGdJQ0FnSUNBZ0lHTnNZWE56VG1GdFpUMTdZMnhoYzNOT1lXMWxjeWduWkdNdFluUnVJR1JqTFdKMGJpMHRjSEpwYldGeWVTY3NJR05zWVhOelRtRnRaU3dnSjJWbVptVmpkQ2NzSUdCa1l5MWlkRzVmWHlSN2MybDZaWDFnS1gxY2JpQWdJQ0FnSUNBZ2RHODllM1J2ZlZ4dUlDQWdJQ0FnSUNCdmJrTnNhV05yUFh0dmJrTnNhV05yZlZ4dUlDQWdJRDVjYmlBZ0lDQWdJQ0FnZTJOb2FXeGtjbVZ1ZlZ4dUlDQWdJRHd2VEdsdWF6NWNiaWs3WEc1Y2JrSjFkSFJ2Ymt4cGJtc3VjSEp2Y0ZSNWNHVnpJRDBnZTF4dUlDQWdJR05vYVd4a2NtVnVPaUJRY205d1ZIbHdaWE11YjJKcVpXTjBMRnh1SUNBZ0lHTnNZWE56VG1GdFpUb2dVSEp2Y0ZSNWNHVnpMbk4wY21sdVp5eGNiaUFnSUNCdmJrTnNhV05yT2lCUWNtOXdWSGx3WlhNdVpuVnVZeXhjYmlBZ0lDQnphWHBsT2lCUWNtOXdWSGx3WlhNdWMzUnlhVzVuTEZ4dUlDQWdJSFJ2T2lCUWNtOXdWSGx3WlhNdWMzUnlhVzVuTEZ4dWZUdGNibHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdRblYwZEc5dVRHbHVhenRjYmlKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlNFRTdRVUZFUVR0QlFVTkJPMEZCVTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlRFRTdRVUZSUVNJc0luTnZkWEpqWlZKdmIzUWlPaUlpZlE9PVxcbi8vIyBzb3VyY2VVUkw9d2VicGFjay1pbnRlcm5hbDovLy80MFxcbicpfSw1NzpmdW5jdGlvbihtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtldmFsKCdfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7XFxuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9idXR0b25fbGlua19qc3hfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNDApO1xcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfYnV0dG9uX2xpbmtfc2Nzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1OCk7XFxuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9idXR0b25fbGlua19zY3NzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX2J1dHRvbl9saW5rX3Njc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyk7XFxuXFxuXFxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fW1wiZGVmYXVsdFwiXSA9IChfYnV0dG9uX2xpbmtfanN4X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bLyogZGVmYXVsdCAqLyBcImFcIl0pOy8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaU5UY3Vhbk1pTENKemIzVnlZMlZ6SWpwYkluZGxZbkJoWTJzNkx5OUFaR1Z5YVhZdlkyOXRjRzl1Wlc1MEx5NHZjM0pqTDJOdmJYQnZibVZ1ZEhNdlluVjBkRzl1TFd4cGJtc3ZhVzVrWlhndWFuTS9PR1UzT0NKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SnBiWEJ2Y25RZ1FuVjBkRzl1VEdsdWF5Qm1jbTl0SUNjdUwySjFkSFJ2Ymkxc2FXNXJMbXB6ZUNjN1hHNXBiWEJ2Y25RZ0p5NHZZblYwZEc5dUxXeHBibXN1YzJOemN5YzdYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJRUoxZEhSdmJreHBibXM3WEc0aVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZEUVR0QlFVVkJJaXdpYzI5MWNtTmxVbTl2ZENJNklpSjlcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vNTdcXG4nKX0sNTg6ZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7ZXZhbChcIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxcbiAgICBpZihmYWxzZSkgeyB2YXIgY3NzUmVsb2FkOyB9XFxuICAvLyMgc291cmNlVVJMPVttb2R1bGVdXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lOVGd1YW5NaUxDSnpiM1Z5WTJWeklqcGJJbmRsWW5CaFkyczZMeTlBWkdWeWFYWXZZMjl0Y0c5dVpXNTBMeTR2YzNKakwyTnZiWEJ2Ym1WdWRITXZZblYwZEc5dUxXeHBibXN2WW5WMGRHOXVMV3hwYm1zdWMyTnpjejloTnpneElsMHNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaTh2SUdWNGRISmhZM1JsWkNCaWVTQnRhVzVwTFdOemN5MWxlSFJ5WVdOMExYQnNkV2RwYmx4dUlDQWdJR2xtS0cxdlpIVnNaUzVvYjNRcElIdGNiaUFnSUNBZ0lDOHZJREUxT1RFd09EUXhPREkwT1RCY2JpQWdJQ0FnSUhaaGNpQmpjM05TWld4dllXUWdQU0J5WlhGMWFYSmxLRndpSVM0dUx5NHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OWpjM010YUc5MExXeHZZV1JsY2k5b2IzUk5iMlIxYkdWU1pYQnNZV05sYldWdWRDNXFjMXdpS1NodGIyUjFiR1V1YVdRc0lIdGNJbVpwYkdWTllYQmNJanBjSW50bWFXeGxUbUZ0WlgxY0luMHBPMXh1SUNBZ0lDQWdiVzlrZFd4bExtaHZkQzVrYVhOd2IzTmxLR056YzFKbGJHOWhaQ2s3WEc0Z0lDQWdJQ0J0YjJSMWJHVXVhRzkwTG1GalkyVndkQ2gxYm1SbFptbHVaV1FzSUdOemMxSmxiRzloWkNrN08xeHVJQ0FnSUgxY2JpQWdJbDBzSW0xaGNIQnBibWR6SWpvaVFVRkJRVHRCUVVOQkxHZERRVXRCTzBGQlEwRWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUluMD1cXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vNThcXG5cIil9fSkuZGVmYXVsdH0pOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../components/lib/button-link.js\n");

/***/ }),

/***/ "../../components/lib/dropdown.css":
/*!***************************************************************!*\
  !*** /var/www/deriv-app/packages/components/lib/dropdown.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vY29tcG9uZW50cy9saWIvZHJvcGRvd24uY3NzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy92YXIvd3d3L2Rlcml2LWFwcC9wYWNrYWdlcy9jb21wb25lbnRzL2xpYi9kcm9wZG93bi5jc3M/OTdmMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../components/lib/dropdown.css\n");

/***/ }),

/***/ "../../components/lib/dropdown.js":
/*!**************************************************************!*\
  !*** /var/www/deriv-app/packages/components/lib/dropdown.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(g,I){ true?module.exports=I(__webpack_require__(/*! prop-types */ \"../../components/node_modules/prop-types/index.js\"),__webpack_require__(/*! react */ \"../node_modules/react/index.js\"),__webpack_require__(/*! classnames */ \"../../components/node_modules/classnames/index.js\"),__webpack_require__(/*! @deriv/shared/utils/string */ \"../../shared/utils/string.js\"),__webpack_require__(/*! @deriv/shared/utils/url */ \"../../shared/utils/url.js\"),__webpack_require__(/*! react-transition-group */ \"../../components/node_modules/react-transition-group/esm/index.js\"),__webpack_require__(/*! react-tiny-popover */ \"../../components/node_modules/react-tiny-popover/dist/Popover.js\"),__webpack_require__(/*! tt-react-custom-scrollbars */ \"../../components/node_modules/tt-react-custom-scrollbars/lib/index.js\"),__webpack_require__(/*! @deriv/shared/utils/currency */ \"../../shared/utils/currency.js\"),__webpack_require__(/*! @deriv/shared/utils/os */ \"../../shared/utils/os.js\")):undefined}(window,function(__WEBPACK_EXTERNAL_MODULE__0__,__WEBPACK_EXTERNAL_MODULE__1__,__WEBPACK_EXTERNAL_MODULE__2__,__WEBPACK_EXTERNAL_MODULE__5__,__WEBPACK_EXTERNAL_MODULE__7__,__WEBPACK_EXTERNAL_MODULE__9__,__WEBPACK_EXTERNAL_MODULE__13__,__WEBPACK_EXTERNAL_MODULE__20__,__WEBPACK_EXTERNAL_MODULE__27__,__WEBPACK_EXTERNAL_MODULE__49__){return function(g){var I={};function C(A){if(I[A])return I[A].exports;var e=I[A]={i:A,l:!1,exports:{}};return g[A].call(e.exports,e,e.exports,C),e.l=!0,e.exports}return C.m=g,C.c=I,C.d=function(g,I,A){C.o(g,I)||Object.defineProperty(g,I,{enumerable:!0,get:A})},C.r=function(g){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(g,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(g,\"__esModule\",{value:!0})},C.t=function(g,I){if(1&I&&(g=C(g)),8&I)return g;if(4&I&&\"object\"==typeof g&&g&&g.__esModule)return g;var A=Object.create(null);if(C.r(A),Object.defineProperty(A,\"default\",{enumerable:!0,value:g}),2&I&&\"string\"!=typeof g)for(var e in g)C.d(A,e,function(I){return g[I]}.bind(null,e));return A},C.n=function(g){var I=g&&g.__esModule?function(){return g.default}:function(){return g};return C.d(I,\"a\",I),I},C.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)},C.p=\"\",C(C.s=113)}({0:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__0__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJwcm9wLXR5cGVzXCI/MzgzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzBfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///0\\n\")},1:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__1__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18xX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///1\\n\")},113:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: external \"classnames\"\\nvar external_classnames_ = __webpack_require__(2);\\nvar external_classnames_default = /*#__PURE__*/__webpack_require__.n(external_classnames_);\\n\\n// EXTERNAL MODULE: external \"prop-types\"\\nvar external_prop_types_ = __webpack_require__(0);\\nvar external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(1);\\n\\n// EXTERNAL MODULE: external \"react-transition-group\"\\nvar external_react_transition_group_ = __webpack_require__(9);\\n\\n// EXTERNAL MODULE: external \"@deriv/shared/utils/os\"\\nvar os_ = __webpack_require__(49);\\n\\n// EXTERNAL MODULE: ./src/components/themed-scrollbars/index.js + 1 modules\\nvar themed_scrollbars = __webpack_require__(19);\\n\\n// CONCATENATED MODULE: ./src/components/dropdown/dropdown.js\\n\\nvar getDisplayText = function getDisplayText(list, value) {\\n  var findInArray = function findInArray(arr_list) {\\n    return (arr_list.find(function (item) {\\n      return item.value === value;\\n    }) || {}).text;\\n  };\\n\\n  var text = \\'\\';\\n\\n  if (Array.isArray(list)) {\\n    text = findInArray(list);\\n  } else {\\n    Object.keys(list).some(function (key) {\\n      text = findInArray(list[key]);\\n      return text;\\n    });\\n  }\\n\\n  return text;\\n};\\nvar findNextFocusableNode = function findNextFocusableNode(active_node) {\\n  if (!active_node) return null;\\n  if (active_node.attributes.tabIndex) return active_node;\\n  return findNextFocusableNode(active_node.nextSibling);\\n};\\nvar findPreviousFocusableNode = function findPreviousFocusableNode(active_node) {\\n  if (!active_node) return null;\\n  if (active_node.attributes.tabIndex) return active_node;\\n  return findPreviousFocusableNode(active_node.previousSibling);\\n};\\nvar dropdown_listPropType = function listPropType() {\\n  return external_prop_types_default.a.oneOfType([external_prop_types_default.a.arrayOf(external_prop_types_default.a.shape({\\n    disabled: external_prop_types_default.a.bool,\\n    has_tooltip: external_prop_types_default.a.bool,\\n    text: external_prop_types_default.a.string,\\n    tooltip: external_prop_types_default.a.string,\\n    value: external_prop_types_default.a.oneOfType([external_prop_types_default.a.string, external_prop_types_default.a.number])\\n  })), external_prop_types_default.a.object]);\\n};\\n// EXTERNAL MODULE: external \"@deriv/shared/utils/currency\"\\nvar currency_ = __webpack_require__(27);\\nvar currency_default = /*#__PURE__*/__webpack_require__.n(currency_);\\n\\n// EXTERNAL MODULE: ./src/components/popover/index.js + 1 modules\\nvar popover = __webpack_require__(17);\\n\\n// CONCATENATED MODULE: ./src/components/dropdown/items.jsx\\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\\n\\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\\n\\n\\n\\n\\n\\n\\n\\nvar items_Items = function Items(_ref) {\\n  var items = _ref.items,\\n      props = _objectWithoutProperties(_ref, [\"items\"]);\\n\\n  return items.map(function (item, idx) {\\n    return external_react_[\"createElement\"](items_Item, _extends({\\n      key: idx,\\n      item: item\\n    }, props));\\n  });\\n};\\n\\nvar items_Item = function Item(_ref2) {\\n  var onKeyPressed = _ref2.onKeyPressed,\\n      value = _ref2.value,\\n      item = _ref2.item,\\n      handleSelect = _ref2.handleSelect,\\n      nodes = _ref2.nodes,\\n      has_symbol = _ref2.has_symbol,\\n      is_align_text_left = _ref2.is_align_text_left,\\n      className = _ref2.className;\\n  var item_ref = external_react_[\"useRef\"](null);\\n  var symbol_type_class_name = item.text && typeof item.text === \\'string\\' ? \"symbols--\".concat(item.text.toLowerCase()) : null;\\n  external_react_[\"useEffect\"](function () {\\n    var removeListeners = function removeListeners() {\\n      nodes[\"delete\"](item.value, item_ref.current);\\n      item_ref.current.removeEventListener(\\'keydown\\', onKeyPressed);\\n    };\\n\\n    if (item.disabled) removeListeners();else {\\n      var handleKeyPress = function handleKeyPress(e) {\\n        return onKeyPressed(e, item);\\n      };\\n\\n      item_ref.current.addEventListener(\\'keydown\\', handleKeyPress);\\n      nodes.set(item.value.toString(), item_ref.current);\\n    }\\n    return function () {\\n      return removeListeners();\\n    };\\n  }, [item]);\\n  return external_react_[\"createElement\"](\"div\", {\\n    className: external_classnames_default()(\\'dc-list__item\\', {\\n      \\'dc-list__item--selected\\': value === item.value\\n    }, {\\n      \\'dc-list__item--disabled\\': item.disabled\\n    }),\\n    name: name,\\n    value: item.value,\\n    onClick: item.disabled ? null : handleSelect.bind(null, item),\\n    ref: item_ref,\\n    tabIndex: item.disabled ? null : 0,\\n    id: item.value\\n  }, !!has_symbol && item.has_tooltip && external_react_[\"createElement\"](popover[\"default\"], {\\n    alignment: \"left\",\\n    message: currency_default.a.getCurrencyDisplayCode(item.text)\\n  }, external_react_[\"createElement\"](\"span\", {\\n    className: external_classnames_default()(\\'symbols\\', \\'dc-list__item-symbol\\', symbol_type_class_name)\\n  })), !!has_symbol && !item.has_tooltip && external_react_[\"createElement\"](\"span\", {\\n    className: external_classnames_default()(\\'symbols\\', \\'dc-list__item-text\\', symbol_type_class_name)\\n  }), !has_symbol && external_react_[\"createElement\"](\"span\", {\\n    className: external_classnames_default()(\\'dc-list__item-text\\', {\\n      \\'dc-list__item-text--left\\': is_align_text_left\\n    }, className)\\n  }, item.text));\\n};\\n\\nitems_Items.propTypes = {\\n  className: external_prop_types_default.a.string,\\n  handleSelect: external_prop_types_default.a.func,\\n  has_symbol: external_prop_types_default.a.bool,\\n  onKeyPressed: external_prop_types_default.a.func,\\n  name: external_prop_types_default.a.string,\\n  value: external_prop_types_default.a.oneOfType([external_prop_types_default.a.number, external_prop_types_default.a.string])\\n};\\n/* harmony default export */ var dropdown_items = (items_Items);\\n// CONCATENATED MODULE: ./src/components/dropdown/native-select.jsx\\n\\n\\nvar NativeSelect = external_react_[\"forwardRef\"](function (_ref, ref) {\\n  var name = _ref.name,\\n      list = _ref.list,\\n      value = _ref.value,\\n      onChange = _ref.onChange;\\n  return external_react_[\"createElement\"](\"div\", {\\n    className: \"dc-native-select dc-native-select__wrapper\"\\n  }, external_react_[\"createElement\"](\"select\", {\\n    ref: ref,\\n    className: \"dc-native-select__select\",\\n    name: name,\\n    value: value,\\n    onChange: onChange\\n  }, Array.isArray(list) ? list.map(function (item, idx) {\\n    return external_react_[\"createElement\"](\"option\", {\\n      key: idx,\\n      value: item.value,\\n      disabled: item.disabled\\n    }, item.nativepicker_text);\\n  }) : Object.keys(list).map(function (key) {\\n    return external_react_[\"createElement\"](external_react_[\"Fragment\"], {\\n      key: key\\n    }, external_react_[\"createElement\"](\"optgroup\", {\\n      label: key\\n    }, list[key].map(function (item, idx) {\\n      return external_react_[\"createElement\"](\"option\", {\\n        key: idx,\\n        value: item.value,\\n        disabled: item.disabled\\n      }, item.nativepicker_text);\\n    })));\\n  })));\\n});\\nNativeSelect.displayName = \\'NativeSelect\\';\\nNativeSelect.propTypes = {\\n  list: external_prop_types_default.a.oneOfType([external_prop_types_default.a.object, external_prop_types_default.a.array]),\\n  name: external_prop_types_default.a.string,\\n  nativepicker_text: external_prop_types_default.a.string,\\n  onChange: external_prop_types_default.a.func,\\n  value: external_prop_types_default.a.oneOfType([external_prop_types_default.a.number, external_prop_types_default.a.string])\\n};\\n/* harmony default export */ var native_select = (NativeSelect);\\n// CONCATENATED MODULE: ./src/components/dropdown/display-text.jsx\\n\\n\\n\\n\\n\\nvar display_text_DisplayText = function DisplayText(_ref) {\\n  var className = _ref.className,\\n      has_symbol = _ref.has_symbol,\\n      list = _ref.list,\\n      is_align_text_left = _ref.is_align_text_left,\\n      placeholder = _ref.placeholder,\\n      name = _ref.name,\\n      value = _ref.value;\\n  var symbol_value_class = value && has_symbol ? \"symbols--\".concat(value.toLowerCase()) : null;\\n  return external_react_[\"createElement\"](external_react_[\"Fragment\"], null, has_symbol ? external_react_[\"createElement\"](\"span\", {\\n    className: external_classnames_default()(\\'symbols dc-dropdown__display-symbol\\', symbol_value_class, className),\\n    name: name,\\n    value: value\\n  }) : external_react_[\"createElement\"](\"span\", {\\n    className: external_classnames_default()(\\'dc-dropdown__display-text\\', className),\\n    name: name,\\n    value: value\\n  }, getDisplayText(list, value)), placeholder && external_react_[\"createElement\"](\"div\", {\\n    className: external_classnames_default()(\\'dc-dropdown__display-placeholder\\', {\\n      \\'dc-dropdown__display-placeholder--is-title\\': value,\\n      \\'dc-dropdown__display-placeholder--is-left-text\\': is_align_text_left\\n    })\\n  }, external_react_[\"createElement\"](\"span\", {\\n    className: \"dc-dropdown__display-placeholder-text\"\\n  }, placeholder)));\\n};\\n\\ndisplay_text_DisplayText.propTypes = {\\n  className: external_prop_types_default.a.string,\\n  has_symbol: external_prop_types_default.a.bool,\\n  is_title: external_prop_types_default.a.bool,\\n  list: dropdown_listPropType(),\\n  name: external_prop_types_default.a.string,\\n  placeholder: external_prop_types_default.a.string,\\n  value: external_prop_types_default.a.oneOfType([external_prop_types_default.a.string, external_prop_types_default.a.number])\\n};\\n/* harmony default export */ var display_text = (display_text_DisplayText);\\n// EXTERNAL MODULE: ./src/components/icon/index.js\\nvar icon = __webpack_require__(6);\\n\\n// CONCATENATED MODULE: ./src/components/dropdown/dropdown.jsx\\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction dropdown_extends() { dropdown_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return dropdown_extends.apply(this, arguments); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nvar dropdown_Dropdown =\\n/*#__PURE__*/\\nfunction (_React$Component) {\\n  _inherits(Dropdown, _React$Component);\\n\\n  function Dropdown() {\\n    var _getPrototypeOf2;\\n\\n    var _this;\\n\\n    _classCallCheck(this, Dropdown);\\n\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dropdown)).call.apply(_getPrototypeOf2, [this].concat(args)));\\n    _this.dropdown_ref = external_react_[\"createRef\"]();\\n    _this.list_ref = external_react_[\"createRef\"]();\\n    _this.native_select_ref = external_react_[\"createRef\"]();\\n    _this.nodes = new Map();\\n    _this.state = {\\n      is_list_visible: !!_this.props.is_nativepicker_visible,\\n      list_height: 0,\\n      list_width: 0\\n    };\\n\\n    _this.handleSelect = function (item) {\\n      if (item.value !== _this.props.value) {\\n        _this.props.onChange({\\n          target: {\\n            name: _this.props.name,\\n            value: item.value\\n          }\\n        });\\n      }\\n\\n      _this.handleVisibility();\\n\\n      _this.dropdown_ref.current.focus();\\n    };\\n\\n    _this.setWrapperRef = function (node) {\\n      return _this.wrapper_ref = node;\\n    };\\n\\n    _this.handleClickOutside = function (event) {\\n      var _event$path, _event$composedPath;\\n\\n      var path = (_event$path = event.path) !== null && _event$path !== void 0 ? _event$path : (_event$composedPath = event.composedPath) === null || _event$composedPath === void 0 ? void 0 : _event$composedPath.call(event);\\n\\n      if (_this.wrapper_ref && !_this.wrapper_ref.contains(event.target) && !_this.wrapper_ref.contains(path[0]) && // When component is isolated (e.g, iframe, shadow DOM) event.target refers to whole container not the component. path[0] is the node that the event originated from, it does not need to walk the array\\n      _this.state.is_list_visible) {\\n        if (typeof _this.props.handleBlur === \\'function\\') {\\n          _this.props.handleBlur({\\n            target: {\\n              name: _this.props.name\\n            }\\n          });\\n        }\\n\\n        _this.setState({\\n          is_list_visible: false\\n        });\\n      }\\n    };\\n\\n    _this.handleVisibility = function () {\\n      if (_this.props.is_nativepicker && !_this.state.is_list_visible) {\\n        if (Object(os_[\"mobileOSDetect\"])() === \\'iOS\\') {\\n          /* .focus() doesn\\'t trigger open <select /> in Android :(\\n           * so we use a CSS hack - refer to L237 in dropdown.scss\\n           * [TODO]: find alternative solution to trigger open <select /> with JS\\n           */\\n          _this.native_select_ref.current.focus();\\n        }\\n\\n        _this.setState({\\n          is_list_visible: true\\n        });\\n      } else {\\n        _this.setState(function (state) {\\n          return {\\n            is_list_visible: !state.is_list_visible\\n          };\\n        }, function () {\\n          if (!_this.state.is_list_visible) _this.dropdown_ref.current.focus();\\n        });\\n      }\\n    };\\n\\n    _this.onKeyPressed = function (event, item) {\\n      if (_this.is_single_option) return; // Tab -> before preventDefault() to be able to go to the next tabIndex\\n\\n      if (event.keyCode === 9 && !_this.state.is_list_visible) return;\\n      event.preventDefault();\\n\\n      switch (event.keyCode) {\\n        case 27:\\n          // esc\\n          if (_this.state.is_list_visible) _this.handleVisibility();\\n          break;\\n\\n        case 9: // Tab\\n\\n        case 13: // Enter\\n\\n        case 32:\\n          // Space\\n          if (!item) return;\\n\\n          _this.handleSelect(item);\\n\\n          break;\\n\\n        case 38: // Up Arrow\\n\\n        case 40:\\n          // Down Arrow\\n          if (_this.state.is_list_visible) {\\n            _this.focusNextListItem(event.keyCode);\\n          } else if (!_this.props.is_alignment_left) {\\n            _this.handleVisibility();\\n          }\\n\\n          break;\\n\\n        case 37: // Left arrow\\n\\n        case 39:\\n          // Right Arrow\\n          if (_this.props.is_alignment_left) {\\n            _this.handleVisibility();\\n          }\\n\\n          break;\\n\\n        default:\\n      } // For char presses, we do a search for the item:\\n\\n\\n      if (event.key.length === 1 && _this.props.list.length) {\\n        var _char = event.key.toLowerCase();\\n\\n        var item_starting_with_char = _this.props.list.find(function (li) {\\n          return li.value && li.value[0].toLowerCase() === _char;\\n        });\\n\\n        if (!item_starting_with_char) return;\\n\\n        var item_ref = _this.nodes.get(item_starting_with_char.value);\\n\\n        if (item_ref) item_ref.focus();\\n      }\\n    };\\n\\n    _this.focusNextListItem = function (direction) {\\n      var active_element = document.activeElement;\\n\\n      if (active_element.id === \\'dropdown-display\\') {\\n        Array.from(_this.nodes.values())[0].focus();\\n      } else {\\n        var active_node = _this.nodes.get(active_element.id);\\n\\n        if (active_node) {\\n          if (direction === 40) {\\n            var next_node = findNextFocusableNode(active_node.nextSibling);\\n            if (next_node) next_node.focus();\\n          }\\n\\n          if (direction === 38) {\\n            var prev_node = findPreviousFocusableNode(active_node.previousSibling);\\n            if (prev_node) prev_node.focus();\\n          }\\n        }\\n      }\\n    };\\n\\n    _this.setListDimension = function () {\\n      return _this.setState({\\n        list_width: _this.list_ref.current.offsetWidth,\\n        list_height: _this.list_ref.current.offsetHeight\\n      });\\n    };\\n\\n    return _this;\\n  }\\n\\n  _createClass(Dropdown, [{\\n    key: \"componentDidMount\",\\n    value: function componentDidMount() {\\n      document.addEventListener(\\'mousedown\\', this.handleClickOutside, {\\n        passive: true\\n      });\\n    }\\n  }, {\\n    key: \"componentDidUpdate\",\\n    value: function componentDidUpdate() {\\n      if (this.props.is_nativepicker && !this.props.is_nativepicker_visible && this.state.is_list_visible) {\\n        this.setState({\\n          is_list_visible: false\\n        });\\n      }\\n    }\\n  }, {\\n    key: \"componentWillUnmount\",\\n    value: function componentWillUnmount() {\\n      document.removeEventListener(\\'mousedown\\', this.handleClickOutside);\\n    }\\n  }, {\\n    key: \"render\",\\n    value: function render() {\\n      var _this2 = this;\\n\\n      var getDropDownAlignment = function getDropDownAlignment() {\\n        if (_this2.props.is_alignment_left) return _this2.computed_offset_left;else if (_this2.props.is_alignment_top) return _this2.computed_offset_top;\\n        return null;\\n      };\\n\\n      return external_react_[\"createElement\"](external_react_[\"Fragment\"], null, external_react_[\"createElement\"](\"input\", {\\n        className: \"dc-dropdown__inner\",\\n        autoComplete: \"off\",\\n        name: this.props.name,\\n        readOnly: \"readonly\",\\n        type: \"hidden\",\\n        value: this.props.value || 0\\n      }), external_react_[\"createElement\"](\"div\", {\\n        ref: this.setWrapperRef,\\n        className: this.container_class_name\\n      }, external_react_[\"createElement\"](\"div\", {\\n        className: \"dc-dropdown__container\"\\n      }, this.props.label && external_react_[\"createElement\"](\"span\", {\\n        className: external_classnames_default()(\\'dc-dropdown__label\\', {\\n          \\'dc-dropdown__label--clicked\\': this.state.is_list_visible\\n        })\\n      }, this.props.label), external_react_[\"createElement\"](\"div\", {\\n        className: this.dropdown_display_class_name,\\n        tabIndex: this.is_single_option ? \\'-1\\' : \\'0\\',\\n        onClick: this.handleVisibility,\\n        onKeyDown: this.onKeyPressed,\\n        id: \"dropdown-display\",\\n        ref: this.dropdown_ref\\n      }, external_react_[\"createElement\"](display_text, {\\n        has_symbol: this.props.has_symbol,\\n        name: this.props.name,\\n        is_title: this.state.is_list_visible,\\n        placeholder: this.props.placeholder,\\n        value: this.props.value || 0,\\n        list: this.props.list,\\n        is_align_text_left: this.props.is_align_text_left\\n      })), !this.is_single_option && external_react_[\"createElement\"](icon[\"default\"], {\\n        icon: this.props.is_alignment_left ? \\'IcChevronLeft\\' : \\'IcChevronDown\\',\\n        className: external_classnames_default()(\\'dc-dropdown__select-arrow\\', {\\n          \\'dc-dropdown__select-arrow--left\\': this.props.is_alignment_left,\\n          \\'dc-dropdown__select-arrow--up\\': this.state.is_list_visible\\n        })\\n      }), this.props.error && external_react_[\"createElement\"](\"p\", {\\n        className: \"dc-field-error\"\\n      }, this.props.error), this.props.is_nativepicker ? external_react_[\"createElement\"](native_select, {\\n        ref: this.native_select_ref,\\n        name: this.props.name,\\n        value: this.props.value,\\n        list: this.props.list,\\n        onChange: this.props.onChange\\n      }) : external_react_[\"createElement\"](external_react_transition_group_[\"CSSTransition\"], {\\n        \"in\": this.state.is_list_visible,\\n        timeout: 100,\\n        classNames: this.transition_class_names,\\n        onEntered: this.setListDimension,\\n        unmountOnExit: true\\n      }, external_react_[\"createElement\"](\"div\", {\\n        className: this.dropdown_list_class_names\\n      }, external_react_[\"createElement\"](\"div\", {\\n        className: this.list_class_names,\\n        ref: this.list_ref,\\n        style: getDropDownAlignment(),\\n        \"aria-expanded\": this.state.is_list_visible,\\n        role: \"list\"\\n      }, external_react_[\"createElement\"](themed_scrollbars[\"default\"], {\\n        autoHeight: true,\\n        autoHide: true // TODO: remove this once tt-react-scrollbars have been replaced\\n        // prevent focus handling from breaking\\n        ,\\n        autoHeightMax: 10000,\\n        renderTrackHorizontal: function renderTrackHorizontal(props) {\\n          return external_react_[\"createElement\"](\"div\", dropdown_extends({}, props, {\\n            style: {\\n              display: \\'none\\'\\n            }\\n          }));\\n        },\\n        renderThumbHorizontal: function renderThumbHorizontal(props) {\\n          return external_react_[\"createElement\"](\"div\", dropdown_extends({}, props, {\\n            style: {\\n              display: \\'none\\'\\n            }\\n          }));\\n        }\\n      }, Array.isArray(this.props.list) ? external_react_[\"createElement\"](dropdown_items, {\\n        onKeyPressed: this.onKeyPressed,\\n        className: this.props.classNameItems,\\n        handleSelect: this.handleSelect,\\n        has_symbol: this.props.has_symbol,\\n        items: this.props.list,\\n        name: this.props.name,\\n        is_align_text_left: this.props.is_align_text_left,\\n        value: this.props.value,\\n        nodes: this.nodes\\n      }) : Object.keys(this.props.list).map(function (key, idx) {\\n        return external_react_[\"createElement\"](external_react_[\"Fragment\"], {\\n          key: key\\n        }, external_react_[\"createElement\"](\"div\", {\\n          className: external_classnames_default()(\\'dc-list__label\\', _this2.props.classNameLabel)\\n        }, key), external_react_[\"createElement\"](dropdown_items, {\\n          onKeyPressed: _this2.onKeyPressed,\\n          className: _this2.props.classNameItems,\\n          handleSelect: _this2.handleSelect,\\n          has_symbol: _this2.props.has_symbol,\\n          items: _this2.props.list[key],\\n          name: _this2.props.name,\\n          is_align_text_left: _this2.props.is_align_text_left,\\n          value: _this2.props.value,\\n          nodes: _this2.nodes\\n        }), idx !== Object.keys(_this2.props.list).length - 1 && external_react_[\"createElement\"](\"span\", {\\n          className: \"dc-list__separator\"\\n        }));\\n      })))))), !this.props.error && this.props.hint && external_react_[\"createElement\"](\"p\", {\\n        className: \"dc-dropdown__hint\"\\n      }, this.props.hint)));\\n    }\\n  }, {\\n    key: \"computed_offset_left\",\\n\\n    /**\\n     * Calculate the offset for the dropdown list based on its width\\n     *\\n     * @return {{transform: string}}\\n     */\\n    get: function get() {\\n      return {\\n        transform: \"translate3d(calc(-\".concat(this.state.list_width, \"px - 12px), 0, 0px)\")\\n      };\\n    }\\n    /**\\n     * Calculate the offset for the dropdown list based on its height\\n     *\\n     * @return {{transform: string}}\\n     */\\n\\n  }, {\\n    key: \"computed_offset_top\",\\n    get: function get() {\\n      return {\\n        transform: \"translate3d(0, calc(-\".concat(this.state.list_height, \"px - 16px), 0px)\")\\n      };\\n    }\\n  }, {\\n    key: \"is_single_option\",\\n    get: function get() {\\n      return Array.isArray(this.props.list) ? this.props.list.length < 2 : // object has less than two props or inner object has less than two props\\n      Object.keys(this.props.list).length && Object.keys(this.props.list).length < 2 && this.props.list[Object.keys(this.props.list)[0]].length < 2;\\n    }\\n  }, {\\n    key: \"container_class_name\",\\n    get: function get() {\\n      return external_classnames_default()(\\'dc-dropdown-container\\', this.props.className, {\\n        \\'dc-dropdown--has-placeholder\\': this.props.placeholder,\\n        \\'dc-dropdown--left\\': this.props.is_alignment_left,\\n        \\'dc-dropdown--show\\': this.state.is_list_visible,\\n        \\'dc-dropdown--disabled\\': this.is_single_option || this.props.disabled\\n      });\\n    }\\n  }, {\\n    key: \"dropdown_display_class_name\",\\n    get: function get() {\\n      return external_classnames_default()(\\'dc-dropdown__display\\', this.props.classNameDisplay, {\\n        \\'dc-dropdown__display--clicked\\': this.state.is_list_visible,\\n        \\'dc-dropdown__display--has-symbol\\': this.props.has_symbol,\\n        \\'dc-dropdown__display--no-border\\': this.props.no_border,\\n        \\'dc-dropdown__display--is-left-text\\': this.props.is_align_text_left\\n      });\\n    }\\n  }, {\\n    key: \"dropdown_list_class_names\",\\n    get: function get() {\\n      return external_classnames_default()(\\'dc-dropdown__list\\', {\\n        \\'dc-dropdown__list--left\\': this.props.is_alignment_left,\\n        \\'dc-dropdown__list--top\\': this.props.is_alignment_top\\n      });\\n    }\\n  }, {\\n    key: \"list_class_names\",\\n    get: function get() {\\n      return external_classnames_default()(\\'dc-list\\', {\\n        \\'dc-list--left\\': this.props.is_alignment_left,\\n        \\'dc-list--large\\': this.props.is_large\\n      });\\n    }\\n  }, {\\n    key: \"transition_class_names\",\\n    get: function get() {\\n      return {\\n        enter: \"dc-dropdown__list--enter\".concat(this.props.is_alignment_left ? \\' dc-dropdown__list--left--enter\\' : \\'\\'),\\n        enterDone: \"dc-dropdown__list--enter-done\".concat(this.props.is_alignment_left ? \\' dc-dropdown__list--left--enter-done\\' : \\'\\'),\\n        exit: \"dc-dropdown__list--exit\".concat(this.props.is_alignment_left ? \\' dc-dropdown__list--left--exit\\' : \\'\\')\\n      };\\n    }\\n  }]);\\n\\n  return Dropdown;\\n}(external_react_[\"Component\"]);\\n\\ndropdown_Dropdown.propTypes = {\\n  className: external_prop_types_default.a.string,\\n  classNameDisplay: external_prop_types_default.a.string,\\n  classNameItems: external_prop_types_default.a.string,\\n  classNameLabel: external_prop_types_default.a.string,\\n  disabled: external_prop_types_default.a.bool,\\n  has_symbol: external_prop_types_default.a.bool,\\n  is_alignment_left: external_prop_types_default.a.bool,\\n  is_large: external_prop_types_default.a.bool,\\n  is_nativepicker: external_prop_types_default.a.bool,\\n  is_nativepicker_visible: external_prop_types_default.a.bool,\\n  label: external_prop_types_default.a.string,\\n  list: dropdown_listPropType(),\\n  name: external_prop_types_default.a.string,\\n  no_border: external_prop_types_default.a.bool,\\n  onChange: external_prop_types_default.a.func,\\n  placeholder: external_prop_types_default.a.string,\\n  value: external_prop_types_default.a.oneOfType([external_prop_types_default.a.number, external_prop_types_default.a.string])\\n};\\n/* harmony default export */ var dropdown = (dropdown_Dropdown);\\n// EXTERNAL MODULE: ./src/components/dropdown/dropdown.scss\\nvar dropdown_dropdown = __webpack_require__(70);\\n\\n// EXTERNAL MODULE: ./src/components/dropdown/list.scss\\nvar dropdown_list = __webpack_require__(71);\\n\\n// CONCATENATED MODULE: ./src/components/dropdown/index.js\\n\\n\\n\\n/* harmony default export */ var components_dropdown = __webpack_exports__[\"default\"] = (dropdown);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///113\\n')},13:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__13__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50L2V4dGVybmFsIFwicmVhY3QtdGlueS1wb3BvdmVyXCI/NzQxMSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzEzX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///13\\n\")},17:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: external \"classnames\"\\nvar external_classnames_ = __webpack_require__(2);\\nvar external_classnames_default = /*#__PURE__*/__webpack_require__.n(external_classnames_);\\n\\n// EXTERNAL MODULE: external \"prop-types\"\\nvar external_prop_types_ = __webpack_require__(0);\\nvar external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(1);\\n\\n// EXTERNAL MODULE: external \"react-tiny-popover\"\\nvar external_react_tiny_popover_ = __webpack_require__(13);\\nvar external_react_tiny_popover_default = /*#__PURE__*/__webpack_require__.n(external_react_tiny_popover_);\\n\\n// EXTERNAL MODULE: ./src/components/icon/index.js\\nvar components_icon = __webpack_require__(6);\\n\\n// CONCATENATED MODULE: ./src/components/popover/popover.jsx\\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\n\\n\\n\\n\\n\\n\\nvar popover_Popover =\\n/*#__PURE__*/\\nfunction (_React$PureComponent) {\\n  _inherits(Popover, _React$PureComponent);\\n\\n  function Popover(props) {\\n    var _this;\\n\\n    _classCallCheck(this, Popover);\\n\\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Popover).call(this, props));\\n\\n    _this.toggleOpen = function () {\\n      _this.setState({\\n        is_open: Boolean(_this.props.message)\\n      });\\n    };\\n\\n    _this.toggleClose = function () {\\n      if (_this.props.is_bubble_hover_enabled) {\\n        _this.toggleIsOpenOnHoverPopoverBubble();\\n      } else {\\n        _this.setState({\\n          is_open: false\\n        });\\n      }\\n    };\\n\\n    _this.onMouseEnter = function () {\\n      _this.setState({\\n        is_bubble_open: true\\n      });\\n    };\\n\\n    _this.onMouseLeave = function () {\\n      _this.setState({\\n        is_bubble_open: false,\\n        is_open: false\\n      });\\n    };\\n\\n    _this.toggleIsOpenOnHoverPopoverBubble = function () {\\n      setTimeout(function () {\\n        // add delay to check if mouse is hovered on popover bubble\\n        _this.setState({\\n          is_open: _this.props.is_bubble_hover_enabled ? _this.state.is_bubble_open : false\\n        });\\n      }, 50);\\n    };\\n\\n    _this.state = {\\n      is_open: false,\\n      is_bubble_open: false,\\n      popover_ref: undefined\\n    };\\n\\n    _this.setWrapperRef = function (ref) {\\n      return _this.wrapper_ref = ref;\\n    };\\n\\n    return _this;\\n  }\\n\\n  _createClass(Popover, [{\\n    key: \"componentDidMount\",\\n    value: function componentDidMount() {\\n      this.setState({\\n        is_open: this.props.has_error\\n      });\\n\\n      if (this.wrapper_ref) {\\n        this.setState({\\n          popover_ref: this.wrapper_ref\\n        });\\n      }\\n    }\\n  }, {\\n    key: \"render\",\\n    value: function render() {\\n      var _this2 = this;\\n\\n      var _this$props = this.props,\\n          alignment = _this$props.alignment,\\n          children = _this$props.children,\\n          className = _this$props.className,\\n          classNameBubble = _this$props.classNameBubble,\\n          classNameTarget = _this$props.classNameTarget,\\n          classNameTargetIcon = _this$props.classNameTargetIcon,\\n          counter = _this$props.counter,\\n          disable_message_icon = _this$props.disable_message_icon,\\n          disable_target_icon = _this$props.disable_target_icon,\\n          has_error = _this$props.has_error,\\n          icon = _this$props.icon,\\n          id = _this$props.id,\\n          is_open = _this$props.is_open,\\n          margin = _this$props.margin,\\n          message = _this$props.message,\\n          zIndex = _this$props.zIndex,\\n          relative_render = _this$props.relative_render;\\n      var has_external_open_state = is_open !== undefined;\\n      var icon_class_name = external_classnames_default()(classNameTargetIcon, icon);\\n      return external_react_[\"createElement\"](\"div\", {\\n        className: external_classnames_default()({\\n          \\'dc-popover__wrapper\\': relative_render\\n        })\\n      }, relative_render && external_react_[\"createElement\"](\"div\", {\\n        className: \"dc-popover__container\",\\n        style: {\\n          zIndex: zIndex || 1\\n        }\\n      }, external_react_[\"createElement\"](\"div\", {\\n        ref: this.setWrapperRef,\\n        className: \"dc-popover__container-relative\"\\n      })), (this.state.popover_ref || !relative_render) && external_react_[\"createElement\"](external_react_tiny_popover_default.a, _extends({\\n        isOpen: is_open !== null && is_open !== void 0 ? is_open : this.state.is_open,\\n        position: alignment,\\n        transitionDuration: 0.25,\\n        padding: margin + 8,\\n        contentDestination: relative_render ? this.state.popover_ref : document.body\\n      }, relative_render ? {\\n        contentLocation: function contentLocation(_ref) {\\n          var targetRect = _ref.targetRect,\\n              popoverRect = _ref.popoverRect,\\n              nudgedLeft = _ref.nudgedLeft;\\n          var screen_width = document.body.clientWidth;\\n          var total_width = targetRect.right + (popoverRect.width - targetRect.width / 2);\\n          var top_offset = 0;\\n          var left_offset = 0;\\n\\n          switch (alignment) {\\n            case \\'left\\':\\n              {\\n                left_offset = Math.abs((popoverRect.height > popoverRect.width ? nudgedLeft : popoverRect.width) + margin) * -1;\\n                top_offset = targetRect.height > popoverRect.height ? (targetRect.height - popoverRect.height) / 2 : (popoverRect.height - targetRect.height) / 2 * -1;\\n                break;\\n              }\\n\\n            case \\'right\\':\\n              {\\n                left_offset = popoverRect.width + margin;\\n                top_offset = targetRect.height > popoverRect.height ? (targetRect.height - popoverRect.height) / 2 : (popoverRect.height - targetRect.height) / 2 * -1;\\n                break;\\n              }\\n\\n            case \\'top\\':\\n              {\\n                left_offset = total_width > screen_width ? Math.abs(total_width - screen_width) * -1 : 0;\\n                top_offset = Math.abs(popoverRect.height + margin) * -1;\\n                break;\\n              }\\n\\n            case \\'bottom\\':\\n              {\\n                left_offset = total_width > screen_width ? Math.abs(total_width - screen_width) * -1 : 0;\\n                top_offset = targetRect.height + margin;\\n                break;\\n              }\\n\\n            default:\\n              break;\\n          }\\n\\n          return {\\n            top: top_offset,\\n            left: left_offset\\n          };\\n        }\\n      } : {\\n        containerStyle: {\\n          zIndex: zIndex || 1\\n        }\\n      }, {\\n        content: function content(_ref2) {\\n          var position = _ref2.position,\\n              targetRect = _ref2.targetRect,\\n              popoverRect = _ref2.popoverRect;\\n          return external_react_[\"createElement\"](external_react_tiny_popover_[\"ArrowContainer\"], {\\n            position: position,\\n            targetRect: targetRect,\\n            popoverRect: popoverRect,\\n            arrowColor: has_error ? \\'var(--status-danger)\\' : \\'var(--general-active)\\',\\n            arrowSize: 5\\n          }, external_react_[\"createElement\"](\"div\", {\\n            id: id,\\n            className: external_classnames_default()(classNameBubble, \\'dc-popover__bubble\\', {\\n              \\'dc-popover__bubble--error\\': has_error\\n            }),\\n            onMouseEnter: _this2.onMouseEnter,\\n            onMouseLeave: _this2.onMouseLeave\\n          }, !disable_message_icon && icon === \\'info\\' && external_react_[\"createElement\"](\"i\", {\\n            className: \"dc-popover__bubble__icon\"\\n          }, external_react_[\"createElement\"](components_icon[\"default\"], {\\n            icon: \"IcInfoBlue\"\\n          })), external_react_[\"createElement\"](\"span\", {\\n            className: external_classnames_default()(\\'dc-popover__bubble__text\\', {\\n              \\'dc-popover__bubble__text--error\\': has_error\\n            })\\n          }, message)));\\n        }\\n      }), external_react_[\"createElement\"](\"div\", {\\n        className: external_classnames_default()(\\'dc-popover\\', className),\\n        id: id,\\n        onMouseEnter: has_external_open_state ? undefined : this.toggleOpen,\\n        onMouseLeave: has_external_open_state ? undefined : this.toggleClose\\n      }, external_react_[\"createElement\"](\"div\", {\\n        className: external_classnames_default()(classNameTarget, \\'dc-popover__target\\')\\n      }, !disable_target_icon && external_react_[\"createElement\"](\"i\", {\\n        className: message ? \\'dc-popover__target__icon\\' : \\'dc-popover__target__icon--disabled\\'\\n      }, icon === \\'info\\' && external_react_[\"createElement\"](components_icon[\"default\"], {\\n        icon: \"IcInfoOutline\",\\n        className: icon_class_name\\n      }), icon === \\'question\\' && external_react_[\"createElement\"](components_icon[\"default\"], {\\n        icon: \"IcUnknown\",\\n        className: icon_class_name\\n      }), icon === \\'dot\\' && external_react_[\"createElement\"](components_icon[\"default\"], {\\n        icon: \"IcCircle\",\\n        className: icon_class_name,\\n        size: 4\\n      }), icon === \\'counter\\' && external_react_[\"createElement\"](\"span\", {\\n        className: icon_class_name\\n      }, counter)), children))));\\n    }\\n  }]);\\n\\n  return Popover;\\n}(external_react_[\"PureComponent\"]);\\n\\npopover_Popover.defaultProps = {\\n  portal_container: \\'deriv_app\\',\\n  margin: 0,\\n  relative_render: false\\n};\\npopover_Popover.propTypes = {\\n  alignment: external_prop_types_default.a.string,\\n  children: external_prop_types_default.a.node,\\n  className: external_prop_types_default.a.string,\\n  classNameBubble: external_prop_types_default.a.string,\\n  classNameTarget: external_prop_types_default.a.string,\\n  classNameTargetIcon: external_prop_types_default.a.string,\\n  counter: external_prop_types_default.a.number,\\n  disable_message_icon: external_prop_types_default.a.bool,\\n  disable_target_icon: external_prop_types_default.a.bool,\\n  has_error: external_prop_types_default.a.bool,\\n  icon: external_prop_types_default.a.oneOf([\\'info\\', \\'question\\', \\'dot\\', \\'counter\\']),\\n  id: external_prop_types_default.a.string,\\n  is_bubble_hover_enabled: external_prop_types_default.a.bool,\\n  is_open: external_prop_types_default.a.bool,\\n  relative_render: external_prop_types_default.a.bool,\\n  margin: external_prop_types_default.a.number,\\n  message: external_prop_types_default.a.oneOfType([external_prop_types_default.a.node, external_prop_types_default.a.object, external_prop_types_default.a.string]),\\n  portal_container: external_prop_types_default.a.string,\\n  zIndex: external_prop_types_default.a.number\\n};\\n/* harmony default export */ var popover = (popover_Popover);\\n// EXTERNAL MODULE: ./src/components/popover/popover.scss\\nvar popover_popover = __webpack_require__(24);\\n\\n// CONCATENATED MODULE: ./src/components/popover/index.js\\n\\n\\n/* harmony default export */ var components_popover = __webpack_exports__[\"default\"] = (popover);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///17\\n')},19:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: ./src/components/themed-scrollbars/themed-scrollbars.scss\\nvar themed_scrollbars = __webpack_require__(29);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(1);\\n\\n// EXTERNAL MODULE: external \"tt-react-custom-scrollbars\"\\nvar external_tt_react_custom_scrollbars_ = __webpack_require__(20);\\n\\n// CONCATENATED MODULE: ./src/components/themed-scrollbars/themed-scrollbars.jsx\\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\n\\n\\n\\nvar themed_scrollbars_ThemedScrollbars =\\n/*#__PURE__*/\\nfunction (_React$Component) {\\n  _inherits(ThemedScrollbars, _React$Component);\\n\\n  function ThemedScrollbars() {\\n    _classCallCheck(this, ThemedScrollbars);\\n\\n    return _possibleConstructorReturn(this, _getPrototypeOf(ThemedScrollbars).apply(this, arguments));\\n  }\\n\\n  _createClass(ThemedScrollbars, [{\\n    key: \"render\",\\n    value: function render() {\\n      var _this = this;\\n\\n      if (this.props.is_native) return this.props.children;\\n      return external_react_[\"createElement\"](external_tt_react_custom_scrollbars_[\"Scrollbars\"], _extends({\\n        ref: this.props.list_ref,\\n        renderTrackHorizontal: function renderTrackHorizontal(props) {\\n          return external_react_[\"createElement\"](\"div\", _extends({}, props, {\\n            className: \"dc-themed-scrollbars__track--horizontal\",\\n            style: {\\n              display: _this.props.hideHorizontal ? \\'none\\' : \\'block\\'\\n            }\\n          }));\\n        },\\n        renderTrackVertical: function renderTrackVertical(props) {\\n          return external_react_[\"createElement\"](\"div\", _extends({}, props, {\\n            className: \"dc-themed-scrollbars__track--vertical\"\\n          }));\\n        },\\n        renderThumbHorizontal: function renderThumbHorizontal(props) {\\n          return external_react_[\"createElement\"](\"div\", _extends({}, props, {\\n            className: \"dc-themed-scrollbars__thumb--horizontal\"\\n          }));\\n        },\\n        renderThumbVertical: function renderThumbVertical(props) {\\n          return external_react_[\"createElement\"](\"div\", _extends({}, props, {\\n            className: \"dc-themed-scrollbars__thumb--vertical\"\\n          }));\\n        }\\n      }, this.props), this.props.children);\\n    }\\n  }]);\\n\\n  return ThemedScrollbars;\\n}(external_react_[\"Component\"]);\\n\\n/* harmony default export */ var themed_scrollbars_themed_scrollbars = (themed_scrollbars_ThemedScrollbars);\\n// CONCATENATED MODULE: ./src/components/themed-scrollbars/index.js\\n/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, \"default\", function() { return themed_scrollbars_themed_scrollbars; });\\n\\n\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvdGhlbWVkLXNjcm9sbGJhcnMvdGhlbWVkLXNjcm9sbGJhcnMuanN4PzQxMjEiLCJ3ZWJwYWNrOi8vQGRlcml2L2NvbXBvbmVudC8uL3NyYy9jb21wb25lbnRzL3RoZW1lZC1zY3JvbGxiYXJzL2luZGV4LmpzPzc1MzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFNjcm9sbGJhcnMgfSBmcm9tICd0dC1yZWFjdC1jdXN0b20tc2Nyb2xsYmFycyc7XG5cbmNsYXNzIFRoZW1lZFNjcm9sbGJhcnMgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuaXNfbmF0aXZlKSByZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxTY3JvbGxiYXJzXG4gICAgICAgICAgICAgICAgcmVmPXt0aGlzLnByb3BzLmxpc3RfcmVmfVxuICAgICAgICAgICAgICAgIHJlbmRlclRyYWNrSG9yaXpvbnRhbD17cHJvcHMgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9J2RjLXRoZW1lZC1zY3JvbGxiYXJzX190cmFjay0taG9yaXpvbnRhbCdcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IGRpc3BsYXk6IHRoaXMucHJvcHMuaGlkZUhvcml6b250YWwgPyAnbm9uZScgOiAnYmxvY2snIH19XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICByZW5kZXJUcmFja1ZlcnRpY2FsPXtwcm9wcyA9PiA8ZGl2IHsuLi5wcm9wc30gY2xhc3NOYW1lPSdkYy10aGVtZWQtc2Nyb2xsYmFyc19fdHJhY2stLXZlcnRpY2FsJyAvPn1cbiAgICAgICAgICAgICAgICByZW5kZXJUaHVtYkhvcml6b250YWw9e3Byb3BzID0+IDxkaXYgey4uLnByb3BzfSBjbGFzc05hbWU9J2RjLXRoZW1lZC1zY3JvbGxiYXJzX190aHVtYi0taG9yaXpvbnRhbCcgLz59XG4gICAgICAgICAgICAgICAgcmVuZGVyVGh1bWJWZXJ0aWNhbD17cHJvcHMgPT4gPGRpdiB7Li4ucHJvcHN9IGNsYXNzTmFtZT0nZGMtdGhlbWVkLXNjcm9sbGJhcnNfX3RodW1iLS12ZXJ0aWNhbCcgLz59XG4gICAgICAgICAgICAgICAgey4uLnRoaXMucHJvcHN9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgICAgICAgICA8L1Njcm9sbGJhcnM+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBUaGVtZWRTY3JvbGxiYXJzO1xuIiwiaW1wb3J0ICcuL3RoZW1lZC1zY3JvbGxiYXJzLnNjc3MnO1xuXG5leHBvcnQgZGVmYXVsdCBmcm9tICcuL3RoZW1lZC1zY3JvbGxiYXJzLmpzeCc7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBR0E7QUFDQTtBQUFBO0FBQUE7QUFIQTtBQURBO0FBT0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBWEE7QUFpQkE7Ozs7QUFyQkE7QUFDQTtBQXVCQTs7QUMzQkE7QUFBQTtBQUVBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///19\\n')},2:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__2__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCI/YWFhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzJfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///2\\n\")},20:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__20__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50L2V4dGVybmFsIFwidHQtcmVhY3QtY3VzdG9tLXNjcm9sbGJhcnNcIj8xMTY3Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9fMjBfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///20\\n\")},24:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvcG9wb3Zlci9wb3BvdmVyLnNjc3M/ZWVkNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNTkxMDg0MTg2NTEyXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWhvdC1sb2FkZXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJmaWxlTWFwXCI6XCJ7ZmlsZU5hbWV9XCJ9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpOztcbiAgICB9XG4gICJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxnQ0FLQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///24\\n\")},27:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__27__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50L2V4dGVybmFsIFwiQGRlcml2L3NoYXJlZC91dGlscy9jdXJyZW5jeVwiP2ViZmIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18yN19fOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///27\\n\")},29:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvdGhlbWVkLXNjcm9sbGJhcnMvdGhlbWVkLXNjcm9sbGJhcnMuc2Nzcz8zNjJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE1OTEwODQxODUyMzJcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtaG90LWxvYWRlci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImZpbGVNYXBcIjpcIntmaWxlTmFtZX1cIn0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7O1xuICAgIH1cbiAgIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGdDQUtBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///29\\n\")},4:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval(\"/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);\\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var _deriv_shared_utils_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);\\n/* harmony import */ var _deriv_shared_utils_string__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_deriv_shared_utils_string__WEBPACK_IMPORTED_MODULE_3__);\\n/* harmony import */ var _deriv_shared_utils_url__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7);\\n/* harmony import */ var _deriv_shared_utils_url__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_deriv_shared_utils_url__WEBPACK_IMPORTED_MODULE_4__);\\n\\n\\n\\n\\n\\n\\nvar Icon = function Icon(_ref) {\\n  var className = _ref.className,\\n      color = _ref.color,\\n      custom_color = _ref.custom_color,\\n      height = _ref.height,\\n      icon = _ref.icon,\\n      id = _ref.id,\\n      onClick = _ref.onClick,\\n      onMouseEnter = _ref.onMouseEnter,\\n      onMouseLeave = _ref.onMouseLeave,\\n      _ref$size = _ref.size,\\n      size = _ref$size === void 0 ? 16 : _ref$size,\\n      width = _ref.width;\\n  if (!icon) return null;\\n  var filename = 'common';\\n  var filenames = /^Ic(Currency|Tradetype|Mt5|Flag|Underlying)/g.exec(icon);\\n\\n  if (filenames) {\\n    filename = Object(_deriv_shared_utils_string__WEBPACK_IMPORTED_MODULE_3__[\\\"getKebabCase\\\"])(filenames[1]);\\n  }\\n\\n  var sprite_id = icon.startsWith('IcUnderlying') ? \\\"ic-underlying-\\\".concat(icon.split('IcUnderlying')[1].toUpperCase()) : Object(_deriv_shared_utils_string__WEBPACK_IMPORTED_MODULE_3__[\\\"getKebabCase\\\"])(icon);\\n  return react__WEBPACK_IMPORTED_MODULE_2__[\\\"createElement\\\"](\\\"svg\\\", {\\n    xmlns: \\\"http://www.w3.org/2000/svg\\\",\\n    xmlnsXlink: \\\"http://www.w3.org/1999/xlink\\\",\\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('dc-icon', className, {\\n      'dc-icon--active': color === 'active',\\n      'dc-icon--disabled': color === 'disabled',\\n      'dc-icon--green': color === 'green' || icon === 'IcProfit',\\n      'dc-icon--red': color === 'red' || icon === 'IcLoss',\\n      'dc-icon--secondary': color === 'secondary',\\n      'dc-icon--brand': color === 'brand'\\n    }),\\n    height: height || size,\\n    id: id,\\n    width: width || size,\\n    onClick: onClick,\\n    onMouseEnter: onMouseEnter,\\n    onMouseLeave: onMouseLeave,\\n    style: custom_color ? {\\n      '--fill-color1': custom_color\\n    } : undefined\\n  }, react__WEBPACK_IMPORTED_MODULE_2__[\\\"createElement\\\"](\\\"use\\\", {\\n    xlinkHref: \\\"\\\".concat(Object(_deriv_shared_utils_url__WEBPACK_IMPORTED_MODULE_4__[\\\"getUrlBase\\\"])(\\\"/public/images/sprite/\\\".concat(filename, \\\".svg\\\")), \\\"#\\\").concat(sprite_id)\\n  }));\\n};\\n\\nIcon.propTypes = {\\n  className: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string]),\\n  color: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string]),\\n  custom_color: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\\n  height: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string]),\\n  icon: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\\n  onClick: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,\\n  onMouseEnter: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,\\n  onMouseLeave: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,\\n  size: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string]),\\n  width: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string])\\n};\\n/* harmony default export */ __webpack_exports__[\\\"a\\\"] = (react__WEBPACK_IMPORTED_MODULE_2__[\\\"memo\\\"](Icon));//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvLi9zcmMvY29tcG9uZW50cy9pY29uL2ljb24uanN4PzJhYTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGdldEtlYmFiQ2FzZSB9IGZyb20gJ0BkZXJpdi9zaGFyZWQvdXRpbHMvc3RyaW5nJztcbmltcG9ydCB7IGdldFVybEJhc2UgfSBmcm9tICdAZGVyaXYvc2hhcmVkL3V0aWxzL3VybCc7XG5cbmNvbnN0IEljb24gPSAoe1xuICAgIGNsYXNzTmFtZSxcbiAgICBjb2xvcixcbiAgICBjdXN0b21fY29sb3IsXG4gICAgaGVpZ2h0LFxuICAgIGljb24sXG4gICAgaWQsXG4gICAgb25DbGljayxcbiAgICBvbk1vdXNlRW50ZXIsXG4gICAgb25Nb3VzZUxlYXZlLFxuICAgIHNpemUgPSAxNixcbiAgICB3aWR0aCxcbn0pID0+IHtcbiAgICBpZiAoIWljb24pIHJldHVybiBudWxsO1xuXG4gICAgbGV0IGZpbGVuYW1lID0gJ2NvbW1vbic7XG4gICAgY29uc3QgZmlsZW5hbWVzID0gL15JYyhDdXJyZW5jeXxUcmFkZXR5cGV8TXQ1fEZsYWd8VW5kZXJseWluZykvZy5leGVjKGljb24pO1xuICAgIGlmIChmaWxlbmFtZXMpIHtcbiAgICAgICAgZmlsZW5hbWUgPSBnZXRLZWJhYkNhc2UoZmlsZW5hbWVzWzFdKTtcbiAgICB9XG5cbiAgICBjb25zdCBzcHJpdGVfaWQgPSBpY29uLnN0YXJ0c1dpdGgoJ0ljVW5kZXJseWluZycpXG4gICAgICAgID8gYGljLXVuZGVybHlpbmctJHtpY29uLnNwbGl0KCdJY1VuZGVybHlpbmcnKVsxXS50b1VwcGVyQ2FzZSgpfWBcbiAgICAgICAgOiBnZXRLZWJhYkNhc2UoaWNvbik7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8c3ZnXG4gICAgICAgICAgICB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnXG4gICAgICAgICAgICB4bWxuc1hsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJ1xuICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdkYy1pY29uJywgY2xhc3NOYW1lLCB7XG4gICAgICAgICAgICAgICAgJ2RjLWljb24tLWFjdGl2ZSc6IGNvbG9yID09PSAnYWN0aXZlJyxcbiAgICAgICAgICAgICAgICAnZGMtaWNvbi0tZGlzYWJsZWQnOiBjb2xvciA9PT0gJ2Rpc2FibGVkJyxcbiAgICAgICAgICAgICAgICAnZGMtaWNvbi0tZ3JlZW4nOiBjb2xvciA9PT0gJ2dyZWVuJyB8fCBpY29uID09PSAnSWNQcm9maXQnLFxuICAgICAgICAgICAgICAgICdkYy1pY29uLS1yZWQnOiBjb2xvciA9PT0gJ3JlZCcgfHwgaWNvbiA9PT0gJ0ljTG9zcycsXG4gICAgICAgICAgICAgICAgJ2RjLWljb24tLXNlY29uZGFyeSc6IGNvbG9yID09PSAnc2Vjb25kYXJ5JyxcbiAgICAgICAgICAgICAgICAnZGMtaWNvbi0tYnJhbmQnOiBjb2xvciA9PT0gJ2JyYW5kJyxcbiAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgaGVpZ2h0PXtoZWlnaHQgfHwgc2l6ZX1cbiAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgIHdpZHRoPXt3aWR0aCB8fCBzaXplfVxuICAgICAgICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgICAgICAgIG9uTW91c2VFbnRlcj17b25Nb3VzZUVudGVyfVxuICAgICAgICAgICAgb25Nb3VzZUxlYXZlPXtvbk1vdXNlTGVhdmV9XG4gICAgICAgICAgICBzdHlsZT17XG4gICAgICAgICAgICAgICAgY3VzdG9tX2NvbG9yXG4gICAgICAgICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnLS1maWxsLWNvbG9yMSc6IGN1c3RvbV9jb2xvcixcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkXG4gICAgICAgICAgICB9XG4gICAgICAgID5cbiAgICAgICAgICAgIDx1c2UgeGxpbmtIcmVmPXtgJHtnZXRVcmxCYXNlKGAvcHVibGljL2ltYWdlcy9zcHJpdGUvJHtmaWxlbmFtZX0uc3ZnYCl9IyR7c3ByaXRlX2lkfWB9IC8+XG4gICAgICAgIDwvc3ZnPlxuICAgICk7XG59O1xuXG5JY29uLnByb3BUeXBlcyA9IHtcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5zdHJpbmddKSxcbiAgICBjb2xvcjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmJvb2wsIFByb3BUeXBlcy5zdHJpbmddKSxcbiAgICBjdXN0b21fY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgaGVpZ2h0OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSksXG4gICAgaWNvbjogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbk1vdXNlRW50ZXI6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uTW91c2VMZWF2ZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgc2l6ZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZ10pLFxuICAgIHdpZHRoOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSksXG59O1xuXG5leHBvcnQgZGVmYXVsdCBSZWFjdC5tZW1vKEljb24pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBWUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFOQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFEQTtBQW5CQTtBQXlCQTtBQUFBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFWQTtBQWFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///4\\n\")},49:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__49__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50L2V4dGVybmFsIFwiQGRlcml2L3NoYXJlZC91dGlscy9vc1wiPzczYWMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX180OV9fOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///49\\n\")},5:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__5__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJAZGVyaXYvc2hhcmVkL3V0aWxzL3N0cmluZ1wiP2U2MDgiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX181X187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///5\\n\")},6:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _icon_jsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\\n/* harmony import */ var _icon_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);\\n/* harmony import */ var _icon_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_icon_scss__WEBPACK_IMPORTED_MODULE_1__);\\n\\n\\n/* harmony default export */ __webpack_exports__[\"default\"] = (_icon_jsx__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"]);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvLi9zcmMvY29tcG9uZW50cy9pY29uL2luZGV4LmpzP2FlNjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEljb24gZnJvbSAnLi9pY29uLmpzeCc7XG5pbXBvcnQgJy4vaWNvbi5zY3NzJztcblxuZXhwb3J0IGRlZmF1bHQgSWNvbjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///6\\n')},7:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__7__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJAZGVyaXYvc2hhcmVkL3V0aWxzL3VybFwiP2RhNjYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX183X187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///7\\n\")},70:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvZHJvcGRvd24vZHJvcGRvd24uc2Nzcz8wZjUwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE1OTEwODQxODQyMTlcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtaG90LWxvYWRlci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImZpbGVNYXBcIjpcIntmaWxlTmFtZX1cIn0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7O1xuICAgIH1cbiAgIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGdDQUtBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///70\\n\")},71:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvZHJvcGRvd24vbGlzdC5zY3NzP2ZhZjYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTU5MTA4NDE4NDI0NlxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1ob3QtbG9hZGVyL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wiZmlsZU1hcFwiOlwie2ZpbGVOYW1lfVwifSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTs7XG4gICAgfVxuICAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsZ0NBS0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///71\\n\")},8:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvLi9zcmMvY29tcG9uZW50cy9pY29uL2ljb24uc2Nzcz83YjFhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE1OTEwODQxODQ2MTVcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtaG90LWxvYWRlci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImZpbGVNYXBcIjpcIntmaWxlTmFtZX1cIn0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7O1xuICAgIH1cbiAgIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGdDQUtBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///8\\n\")},9:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__9__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJyZWFjdC10cmFuc2l0aW9uLWdyb3VwXCI/ZGRlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzlfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///9\\n\")}}).default});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../components/lib/dropdown.js\n");

/***/ }),

/***/ "../../components/lib/fade-wrapper.css":
/*!*******************************************************************!*\
  !*** /var/www/deriv-app/packages/components/lib/fade-wrapper.css ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vY29tcG9uZW50cy9saWIvZmFkZS13cmFwcGVyLmNzcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vdmFyL3d3dy9kZXJpdi1hcHAvcGFja2FnZXMvY29tcG9uZW50cy9saWIvZmFkZS13cmFwcGVyLmNzcz8wN2IxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../components/lib/fade-wrapper.css\n");

/***/ }),

/***/ "../../components/lib/fade-wrapper.js":
/*!******************************************************************!*\
  !*** /var/www/deriv-app/packages/components/lib/fade-wrapper.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(e,n){ true?module.exports=n(__webpack_require__(/*! prop-types */ \"../../components/node_modules/prop-types/index.js\"),__webpack_require__(/*! react */ \"../node_modules/react/index.js\"),__webpack_require__(/*! react-pose */ \"../../components/node_modules/react-pose/dist/react-pose.es.js\")):undefined}(window,function(__WEBPACK_EXTERNAL_MODULE__0__,__WEBPACK_EXTERNAL_MODULE__1__,__WEBPACK_EXTERNAL_MODULE__34__){return function(e){var n={};function t(a){if(n[a])return n[a].exports;var I=n[a]={i:a,l:!1,exports:{}};return e[a].call(I.exports,I,I.exports,t),I.l=!0,I.exports}return t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var I in e)t.d(a,I,function(n){return e[n]}.bind(null,I));return a},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p=\"\",t(t.s=135)}({0:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__0__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJwcm9wLXR5cGVzXCI/MzgzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzBfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///0\\n\")},1:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__1__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18xX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///1\\n\")},135:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: ./src/components/fade-wrapper/fade-wrapper.scss\\nvar fade_wrapper = __webpack_require__(72);\\n\\n// EXTERNAL MODULE: external \"prop-types\"\\nvar external_prop_types_ = __webpack_require__(0);\\nvar external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(1);\\n\\n// EXTERNAL MODULE: external \"react-pose\"\\nvar external_react_pose_ = __webpack_require__(34);\\nvar external_react_pose_default = /*#__PURE__*/__webpack_require__.n(external_react_pose_);\\n\\n// CONCATENATED MODULE: ./src/components/fade-wrapper/fade-wrapper.jsx\\n\\n\\n\\nvar FadeInFromTopDiv = external_react_pose_default.a.div({\\n  enter: {\\n    y: 0,\\n    opacity: 1,\\n    delay: 300,\\n    transition: {\\n      \"default\": {\\n        duration: 250\\n      }\\n    }\\n  },\\n  exit: {\\n    y: -50,\\n    opacity: 0,\\n    transition: {\\n      duration: 250\\n    }\\n  }\\n});\\nvar FadeInFromBottomDiv = external_react_pose_default.a.div({\\n  enter: {\\n    y: 0,\\n    opacity: 1,\\n    delay: 300,\\n    transition: {\\n      \"default\": {\\n        duration: 250\\n      }\\n    }\\n  },\\n  exit: {\\n    y: 50,\\n    opacity: 0,\\n    transition: {\\n      duration: 250\\n    }\\n  }\\n});\\nvar FadeInOnlyDiv = external_react_pose_default.a.div({\\n  enter: {\\n    opacity: 1,\\n    transition: {\\n      duration: 300\\n    }\\n  },\\n  exit: {\\n    opacity: 0,\\n    transition: {\\n      duration: 300\\n    }\\n  }\\n}); // `flipMove={false}` is necessary to fix react-pose bug: https://github.com/Popmotion/popmotion/issues/805\\n\\nvar fade_wrapper_FadeWrapper = function FadeWrapper(_ref) {\\n  var children = _ref.children,\\n      className = _ref.className,\\n      is_visible = _ref.is_visible,\\n      keyname = _ref.keyname,\\n      type = _ref.type;\\n\\n  if (type === \\'top\\') {\\n    return external_react_[\"createElement\"](external_react_pose_[\"PoseGroup\"], {\\n      flipMove: false\\n    }, is_visible && external_react_[\"createElement\"](FadeInFromTopDiv, {\\n      className: className,\\n      key: keyname\\n    }, children));\\n  }\\n\\n  if (type === \\'bottom\\') {\\n    return external_react_[\"createElement\"](external_react_pose_[\"PoseGroup\"], {\\n      flipMove: false\\n    }, is_visible && external_react_[\"createElement\"](FadeInFromBottomDiv, {\\n      className: className,\\n      key: keyname\\n    }, children));\\n  }\\n\\n  return external_react_[\"createElement\"](external_react_pose_[\"PoseGroup\"], {\\n    flipMove: false\\n  }, is_visible && external_react_[\"createElement\"](FadeInOnlyDiv, {\\n    className: className,\\n    key: keyname\\n  }, children));\\n};\\n\\nfade_wrapper_FadeWrapper.propTypes = {\\n  children: external_prop_types_default.a.node,\\n  is_visible: external_prop_types_default.a.bool,\\n  keyname: external_prop_types_default.a.string,\\n  type: external_prop_types_default.a.string\\n};\\n/* harmony default export */ var fade_wrapper_fade_wrapper = (fade_wrapper_FadeWrapper);\\n// CONCATENATED MODULE: ./src/components/fade-wrapper/index.js\\n/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, \"default\", function() { return fade_wrapper_fade_wrapper; });\\n\\n\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2NvbXBvbmVudC8uL3NyYy9jb21wb25lbnRzL2ZhZGUtd3JhcHBlci9mYWRlLXdyYXBwZXIuanN4P2Q1NzkiLCJ3ZWJwYWNrOi8vQGRlcml2L2NvbXBvbmVudC8uL3NyYy9jb21wb25lbnRzL2ZhZGUtd3JhcHBlci9pbmRleC5qcz9mNDg3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHBvc2VkLCB7IFBvc2VHcm91cCB9IGZyb20gJ3JlYWN0LXBvc2UnO1xuXG5jb25zdCBGYWRlSW5Gcm9tVG9wRGl2ID0gcG9zZWQuZGl2KHtcbiAgICBlbnRlcjoge1xuICAgICAgICB5OiAwLFxuICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICBkZWxheTogMzAwLFxuICAgICAgICB0cmFuc2l0aW9uOiB7XG4gICAgICAgICAgICBkZWZhdWx0OiB7IGR1cmF0aW9uOiAyNTAgfSxcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIGV4aXQ6IHtcbiAgICAgICAgeTogLTUwLFxuICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICB0cmFuc2l0aW9uOiB7IGR1cmF0aW9uOiAyNTAgfSxcbiAgICB9LFxufSk7XG5cbmNvbnN0IEZhZGVJbkZyb21Cb3R0b21EaXYgPSBwb3NlZC5kaXYoe1xuICAgIGVudGVyOiB7XG4gICAgICAgIHk6IDAsXG4gICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgIGRlbGF5OiAzMDAsXG4gICAgICAgIHRyYW5zaXRpb246IHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IHsgZHVyYXRpb246IDI1MCB9LFxuICAgICAgICB9LFxuICAgIH0sXG4gICAgZXhpdDoge1xuICAgICAgICB5OiA1MCxcbiAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgdHJhbnNpdGlvbjogeyBkdXJhdGlvbjogMjUwIH0sXG4gICAgfSxcbn0pO1xuXG5jb25zdCBGYWRlSW5Pbmx5RGl2ID0gcG9zZWQuZGl2KHtcbiAgICBlbnRlcjoge1xuICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICB0cmFuc2l0aW9uOiB7IGR1cmF0aW9uOiAzMDAgfSxcbiAgICB9LFxuICAgIGV4aXQ6IHtcbiAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgdHJhbnNpdGlvbjogeyBkdXJhdGlvbjogMzAwIH0sXG4gICAgfSxcbn0pO1xuXG4vLyBgZmxpcE1vdmU9e2ZhbHNlfWAgaXMgbmVjZXNzYXJ5IHRvIGZpeCByZWFjdC1wb3NlIGJ1ZzogaHR0cHM6Ly9naXRodWIuY29tL1BvcG1vdGlvbi9wb3Btb3Rpb24vaXNzdWVzLzgwNVxuY29uc3QgRmFkZVdyYXBwZXIgPSAoeyBjaGlsZHJlbiwgY2xhc3NOYW1lLCBpc192aXNpYmxlLCBrZXluYW1lLCB0eXBlIH0pID0+IHtcbiAgICBpZiAodHlwZSA9PT0gJ3RvcCcpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxQb3NlR3JvdXAgZmxpcE1vdmU9e2ZhbHNlfT5cbiAgICAgICAgICAgICAgICB7aXNfdmlzaWJsZSAmJiAoXG4gICAgICAgICAgICAgICAgICAgIDxGYWRlSW5Gcm9tVG9wRGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBrZXk9e2tleW5hbWV9PlxuICAgICAgICAgICAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgICAgICAgICA8L0ZhZGVJbkZyb21Ub3BEaXY+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvUG9zZUdyb3VwPlxuICAgICAgICApO1xuICAgIH1cbiAgICBpZiAodHlwZSA9PT0gJ2JvdHRvbScpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxQb3NlR3JvdXAgZmxpcE1vdmU9e2ZhbHNlfT5cbiAgICAgICAgICAgICAgICB7aXNfdmlzaWJsZSAmJiAoXG4gICAgICAgICAgICAgICAgICAgIDxGYWRlSW5Gcm9tQm90dG9tRGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBrZXk9e2tleW5hbWV9PlxuICAgICAgICAgICAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgICAgICAgICA8L0ZhZGVJbkZyb21Cb3R0b21EaXY+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvUG9zZUdyb3VwPlxuICAgICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gKFxuICAgICAgICA8UG9zZUdyb3VwIGZsaXBNb3ZlPXtmYWxzZX0+XG4gICAgICAgICAgICB7aXNfdmlzaWJsZSAmJiAoXG4gICAgICAgICAgICAgICAgPEZhZGVJbk9ubHlEaXYgY2xhc3NOYW1lPXtjbGFzc05hbWV9IGtleT17a2V5bmFtZX0+XG4gICAgICAgICAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICAgICAgICA8L0ZhZGVJbk9ubHlEaXY+XG4gICAgICAgICAgICApfVxuICAgICAgICA8L1Bvc2VHcm91cD5cbiAgICApO1xufTtcblxuRmFkZVdyYXBwZXIucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBpc192aXNpYmxlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBrZXluYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBGYWRlV3JhcHBlcjtcbiIsImltcG9ydCAnLi9mYWRlLXdyYXBwZXIuc2Nzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZyb20gJy4vZmFkZS13cmFwcGVyLmpzeCc7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBREE7QUFKQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUhBO0FBVEE7QUFnQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBREE7QUFKQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUhBO0FBVEE7QUFnQkE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRkE7QUFMQTtBQUNBO0FBV0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQU1BO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQU1BO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBT0E7O0FDekZBO0FBQUE7QUFFQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///135\\n')},34:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__34__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50L2V4dGVybmFsIFwicmVhY3QtcG9zZVwiPzk2YjQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18zNF9fOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///34\\n\")},72:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvZmFkZS13cmFwcGVyL2ZhZGUtd3JhcHBlci5zY3NzPzY0YWIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTU5MTA4NDE4NDQxNVxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1ob3QtbG9hZGVyL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wiZmlsZU1hcFwiOlwie2ZpbGVOYW1lfVwifSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTs7XG4gICAgfVxuICAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsZ0NBS0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///72\\n\")}}).default});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../components/lib/fade-wrapper.js\n");

/***/ }),

/***/ "../../components/lib/page-overlay.css":
/*!*******************************************************************!*\
  !*** /var/www/deriv-app/packages/components/lib/page-overlay.css ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vY29tcG9uZW50cy9saWIvcGFnZS1vdmVybGF5LmNzcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vdmFyL3d3dy9kZXJpdi1hcHAvcGFja2FnZXMvY29tcG9uZW50cy9saWIvcGFnZS1vdmVybGF5LmNzcz9jYTcxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../components/lib/page-overlay.css\n");

/***/ }),

/***/ "../../components/lib/page-overlay.js":
/*!******************************************************************!*\
  !*** /var/www/deriv-app/packages/components/lib/page-overlay.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(e,n){ true?module.exports=n(__webpack_require__(/*! prop-types */ \"../../components/node_modules/prop-types/index.js\"),__webpack_require__(/*! react */ \"../node_modules/react/index.js\"),__webpack_require__(/*! classnames */ \"../../components/node_modules/classnames/index.js\"),__webpack_require__(/*! @deriv/shared/utils/string */ \"../../shared/utils/string.js\"),__webpack_require__(/*! @deriv/shared/utils/url */ \"../../shared/utils/url.js\"),__webpack_require__(/*! react-transition-group */ \"../../components/node_modules/react-transition-group/esm/index.js\"),__webpack_require__(/*! react-dom */ \"../node_modules/react-dom/index.js\")):undefined}(window,function(__WEBPACK_EXTERNAL_MODULE__0__,__WEBPACK_EXTERNAL_MODULE__1__,__WEBPACK_EXTERNAL_MODULE__2__,__WEBPACK_EXTERNAL_MODULE__5__,__WEBPACK_EXTERNAL_MODULE__7__,__WEBPACK_EXTERNAL_MODULE__9__,__WEBPACK_EXTERNAL_MODULE__21__){return function(e){var n={};function t(_){if(n[_])return n[_].exports;var r=n[_]={i:_,l:!1,exports:{}};return e[_].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=n,t.d=function(e,n,_){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:_})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var _=Object.create(null);if(t.r(_),Object.defineProperty(_,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var r in e)t.d(_,r,function(n){return e[n]}.bind(null,r));return _},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p=\"\",t(t.s=149)}({0:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__0__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJwcm9wLXR5cGVzXCI/MzgzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzBfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///0\\n\")},1:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__1__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18xX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///1\\n\")},149:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: external \"classnames\"\\nvar external_classnames_ = __webpack_require__(2);\\nvar external_classnames_default = /*#__PURE__*/__webpack_require__.n(external_classnames_);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(1);\\n\\n// EXTERNAL MODULE: external \"react-dom\"\\nvar external_react_dom_ = __webpack_require__(21);\\nvar external_react_dom_default = /*#__PURE__*/__webpack_require__.n(external_react_dom_);\\n\\n// EXTERNAL MODULE: external \"react-transition-group\"\\nvar external_react_transition_group_ = __webpack_require__(9);\\n\\n// EXTERNAL MODULE: external \"prop-types\"\\nvar external_prop_types_ = __webpack_require__(0);\\nvar external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);\\n\\n// EXTERNAL MODULE: ./src/components/icon/icon.jsx\\nvar icon = __webpack_require__(4);\\n\\n// CONCATENATED MODULE: ./src/components/page-overlay/page-overlay.jsx\\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\n\\n\\n\\n\\n\\n\\n\\nvar page_overlay_PageOverlay =\\n/*#__PURE__*/\\nfunction (_React$Component) {\\n  _inherits(PageOverlay, _React$Component);\\n\\n  function PageOverlay() {\\n    var _getPrototypeOf2;\\n\\n    var _this;\\n\\n    _classCallCheck(this, PageOverlay);\\n\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PageOverlay)).call.apply(_getPrototypeOf2, [this].concat(args)));\\n    _this.ref = external_react_[\"createRef\"]();\\n\\n    _this.componentDidMount = function () {\\n      if (_this.props.portal_id) {\\n        document.addEventListener(\\'mousedown\\', _this.handleClickOutside);\\n      }\\n    };\\n\\n    _this.componentWillUnmount = function () {\\n      if (_this.props.portal_id) {\\n        document.removeEventListener(\\'mousedown\\', _this.handleClickOutside);\\n      }\\n    };\\n\\n    _this.handleClickOutside = function (event) {\\n      var path = event.path || event.composedPath && event.composedPath();\\n\\n      if (_this.props.portal_id && _this.props.is_open && _this.ref.current && !path.some(function (el) {\\n        return el === _this.ref.current;\\n      })) {\\n        _this.props.onClickClose();\\n      }\\n    };\\n\\n    return _this;\\n  }\\n\\n  _createClass(PageOverlay, [{\\n    key: \"render\",\\n    value: function render() {\\n      var _this$props = this.props,\\n          children = _this$props.children,\\n          header = _this$props.header,\\n          id = _this$props.id,\\n          onClickClose = _this$props.onClickClose,\\n          portal_id = _this$props.portal_id,\\n          is_open = _this$props.is_open;\\n      var el_page_overlay = external_react_[\"createElement\"](\"div\", {\\n        ref: this.ref,\\n        id: id,\\n        className: external_classnames_default()(\\'dc-page-overlay\\', {\\n          \\'dc-page-overlay-portal\\': !!portal_id\\n        })\\n      }, header && external_react_[\"createElement\"](\"div\", {\\n        className: \"dc-page-overlay__header\"\\n      }, external_react_[\"createElement\"](\"div\", {\\n        className: \"dc-page-overlay__header-wrapper\"\\n      }, external_react_[\"createElement\"](\"div\", {\\n        className: \"dc-page-overlay__header-title\"\\n      }, header), external_react_[\"createElement\"](\"div\", {\\n        className: \"dc-page-overlay__header-close\",\\n        onClick: onClickClose || window.history.back\\n      }, external_react_[\"createElement\"](icon[\"a\" /* default */], {\\n        icon: \"IcCross\"\\n      })))), external_react_[\"createElement\"](\"div\", {\\n        className: \"dc-page-overlay__content\"\\n      }, children));\\n\\n      if (portal_id) {\\n        return external_react_dom_default.a.createPortal(external_react_[\"createElement\"](external_react_transition_group_[\"CSSTransition\"], {\\n          appear: true,\\n          \"in\": is_open,\\n          timeout: 250,\\n          classNames: {\\n            appear: \\'dc-page-overlay--enter\\',\\n            enter: \\'dc-page-overlay--enter\\',\\n            enterDone: \\'dc-page-overlay--enter-done\\',\\n            exit: \\'dc-page-overlay--exit\\'\\n          },\\n          unmountOnExit: true\\n        }, el_page_overlay), document.getElementById(portal_id));\\n      }\\n\\n      return external_react_[\"createElement\"](external_react_[\"Fragment\"], null, el_page_overlay);\\n    }\\n  }]);\\n\\n  return PageOverlay;\\n}(external_react_[\"Component\"]);\\n\\npage_overlay_PageOverlay.defaultProps = {\\n  has_side_note: false\\n};\\npage_overlay_PageOverlay.propTypes = {\\n  children: external_prop_types_default.a.oneOfType([external_prop_types_default.a.arrayOf(external_prop_types_default.a.node), external_prop_types_default.a.node]),\\n  header: external_prop_types_default.a.oneOfType([external_prop_types_default.a.string, external_prop_types_default.a.node]),\\n  id: external_prop_types_default.a.oneOfType([external_prop_types_default.a.string, external_prop_types_default.a.number]),\\n  onClickClose: external_prop_types_default.a.func,\\n  portal_id: external_prop_types_default.a.string,\\n  is_open: external_prop_types_default.a.bool\\n};\\n/* harmony default export */ var page_overlay = (page_overlay_PageOverlay);\\n// EXTERNAL MODULE: ./src/components/page-overlay/page-overlay.scss\\nvar page_overlay_page_overlay = __webpack_require__(87);\\n\\n// CONCATENATED MODULE: ./src/components/page-overlay/index.js\\n\\n\\n/* harmony default export */ var components_page_overlay = __webpack_exports__[\"default\"] = (page_overlay);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2NvbXBvbmVudC8uL3NyYy9jb21wb25lbnRzL3BhZ2Utb3ZlcmxheS9wYWdlLW92ZXJsYXkuanN4P2YwMGUiLCJ3ZWJwYWNrOi8vQGRlcml2L2NvbXBvbmVudC8uL3NyYy9jb21wb25lbnRzL3BhZ2Utb3ZlcmxheS9pbmRleC5qcz9hNTc0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IHsgQ1NTVHJhbnNpdGlvbiB9IGZyb20gJ3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBJY29uIGZyb20gJ0NvbXBvbmVudHMvaWNvbi9pY29uLmpzeCc7XG5cbmNsYXNzIFBhZ2VPdmVybGF5IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICByZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcblxuICAgIGNvbXBvbmVudERpZE1vdW50ID0gKCkgPT4ge1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5wb3J0YWxfaWQpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMuaGFuZGxlQ2xpY2tPdXRzaWRlKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBjb21wb25lbnRXaWxsVW5tb3VudCA9ICgpID0+IHtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMucG9ydGFsX2lkKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCB0aGlzLmhhbmRsZUNsaWNrT3V0c2lkZSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgaGFuZGxlQ2xpY2tPdXRzaWRlID0gZXZlbnQgPT4ge1xuICAgICAgICBjb25zdCBwYXRoID0gZXZlbnQucGF0aCB8fCAoZXZlbnQuY29tcG9zZWRQYXRoICYmIGV2ZW50LmNvbXBvc2VkUGF0aCgpKTtcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgdGhpcy5wcm9wcy5wb3J0YWxfaWQgJiZcbiAgICAgICAgICAgIHRoaXMucHJvcHMuaXNfb3BlbiAmJlxuICAgICAgICAgICAgdGhpcy5yZWYuY3VycmVudCAmJlxuICAgICAgICAgICAgIXBhdGguc29tZShlbCA9PiBlbCA9PT0gdGhpcy5yZWYuY3VycmVudClcbiAgICAgICAgKSB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uQ2xpY2tDbG9zZSgpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBjaGlsZHJlbiwgaGVhZGVyLCBpZCwgb25DbGlja0Nsb3NlLCBwb3J0YWxfaWQsIGlzX29wZW4gfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgY29uc3QgZWxfcGFnZV9vdmVybGF5ID0gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIHJlZj17dGhpcy5yZWZ9XG4gICAgICAgICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcygnZGMtcGFnZS1vdmVybGF5Jywge1xuICAgICAgICAgICAgICAgICAgICAnZGMtcGFnZS1vdmVybGF5LXBvcnRhbCc6ICEhcG9ydGFsX2lkLFxuICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtoZWFkZXIgJiYgKFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZGMtcGFnZS1vdmVybGF5X19oZWFkZXInPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2RjLXBhZ2Utb3ZlcmxheV9faGVhZGVyLXdyYXBwZXInPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdkYy1wYWdlLW92ZXJsYXlfX2hlYWRlci10aXRsZSc+e2hlYWRlcn08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nZGMtcGFnZS1vdmVybGF5X19oZWFkZXItY2xvc2UnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tDbG9zZSB8fCB3aW5kb3cuaGlzdG9yeS5iYWNrfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEljb24gaWNvbj0nSWNDcm9zcycgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdkYy1wYWdlLW92ZXJsYXlfX2NvbnRlbnQnPntjaGlsZHJlbn08L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuXG4gICAgICAgIGlmIChwb3J0YWxfaWQpIHtcbiAgICAgICAgICAgIHJldHVybiBSZWFjdERPTS5jcmVhdGVQb3J0YWwoXG4gICAgICAgICAgICAgICAgPENTU1RyYW5zaXRpb25cbiAgICAgICAgICAgICAgICAgICAgYXBwZWFyXG4gICAgICAgICAgICAgICAgICAgIGluPXtpc19vcGVufVxuICAgICAgICAgICAgICAgICAgICB0aW1lb3V0PXsyNTB9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZXM9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgIGFwcGVhcjogJ2RjLXBhZ2Utb3ZlcmxheS0tZW50ZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW50ZXI6ICdkYy1wYWdlLW92ZXJsYXktLWVudGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVudGVyRG9uZTogJ2RjLXBhZ2Utb3ZlcmxheS0tZW50ZXItZG9uZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBleGl0OiAnZGMtcGFnZS1vdmVybGF5LS1leGl0JyxcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgdW5tb3VudE9uRXhpdFxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAge2VsX3BhZ2Vfb3ZlcmxheX1cbiAgICAgICAgICAgICAgICA8L0NTU1RyYW5zaXRpb24+LFxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHBvcnRhbF9pZClcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gPD57ZWxfcGFnZV9vdmVybGF5fTwvPjtcbiAgICB9XG59XG5cblBhZ2VPdmVybGF5LmRlZmF1bHRQcm9wcyA9IHtcbiAgICBoYXNfc2lkZV9ub3RlOiBmYWxzZSxcbn07XG5cblBhZ2VPdmVybGF5LnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm5vZGUpLCBQcm9wVHlwZXMubm9kZV0pLFxuICAgIGhlYWRlcjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgICBpZDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm51bWJlcl0pLFxuICAgIG9uQ2xpY2tDbG9zZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgcG9ydGFsX2lkOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGlzX29wZW46IFByb3BUeXBlcy5ib29sLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgUGFnZU92ZXJsYXk7XG4iLCJpbXBvcnQgUGFnZU92ZXJsYXkgZnJvbSAnLi9wYWdlLW92ZXJsYXkuanN4JztcbmltcG9ydCAnLi9wYWdlLW92ZXJsYXkuc2Nzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IFBhZ2VPdmVybGF5O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUlBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUhBO0FBUUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUZBO0FBSUE7QUFBQTtBQUtBO0FBQUE7QUFDQTtBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFNQTtBQVZBO0FBZ0JBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBNUVBO0FBQ0E7QUE4RUE7QUFDQTtBQURBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFOQTtBQVNBOzs7OztBQ25HQTtBQUNBO0FBRUEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///149\\n')},2:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__2__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCI/YWFhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzJfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///2\\n\")},21:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__21__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50L2V4dGVybmFsIFwicmVhY3QtZG9tXCI/NWU5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzIxX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///21\\n\")},4:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval(\"/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);\\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var _deriv_shared_utils_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);\\n/* harmony import */ var _deriv_shared_utils_string__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_deriv_shared_utils_string__WEBPACK_IMPORTED_MODULE_3__);\\n/* harmony import */ var _deriv_shared_utils_url__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7);\\n/* harmony import */ var _deriv_shared_utils_url__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_deriv_shared_utils_url__WEBPACK_IMPORTED_MODULE_4__);\\n\\n\\n\\n\\n\\n\\nvar Icon = function Icon(_ref) {\\n  var className = _ref.className,\\n      color = _ref.color,\\n      custom_color = _ref.custom_color,\\n      height = _ref.height,\\n      icon = _ref.icon,\\n      id = _ref.id,\\n      onClick = _ref.onClick,\\n      onMouseEnter = _ref.onMouseEnter,\\n      onMouseLeave = _ref.onMouseLeave,\\n      _ref$size = _ref.size,\\n      size = _ref$size === void 0 ? 16 : _ref$size,\\n      width = _ref.width;\\n  if (!icon) return null;\\n  var filename = 'common';\\n  var filenames = /^Ic(Currency|Tradetype|Mt5|Flag|Underlying)/g.exec(icon);\\n\\n  if (filenames) {\\n    filename = Object(_deriv_shared_utils_string__WEBPACK_IMPORTED_MODULE_3__[\\\"getKebabCase\\\"])(filenames[1]);\\n  }\\n\\n  var sprite_id = icon.startsWith('IcUnderlying') ? \\\"ic-underlying-\\\".concat(icon.split('IcUnderlying')[1].toUpperCase()) : Object(_deriv_shared_utils_string__WEBPACK_IMPORTED_MODULE_3__[\\\"getKebabCase\\\"])(icon);\\n  return react__WEBPACK_IMPORTED_MODULE_2__[\\\"createElement\\\"](\\\"svg\\\", {\\n    xmlns: \\\"http://www.w3.org/2000/svg\\\",\\n    xmlnsXlink: \\\"http://www.w3.org/1999/xlink\\\",\\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('dc-icon', className, {\\n      'dc-icon--active': color === 'active',\\n      'dc-icon--disabled': color === 'disabled',\\n      'dc-icon--green': color === 'green' || icon === 'IcProfit',\\n      'dc-icon--red': color === 'red' || icon === 'IcLoss',\\n      'dc-icon--secondary': color === 'secondary',\\n      'dc-icon--brand': color === 'brand'\\n    }),\\n    height: height || size,\\n    id: id,\\n    width: width || size,\\n    onClick: onClick,\\n    onMouseEnter: onMouseEnter,\\n    onMouseLeave: onMouseLeave,\\n    style: custom_color ? {\\n      '--fill-color1': custom_color\\n    } : undefined\\n  }, react__WEBPACK_IMPORTED_MODULE_2__[\\\"createElement\\\"](\\\"use\\\", {\\n    xlinkHref: \\\"\\\".concat(Object(_deriv_shared_utils_url__WEBPACK_IMPORTED_MODULE_4__[\\\"getUrlBase\\\"])(\\\"/public/images/sprite/\\\".concat(filename, \\\".svg\\\")), \\\"#\\\").concat(sprite_id)\\n  }));\\n};\\n\\nIcon.propTypes = {\\n  className: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string]),\\n  color: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string]),\\n  custom_color: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\\n  height: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string]),\\n  icon: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\\n  onClick: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,\\n  onMouseEnter: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,\\n  onMouseLeave: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,\\n  size: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string]),\\n  width: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string])\\n};\\n/* harmony default export */ __webpack_exports__[\\\"a\\\"] = (react__WEBPACK_IMPORTED_MODULE_2__[\\\"memo\\\"](Icon));//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvLi9zcmMvY29tcG9uZW50cy9pY29uL2ljb24uanN4PzJhYTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGdldEtlYmFiQ2FzZSB9IGZyb20gJ0BkZXJpdi9zaGFyZWQvdXRpbHMvc3RyaW5nJztcbmltcG9ydCB7IGdldFVybEJhc2UgfSBmcm9tICdAZGVyaXYvc2hhcmVkL3V0aWxzL3VybCc7XG5cbmNvbnN0IEljb24gPSAoe1xuICAgIGNsYXNzTmFtZSxcbiAgICBjb2xvcixcbiAgICBjdXN0b21fY29sb3IsXG4gICAgaGVpZ2h0LFxuICAgIGljb24sXG4gICAgaWQsXG4gICAgb25DbGljayxcbiAgICBvbk1vdXNlRW50ZXIsXG4gICAgb25Nb3VzZUxlYXZlLFxuICAgIHNpemUgPSAxNixcbiAgICB3aWR0aCxcbn0pID0+IHtcbiAgICBpZiAoIWljb24pIHJldHVybiBudWxsO1xuXG4gICAgbGV0IGZpbGVuYW1lID0gJ2NvbW1vbic7XG4gICAgY29uc3QgZmlsZW5hbWVzID0gL15JYyhDdXJyZW5jeXxUcmFkZXR5cGV8TXQ1fEZsYWd8VW5kZXJseWluZykvZy5leGVjKGljb24pO1xuICAgIGlmIChmaWxlbmFtZXMpIHtcbiAgICAgICAgZmlsZW5hbWUgPSBnZXRLZWJhYkNhc2UoZmlsZW5hbWVzWzFdKTtcbiAgICB9XG5cbiAgICBjb25zdCBzcHJpdGVfaWQgPSBpY29uLnN0YXJ0c1dpdGgoJ0ljVW5kZXJseWluZycpXG4gICAgICAgID8gYGljLXVuZGVybHlpbmctJHtpY29uLnNwbGl0KCdJY1VuZGVybHlpbmcnKVsxXS50b1VwcGVyQ2FzZSgpfWBcbiAgICAgICAgOiBnZXRLZWJhYkNhc2UoaWNvbik7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8c3ZnXG4gICAgICAgICAgICB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnXG4gICAgICAgICAgICB4bWxuc1hsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJ1xuICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdkYy1pY29uJywgY2xhc3NOYW1lLCB7XG4gICAgICAgICAgICAgICAgJ2RjLWljb24tLWFjdGl2ZSc6IGNvbG9yID09PSAnYWN0aXZlJyxcbiAgICAgICAgICAgICAgICAnZGMtaWNvbi0tZGlzYWJsZWQnOiBjb2xvciA9PT0gJ2Rpc2FibGVkJyxcbiAgICAgICAgICAgICAgICAnZGMtaWNvbi0tZ3JlZW4nOiBjb2xvciA9PT0gJ2dyZWVuJyB8fCBpY29uID09PSAnSWNQcm9maXQnLFxuICAgICAgICAgICAgICAgICdkYy1pY29uLS1yZWQnOiBjb2xvciA9PT0gJ3JlZCcgfHwgaWNvbiA9PT0gJ0ljTG9zcycsXG4gICAgICAgICAgICAgICAgJ2RjLWljb24tLXNlY29uZGFyeSc6IGNvbG9yID09PSAnc2Vjb25kYXJ5JyxcbiAgICAgICAgICAgICAgICAnZGMtaWNvbi0tYnJhbmQnOiBjb2xvciA9PT0gJ2JyYW5kJyxcbiAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgaGVpZ2h0PXtoZWlnaHQgfHwgc2l6ZX1cbiAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgIHdpZHRoPXt3aWR0aCB8fCBzaXplfVxuICAgICAgICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgICAgICAgIG9uTW91c2VFbnRlcj17b25Nb3VzZUVudGVyfVxuICAgICAgICAgICAgb25Nb3VzZUxlYXZlPXtvbk1vdXNlTGVhdmV9XG4gICAgICAgICAgICBzdHlsZT17XG4gICAgICAgICAgICAgICAgY3VzdG9tX2NvbG9yXG4gICAgICAgICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnLS1maWxsLWNvbG9yMSc6IGN1c3RvbV9jb2xvcixcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkXG4gICAgICAgICAgICB9XG4gICAgICAgID5cbiAgICAgICAgICAgIDx1c2UgeGxpbmtIcmVmPXtgJHtnZXRVcmxCYXNlKGAvcHVibGljL2ltYWdlcy9zcHJpdGUvJHtmaWxlbmFtZX0uc3ZnYCl9IyR7c3ByaXRlX2lkfWB9IC8+XG4gICAgICAgIDwvc3ZnPlxuICAgICk7XG59O1xuXG5JY29uLnByb3BUeXBlcyA9IHtcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5zdHJpbmddKSxcbiAgICBjb2xvcjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmJvb2wsIFByb3BUeXBlcy5zdHJpbmddKSxcbiAgICBjdXN0b21fY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgaGVpZ2h0OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSksXG4gICAgaWNvbjogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbk1vdXNlRW50ZXI6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uTW91c2VMZWF2ZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgc2l6ZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZ10pLFxuICAgIHdpZHRoOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSksXG59O1xuXG5leHBvcnQgZGVmYXVsdCBSZWFjdC5tZW1vKEljb24pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBWUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFOQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFEQTtBQW5CQTtBQXlCQTtBQUFBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFWQTtBQWFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///4\\n\")},5:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__5__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJAZGVyaXYvc2hhcmVkL3V0aWxzL3N0cmluZ1wiP2U2MDgiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX181X187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///5\\n\")},7:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__7__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJAZGVyaXYvc2hhcmVkL3V0aWxzL3VybFwiP2RhNjYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX183X187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///7\\n\")},87:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvcGFnZS1vdmVybGF5L3BhZ2Utb3ZlcmxheS5zY3NzP2Y1OWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTU5MTA4NDE4NjY1NFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1ob3QtbG9hZGVyL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wiZmlsZU1hcFwiOlwie2ZpbGVOYW1lfVwifSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTs7XG4gICAgfVxuICAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsZ0NBS0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///87\\n\")},9:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__9__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJyZWFjdC10cmFuc2l0aW9uLWdyb3VwXCI/ZGRlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzlfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///9\\n\")}}).default});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../components/lib/page-overlay.js\n");

/***/ }),

/***/ "../../components/lib/table.css":
/*!************************************************************!*\
  !*** /var/www/deriv-app/packages/components/lib/table.css ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vY29tcG9uZW50cy9saWIvdGFibGUuY3NzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy92YXIvd3d3L2Rlcml2LWFwcC9wYWNrYWdlcy9jb21wb25lbnRzL2xpYi90YWJsZS5jc3M/MGNhNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../components/lib/table.css\n");

/***/ }),

/***/ "../../components/lib/table.js":
/*!***********************************************************!*\
  !*** /var/www/deriv-app/packages/components/lib/table.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(e,t){ true?module.exports=t(__webpack_require__(/*! prop-types */ \"../../components/node_modules/prop-types/index.js\"),__webpack_require__(/*! react */ \"../node_modules/react/index.js\"),__webpack_require__(/*! classnames */ \"../../components/node_modules/classnames/index.js\"),__webpack_require__(/*! tt-react-custom-scrollbars */ \"../../components/node_modules/tt-react-custom-scrollbars/lib/index.js\")):undefined}(window,function(__WEBPACK_EXTERNAL_MODULE__0__,__WEBPACK_EXTERNAL_MODULE__1__,__WEBPACK_EXTERNAL_MODULE__2__,__WEBPACK_EXTERNAL_MODULE__20__){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var c=t[r]={i:r,l:!1,exports:{}};return e[r].call(c.exports,c,c.exports,n),c.l=!0,c.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var c in e)n.d(r,c,function(t){return e[t]}.bind(null,c));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=111)}({0:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__0__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJwcm9wLXR5cGVzXCI/MzgzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzBfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///0\\n\")},1:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__1__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18xX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///1\\n\")},111:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(1);\\n\\n// EXTERNAL MODULE: external \"classnames\"\\nvar external_classnames_ = __webpack_require__(2);\\nvar external_classnames_default = /*#__PURE__*/__webpack_require__.n(external_classnames_);\\n\\n// EXTERNAL MODULE: external \"prop-types\"\\nvar external_prop_types_ = __webpack_require__(0);\\nvar external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);\\n\\n// CONCATENATED MODULE: ./src/components/table/table-head.jsx\\n\\n\\n\\n\\nvar table_head_Head = function Head(_ref) {\\n  var children = _ref.children,\\n      align = _ref.align,\\n      className = _ref.className,\\n      fixed = _ref.fixed;\\n  return external_react_[\"createElement\"](\"div\", {\\n    role: \"columnheader\",\\n    className: external_classnames_default()(\\'dc-table__head\\', className, {\\n      \\'dc-table__cell--right\\': align === \\'right\\',\\n      \\'dc-table__cell--fixed\\': fixed\\n    })\\n  }, children);\\n};\\n\\ntable_head_Head.propTypes = {\\n  align: external_prop_types_default.a.oneOf([\\'left\\', \\'right\\']),\\n  children: external_prop_types_default.a.node,\\n  className: external_prop_types_default.a.string,\\n  fixed: external_prop_types_default.a.bool\\n};\\n/* harmony default export */ var table_head = (table_head_Head);\\n// CONCATENATED MODULE: ./src/components/table/table-header.jsx\\n\\n\\n\\n\\nvar table_header_Header = function Header(_ref) {\\n  var children = _ref.children,\\n      className = _ref.className;\\n  return external_react_[\"createElement\"](\"div\", {\\n    role: \"rowgroup\",\\n    className: external_classnames_default()(\\'dc-table__header\\', className)\\n  }, children);\\n};\\n\\ntable_header_Header.propTypes = {\\n  children: external_prop_types_default.a.node.isRequired,\\n  className: external_prop_types_default.a.string\\n};\\n/* harmony default export */ var table_header = (table_header_Header);\\n// CONCATENATED MODULE: ./src/components/table/table-body.jsx\\n\\n\\nvar table_body_Body = function Body(_ref) {\\n  var children = _ref.children;\\n  return external_react_[\"createElement\"](\"div\", {\\n    role: \"rowgroup\"\\n  }, children);\\n};\\n\\n/* harmony default export */ var table_body = (table_body_Body);\\n// CONCATENATED MODULE: ./src/components/table/table-row.jsx\\n\\n\\n\\n\\nvar table_row_Row = function Row(_ref) {\\n  var children = _ref.children,\\n      className = _ref.className,\\n      has_hover = _ref.has_hover;\\n  return external_react_[\"createElement\"](\"div\", {\\n    role: \"row\",\\n    className: external_classnames_default()(\\'dc-table__row\\', className, {\\n      \\'dc-table__row--hover\\': has_hover\\n    })\\n  }, children);\\n};\\n\\ntable_row_Row.propTypes = {\\n  children: external_prop_types_default.a.node.isRequired,\\n  className: external_prop_types_default.a.string,\\n  has_hover: external_prop_types_default.a.bool\\n};\\n/* harmony default export */ var table_row = (table_row_Row);\\n// CONCATENATED MODULE: ./src/components/table/table-cell.jsx\\n\\n\\n\\n\\nvar table_cell_Cell = function Cell(_ref) {\\n  var children = _ref.children,\\n      _ref$align = _ref.align,\\n      align = _ref$align === void 0 ? \\'left\\' : _ref$align,\\n      className = _ref.className,\\n      fixed = _ref.fixed;\\n  return external_react_[\"createElement\"](\"div\", {\\n    role: \"cell\",\\n    className: external_classnames_default()(\\'dc-table__cell\\', className, {\\n      \\'dc-table__cell--right\\': align === \\'right\\',\\n      \\'dc-table__cell--fixed\\': fixed\\n    })\\n  }, children);\\n};\\n\\ntable_cell_Cell.propTypes = {\\n  align: external_prop_types_default.a.oneOf([\\'left\\', \\'right\\']),\\n  children: external_prop_types_default.a.node,\\n  className: external_prop_types_default.a.string,\\n  fixed: external_prop_types_default.a.bool\\n};\\n/* harmony default export */ var table_cell = (table_cell_Cell);\\n// EXTERNAL MODULE: ./src/components/themed-scrollbars/index.js + 1 modules\\nvar themed_scrollbars = __webpack_require__(19);\\n\\n// CONCATENATED MODULE: ./src/components/table/table.jsx\\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\n\\n\\n\\n\\n\\n\\n\\n // TODO: update the <Table /> component to fit with the DataTable in Trader\\n\\nvar table_Table =\\n/*#__PURE__*/\\nfunction (_React$Component) {\\n  _inherits(Table, _React$Component);\\n\\n  function Table() {\\n    _classCallCheck(this, Table);\\n\\n    return _possibleConstructorReturn(this, _getPrototypeOf(Table).apply(this, arguments));\\n  }\\n\\n  _createClass(Table, [{\\n    key: \"render\",\\n    value: function render() {\\n      return external_react_[\"createElement\"](\"div\", {\\n        role: \"table\",\\n        className: external_classnames_default()(\\'dc-table\\', this.props.className, {\\n          \\'dc-table--scroll\\': this.props.fixed\\n        })\\n      }, this.props.fixed ? external_react_[\"createElement\"](themed_scrollbars[\"default\"], null, this.props.children) : this.props.children);\\n    }\\n  }]);\\n\\n  return Table;\\n}(external_react_[\"Component\"]);\\n\\ntable_Table.Head = table_head;\\ntable_Table.Header = table_header;\\ntable_Table.Body = table_body;\\ntable_Table.Row = table_row;\\ntable_Table.Cell = table_cell; // TODO add footer\\n\\n/* harmony default export */ var table = (table_Table);\\n// EXTERNAL MODULE: ./src/components/table/table.scss\\nvar table_table = __webpack_require__(97);\\n\\n// CONCATENATED MODULE: ./src/components/table/index.js\\n\\n\\n/* harmony default export */ var components_table = __webpack_exports__[\"default\"] = (table);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTExLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2NvbXBvbmVudC8uL3NyYy9jb21wb25lbnRzL3RhYmxlL3RhYmxlLWhlYWQuanN4PzVhMjUiLCJ3ZWJwYWNrOi8vQGRlcml2L2NvbXBvbmVudC8uL3NyYy9jb21wb25lbnRzL3RhYmxlL3RhYmxlLWhlYWRlci5qc3g/MmI5ZCIsIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvdGFibGUvdGFibGUtYm9keS5qc3g/YTZjZCIsIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvdGFibGUvdGFibGUtcm93LmpzeD85MjI3Iiwid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvLi9zcmMvY29tcG9uZW50cy90YWJsZS90YWJsZS1jZWxsLmpzeD83NTE0Iiwid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvLi9zcmMvY29tcG9uZW50cy90YWJsZS90YWJsZS5qc3g/NWJmNyIsIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvdGFibGUvaW5kZXguanM/ZThjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5jb25zdCBIZWFkID0gKHsgY2hpbGRyZW4sIGFsaWduLCBjbGFzc05hbWUsIGZpeGVkIH0pID0+IChcbiAgICA8ZGl2XG4gICAgICAgIHJvbGU9J2NvbHVtbmhlYWRlcidcbiAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdkYy10YWJsZV9faGVhZCcsIGNsYXNzTmFtZSwge1xuICAgICAgICAgICAgJ2RjLXRhYmxlX19jZWxsLS1yaWdodCc6IGFsaWduID09PSAncmlnaHQnLFxuICAgICAgICAgICAgJ2RjLXRhYmxlX19jZWxsLS1maXhlZCc6IGZpeGVkLFxuICAgICAgICB9KX1cbiAgICA+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2Rpdj5cbik7XG5cbkhlYWQucHJvcFR5cGVzID0ge1xuICAgIGFsaWduOiBQcm9wVHlwZXMub25lT2YoWydsZWZ0JywgJ3JpZ2h0J10pLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZml4ZWQ6IFByb3BUeXBlcy5ib29sLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgSGVhZDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmNvbnN0IEhlYWRlciA9ICh7IGNoaWxkcmVuLCBjbGFzc05hbWUgfSkgPT4gKFxuICAgIDxkaXYgcm9sZT0ncm93Z3JvdXAnIGNsYXNzTmFtZT17Y2xhc3NOYW1lcygnZGMtdGFibGVfX2hlYWRlcicsIGNsYXNzTmFtZSl9PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgPC9kaXY+XG4pO1xuXG5IZWFkZXIucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkLFxuICAgIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEhlYWRlcjtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IEJvZHkgPSAoeyBjaGlsZHJlbiB9KSA9PiA8ZGl2IHJvbGU9J3Jvd2dyb3VwJz57Y2hpbGRyZW59PC9kaXY+O1xuXG5leHBvcnQgZGVmYXVsdCBCb2R5O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuY29uc3QgUm93ID0gKHsgY2hpbGRyZW4sIGNsYXNzTmFtZSwgaGFzX2hvdmVyIH0pID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2XG4gICAgICAgICAgICByb2xlPSdyb3cnXG4gICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ2RjLXRhYmxlX19yb3cnLCBjbGFzc05hbWUsIHtcbiAgICAgICAgICAgICAgICAnZGMtdGFibGVfX3Jvdy0taG92ZXInOiBoYXNfaG92ZXIsXG4gICAgICAgICAgICB9KX1cbiAgICAgICAgPlxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L2Rpdj5cbiAgICApO1xufTtcblxuUm93LnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUuaXNSZXF1aXJlZCxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgaGFzX2hvdmVyOiBQcm9wVHlwZXMuYm9vbCxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFJvdztcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmNvbnN0IENlbGwgPSAoeyBjaGlsZHJlbiwgYWxpZ24gPSAnbGVmdCcsIGNsYXNzTmFtZSwgZml4ZWQgfSkgPT4gKFxuICAgIDxkaXZcbiAgICAgICAgcm9sZT0nY2VsbCdcbiAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdkYy10YWJsZV9fY2VsbCcsIGNsYXNzTmFtZSwge1xuICAgICAgICAgICAgJ2RjLXRhYmxlX19jZWxsLS1yaWdodCc6IGFsaWduID09PSAncmlnaHQnLFxuICAgICAgICAgICAgJ2RjLXRhYmxlX19jZWxsLS1maXhlZCc6IGZpeGVkLFxuICAgICAgICB9KX1cbiAgICA+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2Rpdj5cbik7XG5cbkNlbGwucHJvcFR5cGVzID0ge1xuICAgIGFsaWduOiBQcm9wVHlwZXMub25lT2YoWydsZWZ0JywgJ3JpZ2h0J10pLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZml4ZWQ6IFByb3BUeXBlcy5ib29sLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2VsbDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBIZWFkIGZyb20gJy4vdGFibGUtaGVhZC5qc3gnO1xuaW1wb3J0IEhlYWRlciBmcm9tICcuL3RhYmxlLWhlYWRlci5qc3gnO1xuaW1wb3J0IEJvZHkgZnJvbSAnLi90YWJsZS1ib2R5LmpzeCc7XG5pbXBvcnQgUm93IGZyb20gJy4vdGFibGUtcm93LmpzeCc7XG5pbXBvcnQgQ2VsbCBmcm9tICcuL3RhYmxlLWNlbGwuanN4JztcbmltcG9ydCBUaGVtZWRTY3JvbGxiYXJzIGZyb20gJy4uL3RoZW1lZC1zY3JvbGxiYXJzJztcblxuLy8gVE9ETzogdXBkYXRlIHRoZSA8VGFibGUgLz4gY29tcG9uZW50IHRvIGZpdCB3aXRoIHRoZSBEYXRhVGFibGUgaW4gVHJhZGVyXG5jbGFzcyBUYWJsZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIHJvbGU9J3RhYmxlJ1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcygnZGMtdGFibGUnLCB0aGlzLnByb3BzLmNsYXNzTmFtZSwge1xuICAgICAgICAgICAgICAgICAgICAnZGMtdGFibGUtLXNjcm9sbCc6IHRoaXMucHJvcHMuZml4ZWQsXG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3RoaXMucHJvcHMuZml4ZWQgPyA8VGhlbWVkU2Nyb2xsYmFycz57dGhpcy5wcm9wcy5jaGlsZHJlbn08L1RoZW1lZFNjcm9sbGJhcnM+IDogdGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuVGFibGUuSGVhZCA9IEhlYWQ7XG5UYWJsZS5IZWFkZXIgPSBIZWFkZXI7XG5UYWJsZS5Cb2R5ID0gQm9keTtcblRhYmxlLlJvdyA9IFJvdztcblRhYmxlLkNlbGwgPSBDZWxsO1xuLy8gVE9ETyBhZGQgZm9vdGVyXG5cbmV4cG9ydCBkZWZhdWx0IFRhYmxlO1xuIiwiaW1wb3J0IFRhYmxlIGZyb20gJy4vdGFibGUuanN4JztcbmltcG9ydCAnLi90YWJsZS5zY3NzJztcblxuZXhwb3J0IGRlZmF1bHQgVGFibGU7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBRkE7QUFEQTtBQUNBO0FBV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBT0E7O0FDdkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFEQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBRkE7QUFLQTs7QUNmQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTs7QUNKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFEQTtBQUZBO0FBU0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTs7QUN2QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFGQTtBQURBO0FBQ0E7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFPQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUN2QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7Ozs7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBREE7QUFGQTtBQVNBOzs7O0FBWkE7QUFDQTtBQWNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7OztBQ2hDQTtBQUNBO0FBRUEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///111\\n')},19:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: ./src/components/themed-scrollbars/themed-scrollbars.scss\\nvar themed_scrollbars = __webpack_require__(29);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(1);\\n\\n// EXTERNAL MODULE: external \"tt-react-custom-scrollbars\"\\nvar external_tt_react_custom_scrollbars_ = __webpack_require__(20);\\n\\n// CONCATENATED MODULE: ./src/components/themed-scrollbars/themed-scrollbars.jsx\\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\n\\n\\n\\nvar themed_scrollbars_ThemedScrollbars =\\n/*#__PURE__*/\\nfunction (_React$Component) {\\n  _inherits(ThemedScrollbars, _React$Component);\\n\\n  function ThemedScrollbars() {\\n    _classCallCheck(this, ThemedScrollbars);\\n\\n    return _possibleConstructorReturn(this, _getPrototypeOf(ThemedScrollbars).apply(this, arguments));\\n  }\\n\\n  _createClass(ThemedScrollbars, [{\\n    key: \"render\",\\n    value: function render() {\\n      var _this = this;\\n\\n      if (this.props.is_native) return this.props.children;\\n      return external_react_[\"createElement\"](external_tt_react_custom_scrollbars_[\"Scrollbars\"], _extends({\\n        ref: this.props.list_ref,\\n        renderTrackHorizontal: function renderTrackHorizontal(props) {\\n          return external_react_[\"createElement\"](\"div\", _extends({}, props, {\\n            className: \"dc-themed-scrollbars__track--horizontal\",\\n            style: {\\n              display: _this.props.hideHorizontal ? \\'none\\' : \\'block\\'\\n            }\\n          }));\\n        },\\n        renderTrackVertical: function renderTrackVertical(props) {\\n          return external_react_[\"createElement\"](\"div\", _extends({}, props, {\\n            className: \"dc-themed-scrollbars__track--vertical\"\\n          }));\\n        },\\n        renderThumbHorizontal: function renderThumbHorizontal(props) {\\n          return external_react_[\"createElement\"](\"div\", _extends({}, props, {\\n            className: \"dc-themed-scrollbars__thumb--horizontal\"\\n          }));\\n        },\\n        renderThumbVertical: function renderThumbVertical(props) {\\n          return external_react_[\"createElement\"](\"div\", _extends({}, props, {\\n            className: \"dc-themed-scrollbars__thumb--vertical\"\\n          }));\\n        }\\n      }, this.props), this.props.children);\\n    }\\n  }]);\\n\\n  return ThemedScrollbars;\\n}(external_react_[\"Component\"]);\\n\\n/* harmony default export */ var themed_scrollbars_themed_scrollbars = (themed_scrollbars_ThemedScrollbars);\\n// CONCATENATED MODULE: ./src/components/themed-scrollbars/index.js\\n/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, \"default\", function() { return themed_scrollbars_themed_scrollbars; });\\n\\n\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvdGhlbWVkLXNjcm9sbGJhcnMvdGhlbWVkLXNjcm9sbGJhcnMuanN4PzQxMjEiLCJ3ZWJwYWNrOi8vQGRlcml2L2NvbXBvbmVudC8uL3NyYy9jb21wb25lbnRzL3RoZW1lZC1zY3JvbGxiYXJzL2luZGV4LmpzPzc1MzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFNjcm9sbGJhcnMgfSBmcm9tICd0dC1yZWFjdC1jdXN0b20tc2Nyb2xsYmFycyc7XG5cbmNsYXNzIFRoZW1lZFNjcm9sbGJhcnMgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuaXNfbmF0aXZlKSByZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxTY3JvbGxiYXJzXG4gICAgICAgICAgICAgICAgcmVmPXt0aGlzLnByb3BzLmxpc3RfcmVmfVxuICAgICAgICAgICAgICAgIHJlbmRlclRyYWNrSG9yaXpvbnRhbD17cHJvcHMgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9J2RjLXRoZW1lZC1zY3JvbGxiYXJzX190cmFjay0taG9yaXpvbnRhbCdcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IGRpc3BsYXk6IHRoaXMucHJvcHMuaGlkZUhvcml6b250YWwgPyAnbm9uZScgOiAnYmxvY2snIH19XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICByZW5kZXJUcmFja1ZlcnRpY2FsPXtwcm9wcyA9PiA8ZGl2IHsuLi5wcm9wc30gY2xhc3NOYW1lPSdkYy10aGVtZWQtc2Nyb2xsYmFyc19fdHJhY2stLXZlcnRpY2FsJyAvPn1cbiAgICAgICAgICAgICAgICByZW5kZXJUaHVtYkhvcml6b250YWw9e3Byb3BzID0+IDxkaXYgey4uLnByb3BzfSBjbGFzc05hbWU9J2RjLXRoZW1lZC1zY3JvbGxiYXJzX190aHVtYi0taG9yaXpvbnRhbCcgLz59XG4gICAgICAgICAgICAgICAgcmVuZGVyVGh1bWJWZXJ0aWNhbD17cHJvcHMgPT4gPGRpdiB7Li4ucHJvcHN9IGNsYXNzTmFtZT0nZGMtdGhlbWVkLXNjcm9sbGJhcnNfX3RodW1iLS12ZXJ0aWNhbCcgLz59XG4gICAgICAgICAgICAgICAgey4uLnRoaXMucHJvcHN9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgICAgICAgICA8L1Njcm9sbGJhcnM+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBUaGVtZWRTY3JvbGxiYXJzO1xuIiwiaW1wb3J0ICcuL3RoZW1lZC1zY3JvbGxiYXJzLnNjc3MnO1xuXG5leHBvcnQgZGVmYXVsdCBmcm9tICcuL3RoZW1lZC1zY3JvbGxiYXJzLmpzeCc7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBR0E7QUFDQTtBQUFBO0FBQUE7QUFIQTtBQURBO0FBT0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBWEE7QUFpQkE7Ozs7QUFyQkE7QUFDQTtBQXVCQTs7QUMzQkE7QUFBQTtBQUVBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///19\\n')},2:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__2__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9jb21wb25lbnQvZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCI/YWFhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzJfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///2\\n\")},20:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__20__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50L2V4dGVybmFsIFwidHQtcmVhY3QtY3VzdG9tLXNjcm9sbGJhcnNcIj8xMTY3Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9fMjBfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///20\\n\")},29:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvdGhlbWVkLXNjcm9sbGJhcnMvdGhlbWVkLXNjcm9sbGJhcnMuc2Nzcz8zNjJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE1OTEwODQxODUyMzJcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtaG90LWxvYWRlci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImZpbGVNYXBcIjpcIntmaWxlTmFtZX1cIn0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7O1xuICAgIH1cbiAgIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGdDQUtBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///29\\n\")},97:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY29tcG9uZW50Ly4vc3JjL2NvbXBvbmVudHMvdGFibGUvdGFibGUuc2Nzcz83MzQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE1OTEwODQxODU5ODhcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtaG90LWxvYWRlci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImZpbGVNYXBcIjpcIntmaWxlTmFtZX1cIn0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7O1xuICAgIH1cbiAgIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGdDQUtBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///97\\n\")}}).default});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../components/lib/table.js\n");

/***/ })

}]);